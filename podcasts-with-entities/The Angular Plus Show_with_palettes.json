{
    "copyright": "Copyright ng-conf",
    "description": "The Angular Plus Show is the home of ng-conf's official all-Angular podcast. Come here to stay up to date on the latest changes in the Angular community. Expect to laugh and cry with us as we talk about our experiences as Angular developers.",
    "feedUrl": "https://www.spreaker.com/show/4175221/episodes/feed",
    "image": {
        "link": "https://www.spreaker.com/show/angular-show",
        "title": "The Angular Plus Show",
        "url": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg"
    },
    "items": [
        {
            "content": "In our second installment on Microfrontend (MFE) Architecture with Angular Joel Denning, the founder and core contributor for Single SPA teaches Jennifer and Brian the approach to building MFEs with Single SPA. Joel gives us a brief introduction to Single SPA and how it came about, along with the challenges he was trying to solve at the time. We also learn from Joel a few strategies for sharing dependencies, such as module federation or SystemJS.<br /><br />The biggest takeaway from this episode is that MFE architecture requires independent deployments. That means you should be able to deploy a single SPA without having to deploy all applications in the MFE. Of course, there are other opportunities to tackle when building an MFE, including server rendering, sharing dependencies, and sharing components that we discuss.<br /><br />Part 2 of our series on MFEs is jam-packed with knowledge as well as tips and tricks for tackling the complexities of building at scale with microfrontends.<br /><br /><a href=\"https://twitter.com/Joelbdenning\" rel=\"noopener\">https://twitter.com/Joelbdenning</a>",
            "contentSnippet": "In our second installment on Microfrontend (MFE) Architecture with Angular Joel Denning, the founder and core contributor for Single SPA teaches Jennifer and Brian the approach to building MFEs with Single SPA. Joel gives us a brief introduction to Single SPA and how it came about, along with the challenges he was trying to solve at the time. We also learn from Joel a few strategies for sharing dependencies, such as module federation or SystemJS.\nThe biggest takeaway from this episode is that MFE architecture requires independent deployments. That means you should be able to deploy a single SPA without having to deploy all applications in the MFE. Of course, there are other opportunities to tackle when building an MFE, including server rendering, sharing dependencies, and sharing components that we discuss.\nPart 2 of our series on MFEs is jam-packed with knowledge as well as tips and tricks for tackling the complexities of building at scale with microfrontends.\nhttps://twitter.com/Joelbdenning",
            "enclosure": {
                "length": "59924933",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/49480181/ap_show_s3e5_joel_denning_single_spa_edit_2.mp3"
            },
            "guid": "https://api.spreaker.com/episode/49480181",
            "isoDate": "2022-04-20T13:15:02.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3746",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,coder,coding,developer,mfe,microfrontends,ngconf,ng-conf,ngconf2022,programmer,programming,singlespa,systemjs,systemsjs",
                "subtitle": "In our second installment on Microfrontend (MFE) Architecture with Angular Joel Denning, the founder and core contributor for Single SPA teaches Jennifer and Brian the approach to building MFEs with Single SPA. Joel gives us a brief introduction to...",
                "summary": "In our second installment on Microfrontend (MFE) Architecture with Angular Joel Denning, the founder and core contributor for Single SPA teaches Jennifer and Brian the approach to building MFEs with Single SPA. Joel gives us a brief introduction to Single SPA and how it came about, along with the challenges he was trying to solve at the time. We also learn from Joel a few strategies for sharing dependencies, such as module federation or SystemJS.<br /><br />The biggest takeaway from this episode is that MFE architecture requires independent deployments. That means you should be able to deploy a single SPA without having to deploy all applications in the MFE. Of course, there are other opportunities to tackle when building an MFE, including server rendering, sharing dependencies, and sharing components that we discuss.<br /><br />Part 2 of our series on MFEs is jam-packed with knowledge as well as tips and tricks for tackling the complexities of building at scale with microfrontends.<br /><br /><a href=\"https://twitter.com/Joelbdenning\" rel=\"noopener\">https://twitter.com/Joelbdenning</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/ap-show-s3e5-joel-denning-single-spa-edi",
            "pubDate": "Wed, 20 Apr 2022 13:15:02 +0000",
            "title": "E077 - MFE Episode 2: Single SPA",
            "entities": {
                "ORDINAL": [
                    "second"
                ],
                "ORG": [
                    "Microfrontend",
                    "module federation or",
                    "MFE",
                    "MFE",
                    "MFE",
                    "href=\"https://twitter.com/Joelbdenning\" rel=\"noopener\">https://twitter.com/Joelbdenning</a"
                ],
                "PERSON": [
                    "Angular Joel Denning",
                    "Jennifer",
                    "Brian",
                    "Joel"
                ],
                "CARDINAL": [
                    "2"
                ]
            }
        },
        {
            "content": "How do you decide if your project or company should go with Micro Frontends Approach? Understanding how these concepts scale is crucial at an enterprise level. In this episode, we chat with Luca Mezzalira, who has tackled this very question with numerous teams and sheds some light on how to think about the architectural considerations and distributed systems in general. <br /><br /><a href=\"https://lucamezzalira.com/\" rel=\"noopener\">https://lucamezzalira.com/</a><br /><a href=\"https://www.buildingmicrofrontends.com/\" rel=\"noopener\">https://www.buildingmicrofrontends.com/</a><br /><a href=\"https://www.oreilly.com/pub/au/4426\" rel=\"noopener\">https://www.oreilly.com/pub/au/4426</a><br /><a href=\"https://twitter.com/lucamezzalira\" rel=\"noopener\">https://twitter.com/lucamezzalira</a>",
            "contentSnippet": "How do you decide if your project or company should go with Micro Frontends Approach? Understanding how these concepts scale is crucial at an enterprise level. In this episode, we chat with Luca Mezzalira, who has tackled this very question with numerous teams and sheds some light on how to think about the architectural considerations and distributed systems in general. \nhttps://lucamezzalira.com/\nhttps://www.buildingmicrofrontends.com/\nhttps://www.oreilly.com/pub/au/4426\nhttps://twitter.com/lucamezzalira",
            "enclosure": {
                "length": "66617273",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/49416184/ap_show_s3e4_what_are_mfes_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/49416184",
            "isoDate": "2022-04-13T12:15:02.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4164",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,angularplusshow,angularshow,code,coder,developer,enterprise,microfrontend,microfrontends,ng,ngconf,ng-conf,programmer,programming",
                "subtitle": "How do you decide if your project or company should go with Micro Frontends Approach? Understanding how these concepts scale is crucial at an enterprise level. In this episode, we chat with Luca Mezzalira, who has tackled this very question with...",
                "summary": "How do you decide if your project or company should go with Micro Frontends Approach? Understanding how these concepts scale is crucial at an enterprise level. In this episode, we chat with Luca Mezzalira, who has tackled this very question with numerous teams and sheds some light on how to think about the architectural considerations and distributed systems in general. <br /><br /><a href=\"https://lucamezzalira.com/\" rel=\"noopener\">https://lucamezzalira.com/</a><br /><a href=\"https://www.buildingmicrofrontends.com/\" rel=\"noopener\">https://www.buildingmicrofrontends.com/</a><br /><a href=\"https://www.oreilly.com/pub/au/4426\" rel=\"noopener\">https://www.oreilly.com/pub/au/4426</a><br /><a href=\"https://twitter.com/lucamezzalira\" rel=\"noopener\">https://twitter.com/lucamezzalira</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/ap-show-s3e4-what-are-mfes-edit-1",
            "pubDate": "Wed, 13 Apr 2022 12:15:02 +0000",
            "title": "E076 - MFEs Episode 1: What are MFEs?",
            "entities": {
                "ORG": [
                    "Micro Frontends Approach",
                    "href=\"https://twitter.com"
                ],
                "PERSON": [
                    "Luca Mezzalira"
                ]
            }
        },
        {
            "content": "Since the beginning of Angular, Joe Eames has been an integral part of teaching millions of new developers through his courses on Pluralsight and his Angular conference, ng-conf.  In this episode, we talk with Joe about effective strategies to learn new skills, retain knowledge, and the importance of immersion and community and their impact on career growth. <br /><br />ng-conf.org <br /><a href=\"mailto:info@ng-conf.org\">info@ng-conf.org</a> <br />@josepheames<br /><a href=\"https://app.pluralsight.com/profile/author/joe-eames\" rel=\"noopener\">https://app.pluralsight.com/profile/author/joe-eames</a>",
            "contentSnippet": "Since the beginning of Angular, Joe Eames has been an integral part of teaching millions of new developers through his courses on Pluralsight and his Angular conference, ng-conf.  In this episode, we talk with Joe about effective strategies to learn new skills, retain knowledge, and the importance of immersion and community and their impact on career growth. \nng-conf.org \ninfo@ng-conf.org \n@josepheames\nhttps://app.pluralsight.com/profile/author/joe-eames",
            "enclosure": {
                "length": "61536177",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/49330287/ap_show_s3e3_joe_eames_keeping_your_career_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/49330287",
            "isoDate": "2022-04-06T12:30:02.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3846",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,angularv13,career,code,coding,developer,devrel,enterpriseng,joeeames,liveloveapp,ngchampions,ngconf,ng-conf,ngconf2022,ng-conf2022,programmer,programming,reliableweb",
                "subtitle": "Since the beginning of Angular, Joe Eames has been an integral part of teaching millions of new developers through his courses on Pluralsight and his Angular conference, ng-conf.  In this episode, we talk with Joe about effective strategies to learn...",
                "summary": "Since the beginning of Angular, Joe Eames has been an integral part of teaching millions of new developers through his courses on Pluralsight and his Angular conference, ng-conf.  In this episode, we talk with Joe about effective strategies to learn new skills, retain knowledge, and the importance of immersion and community and their impact on career growth. <br /><br />ng-conf.org <br /><a href=\"mailto:info@ng-conf.org\">info@ng-conf.org</a> <br />@josepheames<br /><a href=\"https://app.pluralsight.com/profile/author/joe-eames\" rel=\"noopener\">https://app.pluralsight.com/profile/author/joe-eames</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/ap-show-s3e3-joe-eames-keeping-your-care",
            "pubDate": "Wed, 06 Apr 2022 12:30:02 +0000",
            "title": "E075 - Keeping Your Career Current",
            "entities": {
                "PERSON": [
                    "Joe Eames",
                    "Joe"
                ],
                "CARDINAL": [
                    "millions"
                ],
                "ORG": [
                    "ng-conf",
                    "href=\"https://app.pluralsight.com"
                ],
                "DATE": [
                    "/><a href=\"mailto"
                ]
            }
        },
        {
            "content": "In this episode of The Angular Plus Show, we talk with Nrwl CEO Jeff Cross about code organization, monorepos, multi-repos, and how build tools like NX, Lerna, and TurboRepo are shaping the future of app development.",
            "contentSnippet": "In this episode of The Angular Plus Show, we talk with Nrwl CEO Jeff Cross about code organization, monorepos, multi-repos, and how build tools like NX, Lerna, and TurboRepo are shaping the future of app development.",
            "enclosure": {
                "length": "64652447",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/49247784/aps_s3e2_nx_and_turborepo_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/49247784",
            "isoDate": "2022-03-30T11:45:01.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4041",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,coder,coding,developer,enterpriseng,monorepo,monorepos,ngconf,nrwl,programmer,rws,turborepo",
                "subtitle": "In this episode of The Angular Plus Show, we talk with Nrwl CEO Jeff Cross about code organization, monorepos, multi-repos, and how build tools like NX, Lerna, and TurboRepo are shaping the future of app development.",
                "summary": "In this episode of The Angular Plus Show, we talk with Nrwl CEO Jeff Cross about code organization, monorepos, multi-repos, and how build tools like NX, Lerna, and TurboRepo are shaping the future of app development."
            },
            "link": "https://www.spreaker.com/user/ng-conf/aps-s3e2-nx-and-turborepo-edit-1",
            "pubDate": "Wed, 30 Mar 2022 11:45:01 +0000",
            "title": "E074 - Nx and Turborepo",
            "entities": {
                "WORK_OF_ART": [
                    "The Angular Plus Show"
                ],
                "ORG": [
                    "Nrwl",
                    "NX"
                ],
                "PERSON": [
                    "Jeff Cross",
                    "Lerna"
                ],
                "CARDINAL": [
                    "TurboRepo"
                ]
            }
        },
        {
            "content": "And we're back! Enjoy some great laughs in this special episode of The Angular PLUS Show as your Hosts recount the struggles and successes they faced along their journeys to becoming the Developers they are today. <br /><br />Find us on Twitter!<br />The Angular Plus Show @AngularShow<br />Jennifer Wadella @likeOMGitsFEDAY<br />Nicole Oliver @nixcodes<br />Lara Newsom @LaraNerdsom<br />Brain Love @brian_love",
            "contentSnippet": "And we're back! Enjoy some great laughs in this special episode of The Angular PLUS Show as your Hosts recount the struggles and successes they faced along their journeys to becoming the Developers they are today. \nFind us on Twitter!\nThe Angular Plus Show @AngularShow\nJennifer Wadella @likeOMGitsFEDAY\nNicole Oliver @nixcodes\nLara Newsom @LaraNerdsom\nBrain Love @brian_love",
            "enclosure": {
                "length": "69755749",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/49157546/ap_show_s3e1_how_i_became_a_developer_edit_3.mp3"
            },
            "guid": "https://api.spreaker.com/episode/49157546",
            "isoDate": "2022-03-23T16:17:06.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4360",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,anugularv13,coder,coding,developer,devrel,enterpriseng,ngconf,programmer,programming",
                "subtitle": "And we're back! Enjoy some great laughs in this special episode of The Angular PLUS Show as your Hosts recount the struggles and successes they faced along their journeys to becoming the Developers they are today. \r\n\r\nFind us on Twitter!\r\nThe Angular...",
                "summary": "And we're back! Enjoy some great laughs in this special episode of The Angular PLUS Show as your Hosts recount the struggles and successes they faced along their journeys to becoming the Developers they are today. <br /><br />Find us on Twitter!<br />The Angular Plus Show @AngularShow<br />Jennifer Wadella @likeOMGitsFEDAY<br />Nicole Oliver @nixcodes<br />Lara Newsom @LaraNerdsom<br />Brain Love @brian_love"
            },
            "link": "https://www.spreaker.com/user/ng-conf/ap-show-s3e1-how-i-became-a-developer-ed",
            "pubDate": "Wed, 23 Mar 2022 16:17:06 +0000",
            "title": "E073 - How I Became A Developer",
            "entities": {
                "WORK_OF_ART": [
                    "The Angular PLUS Show",
                    "Love"
                ],
                "NORP": [
                    "Hosts"
                ],
                "DATE": [
                    "today"
                ],
                "PERSON": [
                    "Wadella"
                ]
            }
        },
        {
            "content": "As promised, the Angular team dropped version 13 on November 3rd, and the Angular Show got the chance to talk to Angular Dev Rel team member Emma Twersky about the anticipated release. <br /><br />In this episode Emma tells Aaron and Jennifer about some awesome new Angular team members and their contributions, including Sarah Dranser joining Google as Director of Engineering for Core Web. There\u2019s a quick fangirl/fanboy session over what a fantastic manager and mindful engineer Sarah is and the resources she provides to the community. They touched on the highly anticipated form typing changes coming and the Angular team\u2019s RFC process that allows community members to give feedback on features before they\u2019re completed. <br /><br />Emma highlights awesome community contributions that made it into the Angular 13 release - restoring history after navigation, enabling/disabling validators dynamically, Service Worker API updates, and Router Outlet now emitting activate/deactivate events.<br /><br />Emma also walks Jennifer and Aaron through more new features like the simplified ViewContainerRef API, even better error messaging, accessibility improvements for Angular Material components, and tooling improvements with persistent build caching.",
            "contentSnippet": "As promised, the Angular team dropped version 13 on November 3rd, and the Angular Show got the chance to talk to Angular Dev Rel team member Emma Twersky about the anticipated release. \nIn this episode Emma tells Aaron and Jennifer about some awesome new Angular team members and their contributions, including Sarah Dranser joining Google as Director of Engineering for Core Web. There\u2019s a quick fangirl/fanboy session over what a fantastic manager and mindful engineer Sarah is and the resources she provides to the community. They touched on the highly anticipated form typing changes coming and the Angular team\u2019s RFC process that allows community members to give feedback on features before they\u2019re completed. \nEmma highlights awesome community contributions that made it into the Angular 13 release - restoring history after navigation, enabling/disabling validators dynamically, Service Worker API updates, and Router Outlet now emitting activate/deactivate events.\nEmma also walks Jennifer and Aaron through more new features like the simplified ViewContainerRef API, even better error messaging, accessibility improvements for Angular Material components, and tooling improvements with persistent build caching.",
            "enclosure": {
                "length": "66315329",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/47505283/tas_october_20_2021_angular_v13_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/47505283",
            "isoDate": "2021-11-17T16:35:35.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4145",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,angularv13,applications,apps,code,coder,coding,dev,devrel,engineer,enterprinseng,ngconf,programmer,programming",
                "subtitle": "As promised, the Angular team dropped version 13 on November 3rd, and the Angular Show got the chance to talk to Angular Dev Rel team member Emma Twersky about the anticipated release. \r\n\r\nIn this episode Emma tells Aaron and Jennifer about some...",
                "summary": "As promised, the Angular team dropped version 13 on November 3rd, and the Angular Show got the chance to talk to Angular Dev Rel team member Emma Twersky about the anticipated release. <br /><br />In this episode Emma tells Aaron and Jennifer about some awesome new Angular team members and their contributions, including Sarah Dranser joining Google as Director of Engineering for Core Web. There\u2019s a quick fangirl/fanboy session over what a fantastic manager and mindful engineer Sarah is and the resources she provides to the community. They touched on the highly anticipated form typing changes coming and the Angular team\u2019s RFC process that allows community members to give feedback on features before they\u2019re completed. <br /><br />Emma highlights awesome community contributions that made it into the Angular 13 release - restoring history after navigation, enabling/disabling validators dynamically, Service Worker API updates, and Router Outlet now emitting activate/deactivate events.<br /><br />Emma also walks Jennifer and Aaron through more new features like the simplified ViewContainerRef API, even better error messaging, accessibility improvements for Angular Material components, and tooling improvements with persistent build caching."
            },
            "link": "https://www.spreaker.com/user/ng-conf/tas-october-20-2021-angular-v13-edit-1",
            "pubDate": "Wed, 17 Nov 2021 16:35:35 +0000",
            "title": "E072 - Angular v13",
            "entities": {
                "CARDINAL": [
                    "13"
                ],
                "DATE": [
                    "November 3rd"
                ],
                "PERSON": [
                    "Angular Dev Rel",
                    "Emma Twersky",
                    "Emma",
                    "Aaron",
                    "Jennifer",
                    "Sarah Dranser",
                    "Sarah",
                    "Service Worker",
                    "Router Outlet",
                    "Jennifer",
                    "Aaron"
                ],
                "ORG": [
                    "Google",
                    "Angular",
                    "ViewContainerRef API"
                ]
            }
        },
        {
            "content": "Debugging is an art. Do you console.log? Or do you rely on breakpoints and debugger statements? All of the above? What about dealing with Angular's most ~~joyful~~ painful bug `ExpressionChangedAfterItHasBeenCheckedError`? We had the opportunity to spend some time with an expert at Angular Debugging. Abdella Ali is a Solutions Architect at Rangle.io. Abdella (who also goes by \"della\") has been involved in the Angular community for almost 8 years and even attended the very first ng-conf. We should also mention that Rangle has been a longtime supporter of ng-conf and the Angular community.<br /><br />Jennifer Wadella and Brian F Love learned some of Abdella's favorite techniques for debugging Angular applications; including removing complexities, isolating components, and using code sandboxes. Abdella also dropped some knowledge on debugging RxJS and asynchronous code in Angular. While Brian suggested you just use Observable.toPromise(), apparently that's not Abdella's approach.<br /><br />Debugging can be challenging, but having a few tricks up your sleeve and some good tools sure can make it easier, and perhaps even, a bit of fun. Join us as we learn from Abdella about debugging Angular applications.",
            "contentSnippet": "Debugging is an art. Do you console.log? Or do you rely on breakpoints and debugger statements? All of the above? What about dealing with Angular's most ~~joyful~~ painful bug `ExpressionChangedAfterItHasBeenCheckedError`? We had the opportunity to spend some time with an expert at Angular Debugging. Abdella Ali is a Solutions Architect at Rangle.io. Abdella (who also goes by \"della\") has been involved in the Angular community for almost 8 years and even attended the very first ng-conf. We should also mention that Rangle has been a longtime supporter of ng-conf and the Angular community.\nJennifer Wadella and Brian F Love learned some of Abdella's favorite techniques for debugging Angular applications; including removing complexities, isolating components, and using code sandboxes. Abdella also dropped some knowledge on debugging RxJS and asynchronous code in Angular. While Brian suggested you just use Observable.toPromise(), apparently that's not Abdella's approach.\nDebugging can be challenging, but having a few tricks up your sleeve and some good tools sure can make it easier, and perhaps even, a bit of fun. Join us as we learn from Abdella about debugging Angular applications.",
            "enclosure": {
                "length": "47480453",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/47397413/tas_october_6_2021_debugging_angular_applications_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/47397413",
            "isoDate": "2021-11-10T12:05:04.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "2968",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,bug,code,coding,console,debug,debugging,developer,engineeer,engineering,enterpriseng,ngconf,ng-conf,programmer,programming,rangle",
                "subtitle": "Debugging is an art. Do you console.log? Or do you rely on breakpoints and debugger statements? All of the above? What about dealing with Angular's most ~~joyful~~ painful bug `ExpressionChangedAfterItHasBeenCheckedError`? We had the opportunity to...",
                "summary": "Debugging is an art. Do you console.log? Or do you rely on breakpoints and debugger statements? All of the above? What about dealing with Angular's most ~~joyful~~ painful bug `ExpressionChangedAfterItHasBeenCheckedError`? We had the opportunity to spend some time with an expert at Angular Debugging. Abdella Ali is a Solutions Architect at Rangle.io. Abdella (who also goes by \"della\") has been involved in the Angular community for almost 8 years and even attended the very first ng-conf. We should also mention that Rangle has been a longtime supporter of ng-conf and the Angular community.<br /><br />Jennifer Wadella and Brian F Love learned some of Abdella's favorite techniques for debugging Angular applications; including removing complexities, isolating components, and using code sandboxes. Abdella also dropped some knowledge on debugging RxJS and asynchronous code in Angular. While Brian suggested you just use Observable.toPromise(), apparently that's not Abdella's approach.<br /><br />Debugging can be challenging, but having a few tricks up your sleeve and some good tools sure can make it easier, and perhaps even, a bit of fun. Join us as we learn from Abdella about debugging Angular applications."
            },
            "link": "https://www.spreaker.com/user/ng-conf/tas-october-6-2021-debugging-angular-app",
            "pubDate": "Wed, 10 Nov 2021 12:05:04 +0000",
            "title": "E071 - Debugging Angular Applications",
            "entities": {
                "PRODUCT": [
                    "~~joyful~~"
                ],
                "ORG": [
                    "Angular Debugging",
                    "Rangle",
                    "ng-conf",
                    "Angular",
                    "Abdella",
                    "Abdella"
                ],
                "PERSON": [
                    "Abdella Ali",
                    "Abdella",
                    "Wadella",
                    "Brian F Love",
                    "Brian",
                    "Abdella"
                ],
                "WORK_OF_ART": [
                    "a Solutions Architect at Rangle.io"
                ],
                "DATE": [
                    "almost 8 years"
                ],
                "ORDINAL": [
                    "first"
                ],
                "FAC": [
                    "RxJS"
                ]
            }
        },
        {
            "content": "Got Angular.js code? Yeah, a lot of us do. It's cool. For many organizations, there is a lot of Angular.js out there that has been working well for years, and let's be honest, will probably continue to provide value to the organization for years to come. You have probably also heard that Longterm Support from the Angular Team at Google for Angular.js (v1 folks, not v2+) is ending on December 31, 2021. So what are we to do? And, perhaps the bigger question is, what if we have an SLA with our customers that require that we ship supported software?<br /><br />Enter XLTS - Extended Longterm Support for Angular. The team at XLTS.dev have you covered. They will continue to provide long-term support for Angular.js after the dreaded date of December 31, 2021. Phew!!<br /><br />The Angular Show had the opportunity to spend some time with Michael Prentice, a partner at XLTS.dev, along with our beloved Aaron Frost (better known as Frosty) who is also a partner with XLTS.dev, to learn about the beginnings of their service, what they are providing to the Angular community, and how it works. The short story is that the team at XLTS will provide you with a supported forked version of Angular on January 1, 2022. This fork will ensure that you can continue to ship apps that have a dependency on Angular.js (again v1 not v2+) with confidence for years to come.<br /><br />While we may want to eventually upgrade that app from Angular.js to Angular, we don't have to stress about finishing that daunting project in time for LTS. So, go ahead, book that family vacation this Christmas, and go check out xlts.dev to get extended long-term support for your organization's Angular.js apps.",
            "contentSnippet": "Got Angular.js code? Yeah, a lot of us do. It's cool. For many organizations, there is a lot of Angular.js out there that has been working well for years, and let's be honest, will probably continue to provide value to the organization for years to come. You have probably also heard that Longterm Support from the Angular Team at Google for Angular.js (v1 folks, not v2+) is ending on December 31, 2021. So what are we to do? And, perhaps the bigger question is, what if we have an SLA with our customers that require that we ship supported software?\nEnter XLTS - Extended Longterm Support for Angular. The team at XLTS.dev have you covered. They will continue to provide long-term support for Angular.js after the dreaded date of December 31, 2021. Phew!!\nThe Angular Show had the opportunity to spend some time with Michael Prentice, a partner at XLTS.dev, along with our beloved Aaron Frost (better known as Frosty) who is also a partner with XLTS.dev, to learn about the beginnings of their service, what they are providing to the Angular community, and how it works. The short story is that the team at XLTS will provide you with a supported forked version of Angular on January 1, 2022. This fork will ensure that you can continue to ship apps that have a dependency on Angular.js (again v1 not v2+) with confidence for years to come.\nWhile we may want to eventually upgrade that app from Angular.js to Angular, we don't have to stress about finishing that daunting project in time for LTS. So, go ahead, book that family vacation this Christmas, and go check out xlts.dev to get extended long-term support for your organization's Angular.js apps.",
            "enclosure": {
                "length": "66546334",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/47279817/tas_september_22_2021_xlts_edit_1_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/47279817",
            "isoDate": "2021-11-03T11:00:02.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4160",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,app,apps,code,coder,december31,developers,devops,engineer,lts,ng-conf,programmer,software,xlts",
                "subtitle": "Got Angular.js code? Yeah, a lot of us do. It's cool. For many organizations, there is a lot of Angular.js out there that has been working well for years, and let's be honest, will probably continue to provide value to the organization for years to...",
                "summary": "Got Angular.js code? Yeah, a lot of us do. It's cool. For many organizations, there is a lot of Angular.js out there that has been working well for years, and let's be honest, will probably continue to provide value to the organization for years to come. You have probably also heard that Longterm Support from the Angular Team at Google for Angular.js (v1 folks, not v2+) is ending on December 31, 2021. So what are we to do? And, perhaps the bigger question is, what if we have an SLA with our customers that require that we ship supported software?<br /><br />Enter XLTS - Extended Longterm Support for Angular. The team at XLTS.dev have you covered. They will continue to provide long-term support for Angular.js after the dreaded date of December 31, 2021. Phew!!<br /><br />The Angular Show had the opportunity to spend some time with Michael Prentice, a partner at XLTS.dev, along with our beloved Aaron Frost (better known as Frosty) who is also a partner with XLTS.dev, to learn about the beginnings of their service, what they are providing to the Angular community, and how it works. The short story is that the team at XLTS will provide you with a supported forked version of Angular on January 1, 2022. This fork will ensure that you can continue to ship apps that have a dependency on Angular.js (again v1 not v2+) with confidence for years to come.<br /><br />While we may want to eventually upgrade that app from Angular.js to Angular, we don't have to stress about finishing that daunting project in time for LTS. So, go ahead, book that family vacation this Christmas, and go check out xlts.dev to get extended long-term support for your organization's Angular.js apps."
            },
            "link": "https://www.spreaker.com/user/ng-conf/tas-september-22-2021-xlts-edit-1-1",
            "pubDate": "Wed, 03 Nov 2021 11:00:02 +0000",
            "title": "E070 - XLTS",
            "entities": {
                "DATE": [
                    "years",
                    "years",
                    "December 31, 2021",
                    "December 31, 2021",
                    "January 1, 2022",
                    "years",
                    "this Christmas"
                ],
                "ORG": [
                    "the Angular Team at Google",
                    "SLA",
                    "XLTS.dev",
                    "Phew!!<br",
                    "XLTS.dev",
                    "Frosty",
                    "XLTS.dev",
                    "Angular",
                    "XLTS",
                    "LTS"
                ],
                "PERSON": [
                    "Michael Prentice",
                    "Aaron Frost"
                ]
            }
        },
        {
            "content": "Angular + Ionic = \u2764\ufe0f<br /><br />In this episode of the Angular Show, we had the opportunity to sit down and chat with Max Lynch, the co-founder of Ionic. If you haven't heard of Ionic, it's a set of components for rendering native controls on iOS and Android that enables web developers to build apps that are executed on phones and tablets that include core native device functionality. As web developers we are really good at creating applications that use a template (HTML) that is styled (CSS) and is dynamic and interactive (JS). If you think about it, that sounds like a lot of the apps that are available in Google Play and the App Store. Further, as Max points out, it's really about using the GPU to render bitmaps to the screen, which a webview is more than capable of doing. So, why not create the apps of today and the future using a stack like Angular and Ionic? <br /><br />In this episode, Max shares the history of how they got started with Ionic, from rebuilding Cordova and PhoneGap, to solving the developer experience using new tooling, building the component view library, and Capacitor, an open-source cross-platform native bridge built and supported by the Ionic team.",
            "contentSnippet": "Angular + Ionic = \u2764\ufe0f\nIn this episode of the Angular Show, we had the opportunity to sit down and chat with Max Lynch, the co-founder of Ionic. If you haven't heard of Ionic, it's a set of components for rendering native controls on iOS and Android that enables web developers to build apps that are executed on phones and tablets that include core native device functionality. As web developers we are really good at creating applications that use a template (HTML) that is styled (CSS) and is dynamic and interactive (JS). If you think about it, that sounds like a lot of the apps that are available in Google Play and the App Store. Further, as Max points out, it's really about using the GPU to render bitmaps to the screen, which a webview is more than capable of doing. So, why not create the apps of today and the future using a stack like Angular and Ionic? \nIn this episode, Max shares the history of how they got started with Ionic, from rebuilding Cordova and PhoneGap, to solving the developer experience using new tooling, building the component view library, and Capacitor, an open-source cross-platform native bridge built and supported by the Ionic team.",
            "enclosure": {
                "length": "61251764",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/47052360/tas_september_8_2021_max_lynch_ionic_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/47052360",
            "isoDate": "2021-10-27T11:00:12.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3829",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,applications,code,coding,developer,developers,engineers,enterpriseng,ionic,ng-conf,platform,programmers,webview",
                "subtitle": "Angular + Ionic = \u2764\ufe0f\r\n\r\nIn this episode of the Angular Show, we had the opportunity to sit down and chat with Max Lynch, the co-founder of Ionic. If you haven't heard of Ionic, it's a set of components for rendering native controls on iOS and Android...",
                "summary": "Angular + Ionic = \u2764\ufe0f<br /><br />In this episode of the Angular Show, we had the opportunity to sit down and chat with Max Lynch, the co-founder of Ionic. If you haven't heard of Ionic, it's a set of components for rendering native controls on iOS and Android that enables web developers to build apps that are executed on phones and tablets that include core native device functionality. As web developers we are really good at creating applications that use a template (HTML) that is styled (CSS) and is dynamic and interactive (JS). If you think about it, that sounds like a lot of the apps that are available in Google Play and the App Store. Further, as Max points out, it's really about using the GPU to render bitmaps to the screen, which a webview is more than capable of doing. So, why not create the apps of today and the future using a stack like Angular and Ionic? <br /><br />In this episode, Max shares the history of how they got started with Ionic, from rebuilding Cordova and PhoneGap, to solving the developer experience using new tooling, building the component view library, and Capacitor, an open-source cross-platform native bridge built and supported by the Ionic team."
            },
            "link": "https://www.spreaker.com/user/ng-conf/tas-september-8-2021-max-lynch-ionic-edi",
            "pubDate": "Wed, 27 Oct 2021 11:00:12 +0000",
            "title": "E069 - Ionic",
            "entities": {
                "WORK_OF_ART": [
                    "the Angular Show"
                ],
                "PERSON": [
                    "Max Lynch",
                    "Max",
                    "Max",
                    "Cordova"
                ],
                "ORG": [
                    "Ionic",
                    "Ionic",
                    "Android",
                    "GPU",
                    "Angular and Ionic",
                    "Ionic",
                    "PhoneGap",
                    "Capacitor",
                    "Ionic"
                ],
                "FAC": [
                    "the App Store"
                ],
                "DATE": [
                    "today"
                ]
            }
        },
        {
            "content": "Have you ever thought about moving into a leadership role? It can sound a bit daunting, perhaps scary, but also exciting. The idea of putting your hand to the wheel and directing the ship can be thrilling. Leading a team of individuals is a prospect that many people dream of.<br /><br />The Angular Show had an opportunity to sit down with Sam Julien, Director of Developer Relations at Auth0, to discuss his move from engineer, to DevRel, to Director of DevRel. Sam shares how he first learned that his passion was DevRel and then how he grew into a leader. Sam shares some great resources that he has used to learn the skills necessary to be an effective and compassionate leader of his team. He also shares some of the struggles and hurdles that he has faced on his journey.<br /><br />Grab your iced, double-shot, oat milk latte and join Aaron Frost, Jeniffer Wadella, and Brian Love as they chat with Sam about his journey. We also recognize that not everyone is passionate about leadership. That's cool - much respect. In fact, many organizations now have engineering-specific growth opportunities that prevent forcing people into leadership and management in order to gain increased visibility, compensation, and influence in an organization. Our hope is that this episode of the Angular Show will inspire the future leaders of tomorrow to step into the role of leadership if that is their passion.",
            "contentSnippet": "Have you ever thought about moving into a leadership role? It can sound a bit daunting, perhaps scary, but also exciting. The idea of putting your hand to the wheel and directing the ship can be thrilling. Leading a team of individuals is a prospect that many people dream of.\nThe Angular Show had an opportunity to sit down with Sam Julien, Director of Developer Relations at Auth0, to discuss his move from engineer, to DevRel, to Director of DevRel. Sam shares how he first learned that his passion was DevRel and then how he grew into a leader. Sam shares some great resources that he has used to learn the skills necessary to be an effective and compassionate leader of his team. He also shares some of the struggles and hurdles that he has faced on his journey.\nGrab your iced, double-shot, oat milk latte and join Aaron Frost, Jeniffer Wadella, and Brian Love as they chat with Sam about his journey. We also recognize that not everyone is passionate about leadership. That's cool - much respect. In fact, many organizations now have engineering-specific growth opportunities that prevent forcing people into leadership and management in order to gain increased visibility, compensation, and influence in an organization. Our hope is that this episode of the Angular Show will inspire the future leaders of tomorrow to step into the role of leadership if that is their passion.",
            "enclosure": {
                "length": "62817483",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/46815734/tas_september_1_2021_transitioning_to_leadership_positions_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/46815734",
            "isoDate": "2021-10-06T10:00:06.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3927",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,devrel,engineer,leader,leadership,programmer,programming,relations,team,tech",
                "subtitle": "Have you ever thought about moving into a leadership role? It can sound a bit daunting, perhaps scary, but also exciting. The idea of putting your hand to the wheel and directing the ship can be thrilling. Leading a team of individuals is a prospect...",
                "summary": "Have you ever thought about moving into a leadership role? It can sound a bit daunting, perhaps scary, but also exciting. The idea of putting your hand to the wheel and directing the ship can be thrilling. Leading a team of individuals is a prospect that many people dream of.<br /><br />The Angular Show had an opportunity to sit down with Sam Julien, Director of Developer Relations at Auth0, to discuss his move from engineer, to DevRel, to Director of DevRel. Sam shares how he first learned that his passion was DevRel and then how he grew into a leader. Sam shares some great resources that he has used to learn the skills necessary to be an effective and compassionate leader of his team. He also shares some of the struggles and hurdles that he has faced on his journey.<br /><br />Grab your iced, double-shot, oat milk latte and join Aaron Frost, Jeniffer Wadella, and Brian Love as they chat with Sam about his journey. We also recognize that not everyone is passionate about leadership. That's cool - much respect. In fact, many organizations now have engineering-specific growth opportunities that prevent forcing people into leadership and management in order to gain increased visibility, compensation, and influence in an organization. Our hope is that this episode of the Angular Show will inspire the future leaders of tomorrow to step into the role of leadership if that is their passion."
            },
            "link": "https://www.spreaker.com/user/ng-conf/tas-september-1-2021-transitioning-to-le",
            "pubDate": "Wed, 06 Oct 2021 10:00:06 +0000",
            "title": "E068 - Transitioning to Leadership Positions",
            "entities": {
                "PERSON": [
                    "Sam Julien",
                    "Sam",
                    "Sam",
                    "Aaron Frost",
                    "Jeniffer Wadella",
                    "Brian Love",
                    "Sam"
                ],
                "ORG": [
                    "Developer Relations"
                ],
                "GPE": [
                    "DevRel"
                ],
                "ORDINAL": [
                    "first"
                ],
                "WORK_OF_ART": [
                    "the Angular Show"
                ],
                "DATE": [
                    "tomorrow"
                ]
            }
        },
        {
            "content": "This episode of the Angular Show features Sara Faatz, who leads the Telerik and KenoUI Developer Relations team at Progress, and Alyssa Nicoll, an Angular Developer Advocate & Google Developers Expert in Angular. Sara and Alyssa share with the panelists their respective journeys into the dev industry and how they ended up together on the Developer Relations team at Progress.<br /><br />You have likely heard of DevRel. It's the elite special forces coders that fly around the world and speak at conferences, have platinum Delta status, and sip on Champagne in the hallway track, right? Not exactly.<br /><br />Developer Relations is a relatively new career that has evolved over time into what it is today. Sara and Alyssa teach us about what DevRel is _really_ about, how much they love it, but also some of the pain points and challenges. Sara and Alyssa are part of an amazing team at Progress and enjoy sharing their passion for the web and KenoUI with front-end developers. In the end, Sara and Alyssa believe in the \"human side of development\"; sitting down with developers to understand what they need, the tools they use, and what can help improve their careers and lives.",
            "contentSnippet": "This episode of the Angular Show features Sara Faatz, who leads the Telerik and KenoUI Developer Relations team at Progress, and Alyssa Nicoll, an Angular Developer Advocate & Google Developers Expert in Angular. Sara and Alyssa share with the panelists their respective journeys into the dev industry and how they ended up together on the Developer Relations team at Progress.\nYou have likely heard of DevRel. It's the elite special forces coders that fly around the world and speak at conferences, have platinum Delta status, and sip on Champagne in the hallway track, right? Not exactly.\nDeveloper Relations is a relatively new career that has evolved over time into what it is today. Sara and Alyssa teach us about what DevRel is _really_ about, how much they love it, but also some of the pain points and challenges. Sara and Alyssa are part of an amazing team at Progress and enjoy sharing their passion for the web and KenoUI with front-end developers. In the end, Sara and Alyssa believe in the \"human side of development\"; sitting down with developers to understand what they need, the tools they use, and what can help improve their careers and lives.",
            "enclosure": {
                "length": "62186763",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/46336827/tas_august_11_2021_the_human_side_of_development_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/46336827",
            "isoDate": "2021-09-29T18:19:25.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3887",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developers,development,ngrx,programmer,programming",
                "subtitle": "This episode of the Angular Show features Sara Faatz, who leads the Telerik and KenoUI Developer Relations team at Progress, and Alyssa Nicoll, an Angular Developer Advocate & Google Developers Expert in Angular. Sara and Alyssa share with the...",
                "summary": "This episode of the Angular Show features Sara Faatz, who leads the Telerik and KenoUI Developer Relations team at Progress, and Alyssa Nicoll, an Angular Developer Advocate & Google Developers Expert in Angular. Sara and Alyssa share with the panelists their respective journeys into the dev industry and how they ended up together on the Developer Relations team at Progress.<br /><br />You have likely heard of DevRel. It's the elite special forces coders that fly around the world and speak at conferences, have platinum Delta status, and sip on Champagne in the hallway track, right? Not exactly.<br /><br />Developer Relations is a relatively new career that has evolved over time into what it is today. Sara and Alyssa teach us about what DevRel is _really_ about, how much they love it, but also some of the pain points and challenges. Sara and Alyssa are part of an amazing team at Progress and enjoy sharing their passion for the web and KenoUI with front-end developers. In the end, Sara and Alyssa believe in the \"human side of development\"; sitting down with developers to understand what they need, the tools they use, and what can help improve their careers and lives."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e067-the-human-side-of-development",
            "pubDate": "Wed, 29 Sep 2021 18:19:25 +0000",
            "title": "E067 - The Human Side of Development",
            "entities": {
                "WORK_OF_ART": [
                    "the Angular Show"
                ],
                "PERSON": [
                    "Sara Faatz",
                    "Telerik",
                    "Alyssa Nicoll",
                    "Alyssa",
                    "Alyssa",
                    "Alyssa",
                    "Alyssa"
                ],
                "ORG": [
                    "Developer Relations",
                    "Progress",
                    "Angular Developer Advocate & Google Developers Expert",
                    "the Developer Relations",
                    "Delta"
                ],
                "GPE": [
                    "DevRel",
                    "Sara"
                ],
                "DATE": [
                    "today"
                ]
            }
        },
        {
            "content": "Show Summary:<br /><br />We're back from our summer break and we're releasing a fresh episode of The Angular Show with a special guest, Mike Ryan, a Principal Architect with LiveLoveApp. Mike is a co-creator and member of the NgRx core team, a contributor to open-source, and a Google Developer Expert in Angular. Mike joins our panelists Aaron Frosts, Jennifer Wadella, and Brian Love, to chat about NgRx Effects best practices.<br /><br />NgRx is the defacto standard state management solution for Angular. While the core state module is highly inspired by Redux, the Effects library is unique to NgRx, and one of the best features of NgRx (in our humble opinion). NgRx Effects enable developers to perform side effects, like fetching data from an API, in an elegant and efficient manner. But, effects can also be tricky, hard to test, and sometimes it's not clear what RxJS operator is best suited for an effect.<br /><br />In this episode, we learn from Mike the best practices of using NgRx Effects, how to make them simpler, more maintainable, and easier to test. Plus, there are a handful of simple tips that you can walk away with and immediately improve the performance of your Angular application that is using NgRx Effects. Plus, if you've ever been unsure about which higher-order mapping operator (ya know, those somethingMap() ones) to use with an effect, Mike will break it all down for you in a straightforward way. This is an episode of The Angular Show that you do _not_ want to miss.<br /><br />Show Notes:<br />- LiveLoveApp: <a href=\"https://liveloveapp.com\" rel=\"noopener\">https://liveloveapp.com</a><br />- observer-spy library: <a href=\"https://github.com/hirezio/observer-spy\" rel=\"noopener\">https://github.com/hirezio/observer-spy</a><br />- NgRx Effects: <a href=\"https://ngrx.io/guide/effects\" rel=\"noopener\">https://ngrx.io/guide/effects</a>",
            "contentSnippet": "Show Summary:\nWe're back from our summer break and we're releasing a fresh episode of The Angular Show with a special guest, Mike Ryan, a Principal Architect with LiveLoveApp. Mike is a co-creator and member of the NgRx core team, a contributor to open-source, and a Google Developer Expert in Angular. Mike joins our panelists Aaron Frosts, Jennifer Wadella, and Brian Love, to chat about NgRx Effects best practices.\nNgRx is the defacto standard state management solution for Angular. While the core state module is highly inspired by Redux, the Effects library is unique to NgRx, and one of the best features of NgRx (in our humble opinion). NgRx Effects enable developers to perform side effects, like fetching data from an API, in an elegant and efficient manner. But, effects can also be tricky, hard to test, and sometimes it's not clear what RxJS operator is best suited for an effect.\nIn this episode, we learn from Mike the best practices of using NgRx Effects, how to make them simpler, more maintainable, and easier to test. Plus, there are a handful of simple tips that you can walk away with and immediately improve the performance of your Angular application that is using NgRx Effects. Plus, if you've ever been unsure about which higher-order mapping operator (ya know, those somethingMap() ones) to use with an effect, Mike will break it all down for you in a straightforward way. This is an episode of The Angular Show that you do _not_ want to miss.\nShow Notes:\n- LiveLoveApp: https://liveloveapp.com\n- observer-spy library: https://github.com/hirezio/observer-spy\n- NgRx Effects: https://ngrx.io/guide/effects",
            "enclosure": {
                "length": "57625150",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/46053124/tas_august_8_2021_ngrx_effects_best_practices_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/46053124",
            "isoDate": "2021-09-15T11:00:02.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3602",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,javascript,ngrx,programmer,programming",
                "subtitle": "Show Summary:\n\nWe're back from our summer break and we're releasing a fresh episode of The Angular Show with a special guest, Mike Ryan, a Principal Architect with LiveLoveApp. Mike is a co-creator and member of the NgRx core team, a contributor to...",
                "summary": "Show Summary:<br /><br />We're back from our summer break and we're releasing a fresh episode of The Angular Show with a special guest, Mike Ryan, a Principal Architect with LiveLoveApp. Mike is a co-creator and member of the NgRx core team, a contributor to open-source, and a Google Developer Expert in Angular. Mike joins our panelists Aaron Frosts, Jennifer Wadella, and Brian Love, to chat about NgRx Effects best practices.<br /><br />NgRx is the defacto standard state management solution for Angular. While the core state module is highly inspired by Redux, the Effects library is unique to NgRx, and one of the best features of NgRx (in our humble opinion). NgRx Effects enable developers to perform side effects, like fetching data from an API, in an elegant and efficient manner. But, effects can also be tricky, hard to test, and sometimes it's not clear what RxJS operator is best suited for an effect.<br /><br />In this episode, we learn from Mike the best practices of using NgRx Effects, how to make them simpler, more maintainable, and easier to test. Plus, there are a handful of simple tips that you can walk away with and immediately improve the performance of your Angular application that is using NgRx Effects. Plus, if you've ever been unsure about which higher-order mapping operator (ya know, those somethingMap() ones) to use with an effect, Mike will break it all down for you in a straightforward way. This is an episode of The Angular Show that you do _not_ want to miss.<br /><br />Show Notes:<br />- LiveLoveApp: <a href=\"https://liveloveapp.com\" rel=\"noopener\">https://liveloveapp.com</a><br />- observer-spy library: <a href=\"https://github.com/hirezio/observer-spy\" rel=\"noopener\">https://github.com/hirezio/observer-spy</a><br />- NgRx Effects: <a href=\"https://ngrx.io/guide/effects\" rel=\"noopener\">https://ngrx.io/guide/effects</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e066-ngrx-effects-best-practices",
            "pubDate": "Wed, 15 Sep 2021 11:00:02 +0000",
            "title": "E066 - NgRx Effects Best Practices",
            "entities": {
                "DATE": [
                    "summer"
                ],
                "WORK_OF_ART": [
                    "The Angular Show",
                    "The Angular Show"
                ],
                "PERSON": [
                    "Mike Ryan",
                    "Mike",
                    "NgRx",
                    "Mike",
                    "Aaron Frosts",
                    "Jennifer Wadella",
                    "Brian Love",
                    "NgRx",
                    "NgRx",
                    "NgRx",
                    "NgRx",
                    "Mike",
                    "Mike",
                    "NgRx"
                ],
                "FAC": [
                    "a Principal Architect"
                ],
                "GPE": [
                    "Redux"
                ],
                "CARDINAL": [
                    "one"
                ],
                "ORG": [
                    "API",
                    "href=\"https://liveloveapp.com",
                    "href=\"https://github.com"
                ],
                "NORP": [
                    "RxJS"
                ],
                "PRODUCT": [
                    "NgRx Effects",
                    "NgRx Effects."
                ]
            }
        },
        {
            "content": "In this episode of the Angular Show, the panelists (Aaron, Brian, and Jennifer) have the esteemed privilege to be chat with Misko Hevery. In case you haven't heard, Misko is the creator (and sometimes lovingly referred to as the father) of Angular. Misko has spent the last 16 years building Angular at Google, and we have much to thank him and the team for. For some of us, we make a living from teaching, writing, speaking, and coding with Angular. We cannot thank Misko and the entire Angular Team enough!<br /><br />Now, don't get your feathers ruffled - Misko recently transitioned from the Angular team at Google to join the Builder.io team that is building (pun intended) Qwik - a DOM-Centric, resumable web-app framework. Does this mean that Angular is doomed? No, definitely not. This means that Misko continues to pioneer in the land of the web.<br /><br />What is Qwik and how is this framework any different than Angular (or Vue or React)? Join us as we learn about Qwik with Misko Hevery!<br /><br />Show notes:<br /><br /><a href=\"https://github.com/builderio/qwik\" rel=\"noopener\">https://github.com/builderio/qwik</a>",
            "contentSnippet": "In this episode of the Angular Show, the panelists (Aaron, Brian, and Jennifer) have the esteemed privilege to be chat with Misko Hevery. In case you haven't heard, Misko is the creator (and sometimes lovingly referred to as the father) of Angular. Misko has spent the last 16 years building Angular at Google, and we have much to thank him and the team for. For some of us, we make a living from teaching, writing, speaking, and coding with Angular. We cannot thank Misko and the entire Angular Team enough!\nNow, don't get your feathers ruffled - Misko recently transitioned from the Angular team at Google to join the Builder.io team that is building (pun intended) Qwik - a DOM-Centric, resumable web-app framework. Does this mean that Angular is doomed? No, definitely not. This means that Misko continues to pioneer in the land of the web.\nWhat is Qwik and how is this framework any different than Angular (or Vue or React)? Join us as we learn about Qwik with Misko Hevery!\nShow notes:\nhttps://github.com/builderio/qwik",
            "enclosure": {
                "length": "62832458",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/46053117/tas_june_23_2021_angular_qwik.mp3"
            },
            "guid": "https://api.spreaker.com/episode/46053117",
            "isoDate": "2021-08-26T13:39:51.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3927",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,coding,developer,development,hevery,javascript,misko-hevery,programmer,programming,qwik",
                "subtitle": "In this episode of the Angular Show, the panelists (Aaron, Brian, and Jennifer) have the esteemed privilege to be chat with Misko Hevery. In case you haven't heard, Misko is the creator (and sometimes lovingly referred to as the father) of Angular....",
                "summary": "In this episode of the Angular Show, the panelists (Aaron, Brian, and Jennifer) have the esteemed privilege to be chat with Misko Hevery. In case you haven't heard, Misko is the creator (and sometimes lovingly referred to as the father) of Angular. Misko has spent the last 16 years building Angular at Google, and we have much to thank him and the team for. For some of us, we make a living from teaching, writing, speaking, and coding with Angular. We cannot thank Misko and the entire Angular Team enough!<br /><br />Now, don't get your feathers ruffled - Misko recently transitioned from the Angular team at Google to join the Builder.io team that is building (pun intended) Qwik - a DOM-Centric, resumable web-app framework. Does this mean that Angular is doomed? No, definitely not. This means that Misko continues to pioneer in the land of the web.<br /><br />What is Qwik and how is this framework any different than Angular (or Vue or React)? Join us as we learn about Qwik with Misko Hevery!<br /><br />Show notes:<br /><br /><a href=\"https://github.com/builderio/qwik\" rel=\"noopener\">https://github.com/builderio/qwik</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e065-angular-qwik",
            "pubDate": "Thu, 26 Aug 2021 13:39:51 +0000",
            "title": "E065 - Angular & Qwik",
            "entities": {
                "WORK_OF_ART": [
                    "the Angular Show"
                ],
                "PERSON": [
                    "Aaron",
                    "Brian",
                    "Jennifer",
                    "Misko Hevery",
                    "Misko",
                    "Misko",
                    "Misko",
                    "Misko",
                    "Misko Hevery!<br"
                ],
                "DATE": [
                    "the last 16 years"
                ],
                "ORG": [
                    "Google",
                    "Qwik - a DOM-Centric",
                    "Qwik",
                    "Qwik",
                    "href=\"https://github.com"
                ]
            }
        },
        {
            "content": "Internationalization (i18n) and localization (l10n) can be critical for Angular applications that are used throughout a country, continent, or around the globe. As Angular developers, we have several tools at our disposal to accomplish i18n and l10n. As you might expect, since Angular is an opinionated framework that comes with batteries included, there is a solution provided by the Angular Team. We recently sat down with Kaitlyn Ekdahl to learn about the built-in solution to i18n provided by Angular. Kaitlyn taught us how to get started, some of the recent improvements, as well as the pros and cons of this solution. We also briefly mentioned that there are a few open-source community-led efforts at solving i18n with Angular, such as ngx-translate and Transloco.<br /><br />As engineers, the panelists for the Angular Show (Aaron, Jennifer and Brian) are always curious. We want to learn more, and we endeavor to share our learnings with you! We were excited to learn more about Transloco from Inbal Sinai, a member of the ngneat team, and a Senior Front End Developer at Datorama Salesforce. Inbal shares with us how Transloco works, how easy it is to use, and some of the runtime advantages that Transloco provides. Transloco also makes it easy to get started using the provided `ng add` command. And, if you're currently using Angular's i18n library, Transloco has documentation on how you can easily switch. Oh, did we mention docs? Yeah, they have that covered too (and quite well we might add).<br /><br />If you are considering supporting i18n and l10n in your Angular application we recommend you listen to this episode of the Angular Show, check out Transloco, and don't forget to subscribe so you can go back and listen to the show we did with Kaitlyn to learn about Angular's localization library.<br /><br /><br />Show Notes:<br /><br /><a href=\"https://ngneat.github.io/transloco\" rel=\"noopener\">https://ngneat.github.io/transloco</a><br /><br />Connect with us:<br /><br />Inbal Sinai - @SinaiInbal<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY",
            "contentSnippet": "Internationalization (i18n) and localization (l10n) can be critical for Angular applications that are used throughout a country, continent, or around the globe. As Angular developers, we have several tools at our disposal to accomplish i18n and l10n. As you might expect, since Angular is an opinionated framework that comes with batteries included, there is a solution provided by the Angular Team. We recently sat down with Kaitlyn Ekdahl to learn about the built-in solution to i18n provided by Angular. Kaitlyn taught us how to get started, some of the recent improvements, as well as the pros and cons of this solution. We also briefly mentioned that there are a few open-source community-led efforts at solving i18n with Angular, such as ngx-translate and Transloco.\nAs engineers, the panelists for the Angular Show (Aaron, Jennifer and Brian) are always curious. We want to learn more, and we endeavor to share our learnings with you! We were excited to learn more about Transloco from Inbal Sinai, a member of the ngneat team, and a Senior Front End Developer at Datorama Salesforce. Inbal shares with us how Transloco works, how easy it is to use, and some of the runtime advantages that Transloco provides. Transloco also makes it easy to get started using the provided `ng add` command. And, if you're currently using Angular's i18n library, Transloco has documentation on how you can easily switch. Oh, did we mention docs? Yeah, they have that covered too (and quite well we might add).\nIf you are considering supporting i18n and l10n in your Angular application we recommend you listen to this episode of the Angular Show, check out Transloco, and don't forget to subscribe so you can go back and listen to the show we did with Kaitlyn to learn about Angular's localization library.\n\nShow Notes:\nhttps://ngneat.github.io/transloco\nConnect with us:\nInbal Sinai - @SinaiInbal\nBrian F Love - @brian_love\nJennifer Wadella - @likeOMGitsFEDAY",
            "enclosure": {
                "length": "47463688",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/45494781/tas_june_16_2021_transloco_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/45494781",
            "isoDate": "2021-08-11T14:34:33.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "2967",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,i18n,javascript,l10n,programmer,programming,translation,transloco",
                "subtitle": "Internationalization (i18n) and localization (l10n) can be critical for Angular applications that are used throughout a country, continent, or around the globe. As Angular developers, we have several tools at our disposal to accomplish i18n and l10n....",
                "summary": "Internationalization (i18n) and localization (l10n) can be critical for Angular applications that are used throughout a country, continent, or around the globe. As Angular developers, we have several tools at our disposal to accomplish i18n and l10n. As you might expect, since Angular is an opinionated framework that comes with batteries included, there is a solution provided by the Angular Team. We recently sat down with Kaitlyn Ekdahl to learn about the built-in solution to i18n provided by Angular. Kaitlyn taught us how to get started, some of the recent improvements, as well as the pros and cons of this solution. We also briefly mentioned that there are a few open-source community-led efforts at solving i18n with Angular, such as ngx-translate and Transloco.<br /><br />As engineers, the panelists for the Angular Show (Aaron, Jennifer and Brian) are always curious. We want to learn more, and we endeavor to share our learnings with you! We were excited to learn more about Transloco from Inbal Sinai, a member of the ngneat team, and a Senior Front End Developer at Datorama Salesforce. Inbal shares with us how Transloco works, how easy it is to use, and some of the runtime advantages that Transloco provides. Transloco also makes it easy to get started using the provided `ng add` command. And, if you're currently using Angular's i18n library, Transloco has documentation on how you can easily switch. Oh, did we mention docs? Yeah, they have that covered too (and quite well we might add).<br /><br />If you are considering supporting i18n and l10n in your Angular application we recommend you listen to this episode of the Angular Show, check out Transloco, and don't forget to subscribe so you can go back and listen to the show we did with Kaitlyn to learn about Angular's localization library.<br /><br /><br />Show Notes:<br /><br /><a href=\"https://ngneat.github.io/transloco\" rel=\"noopener\">https://ngneat.github.io/transloco</a><br /><br />Connect with us:<br /><br />Inbal Sinai - @SinaiInbal<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e064-transloco",
            "pubDate": "Wed, 11 Aug 2021 14:34:33 +0000",
            "title": "E064 - Transloco",
            "entities": {
                "ORG": [
                    "the Angular Team",
                    "Front End Developer at Datorama Salesforce",
                    "Transloco",
                    "Transloco",
                    "Transloco",
                    "Angular",
                    "Transloco",
                    "Transloco",
                    "Angular"
                ],
                "PERSON": [
                    "Kaitlyn Ekdahl",
                    "Kaitlyn",
                    "Jennifer",
                    "Brian",
                    "Inbal Sinai",
                    "Kaitlyn",
                    "Wadella - @likeOMGitsFEDAY"
                ],
                "WORK_OF_ART": [
                    "the Angular Show (Aaron",
                    "the Angular Show",
                    "F Love"
                ]
            }
        },
        {
            "content": "Angular is more than a JavaScript framework, it's a community of caring people who use Angular to build and deploy amazing products and solutions that enrich lives and improve organizational pursuits. For many of us, the community is more important than the technology. Sure, Angular is awesome, but not as awesome as you the community!<br /><br />So how can we connect as a community? We can connect, engage and learn through conferences, meetups, blogs, podcasts, and now, the new(ish) Angular Discord. The Angular Discord server is a free and safe way for you to connect with the Angular community, ask questions, and learn from others.<br /><br />If you haven't used Discord before, it's a bit like slack, or other chat messaging services. There are channels that range from questions and discussions about Angular, community topics and events, libraries and technologies, meetups, and more. You can connect with library authors and contributors, people in your local area, and people that speak your language.<br /><br />In this episode of the Angular Show, we get to hang out with Stephen Cavaliere from leading agile, and Rob Gant from LearnLux, who are a few of the moderators and people behind the Angular Discord. Stephen and Rob share with us about how the Discord server was started, why it exists, how to join, and some of their future hopes and plans.<br /><br />You can join the Angular Discord for free at discord.ng.show. It's free, safe, and inclusive.<br /><br />Connect with us:<br /><br />Stephen Cavaliere - @SteveCavaliere<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Aaron Frost - @aaronfrost",
            "contentSnippet": "Angular is more than a JavaScript framework, it's a community of caring people who use Angular to build and deploy amazing products and solutions that enrich lives and improve organizational pursuits. For many of us, the community is more important than the technology. Sure, Angular is awesome, but not as awesome as you the community!\nSo how can we connect as a community? We can connect, engage and learn through conferences, meetups, blogs, podcasts, and now, the new(ish) Angular Discord. The Angular Discord server is a free and safe way for you to connect with the Angular community, ask questions, and learn from others.\nIf you haven't used Discord before, it's a bit like slack, or other chat messaging services. There are channels that range from questions and discussions about Angular, community topics and events, libraries and technologies, meetups, and more. You can connect with library authors and contributors, people in your local area, and people that speak your language.\nIn this episode of the Angular Show, we get to hang out with Stephen Cavaliere from leading agile, and Rob Gant from LearnLux, who are a few of the moderators and people behind the Angular Discord. Stephen and Rob share with us about how the Discord server was started, why it exists, how to join, and some of their future hopes and plans.\nYou can join the Angular Discord for free at discord.ng.show. It's free, safe, and inclusive.\nConnect with us:\nStephen Cavaliere - @SteveCavaliere\nBrian F Love - @brian_love\nJennifer Wadella - @likeOMGitsFEDAY\nAaron Frost - @aaronfrost",
            "enclosure": {
                "length": "53210657",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/45494519/tas_june_9_2021_angular_community_discord_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/45494519",
            "isoDate": "2021-07-21T15:00:36.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3326",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,angular-discord,coder,coding,community,developer,development,discord,ng-conf,programmer,programming",
                "subtitle": "Angular is more than a JavaScript framework, it's a community of caring people who use Angular to build and deploy amazing products and solutions that enrich lives and improve organizational pursuits. For many of us, the community is more important...",
                "summary": "Angular is more than a JavaScript framework, it's a community of caring people who use Angular to build and deploy amazing products and solutions that enrich lives and improve organizational pursuits. For many of us, the community is more important than the technology. Sure, Angular is awesome, but not as awesome as you the community!<br /><br />So how can we connect as a community? We can connect, engage and learn through conferences, meetups, blogs, podcasts, and now, the new(ish) Angular Discord. The Angular Discord server is a free and safe way for you to connect with the Angular community, ask questions, and learn from others.<br /><br />If you haven't used Discord before, it's a bit like slack, or other chat messaging services. There are channels that range from questions and discussions about Angular, community topics and events, libraries and technologies, meetups, and more. You can connect with library authors and contributors, people in your local area, and people that speak your language.<br /><br />In this episode of the Angular Show, we get to hang out with Stephen Cavaliere from leading agile, and Rob Gant from LearnLux, who are a few of the moderators and people behind the Angular Discord. Stephen and Rob share with us about how the Discord server was started, why it exists, how to join, and some of their future hopes and plans.<br /><br />You can join the Angular Discord for free at discord.ng.show. It's free, safe, and inclusive.<br /><br />Connect with us:<br /><br />Stephen Cavaliere - @SteveCavaliere<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Aaron Frost - @aaronfrost"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e063-angular-community-discord",
            "pubDate": "Wed, 21 Jul 2021 15:00:36 +0000",
            "title": "E063 -  Angular Community Discord",
            "entities": {
                "ORG": [
                    "JavaScript",
                    "Angular",
                    "LearnLux",
                    "the Angular Discord",
                    "the Angular Discord"
                ],
                "PERSON": [
                    "Discord",
                    "Stephen Cavaliere",
                    "Rob Gant",
                    "Stephen",
                    "Rob",
                    "Wadella - @likeOMGitsFEDAY",
                    "Frost - @aaronfrost"
                ],
                "WORK_OF_ART": [
                    "the Angular Show",
                    "F Love"
                ],
                "GPE": [
                    "Discord"
                ]
            }
        },
        {
            "content": "Single Page Applications (SPA) have many advantages, including increased interactivity, responsiveness, and user experience.  However, a SPA often requires sending large chunks of JavaScript code to the client. This code must be downloaded and parsed by the client, not to mention the execution time required. There are many strategies to achieve a highly performant single-page application. One of the most commonly used strategies is to lazy-load as much of the application as possible. It's likely that the client does _not_ need the entire application's code upfront, rather, we can deliver a minimal amount of code to the client to bootstrap the application. We can then either prefetch and preload the remaining chunks or wait until the user interacts with a specific feature or module of our application, and then fetch and load the JavaScript that is necessary to render and execute.<br /><br />As Angular developers, you are likely familiar with the built-in router's ability to lazy load child modules via routing. This is a big win for all of us. But, what if you could dynamically load modules and components at runtime? The Angular Show panelists (Aaron, Jennifer, and Brian) sat down with Jay Cooper Bell to learn more about this solution and the approach that he has used. Jay is the CTO and co-founder of Trellis, a fundraising platform for non-profit organizations, and a frequent contributor and speaker in the Angular community. Jay, and the team at Trellis, created rx-dynamic-component, an open-source library that enables Angular developers to dynamically load and mount a component at runtime using RxJS Observables. Jay teaches us about what he learned building the library along with the advantages of lazy-loading components using an Observable's next notification as the observer.<br /><br />Don't forget to subscribe so you can continue to hang out with the Angular Show panelists as we learn from the Angular community!<br /><br />Show Notes:<br />rx-dynamic-component source code:<br /><a href=\"https://github.com/trellisorg/platform/tree/master/packages/rx-dynamic-component\" rel=\"noopener\">https://github.com/trellisorg/platform/tree/master/packages/rx-dynamic-component</a> <br /><br />rx-dynamic-component demo:<br /><a href=\"https://github.com/trellisorg/platform/tree/master/apps/rx-dynamic-component-demo\" rel=\"noopener\">https://github.com/trellisorg/platform/tree/master/apps/rx-dynamic-component-demo</a> <br /><br /><a href=\"https://blog.angular.io/ivys-internal-data-structures-f410509c7480\" rel=\"noopener\">https://blog.angular.io/ivys-internal-data-structures-f410509c7480</a><br /><br />Video about Memory Management: <a href=\"https://www.youtube.com/watch?v=Zs-d6_FPfMY&t=1s\" rel=\"noopener\">https://www.youtube.com/watch?v=Zs-d6_FPfMY&t=1s</a><br /><br />Article: <a href=\"https://www.nytimes.com/interactive/2021/05/24/us/tulsa-race-massacre.html\" rel=\"noopener\">https://www.nytimes.com/interactive/2021/05/24/us/tulsa-race-massacre.html</a><br /><br />Connect with us:<br /><br />Jay Bell - @JayCooperBell<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Aaron Frost - @aaronfrost",
            "contentSnippet": "Single Page Applications (SPA) have many advantages, including increased interactivity, responsiveness, and user experience.  However, a SPA often requires sending large chunks of JavaScript code to the client. This code must be downloaded and parsed by the client, not to mention the execution time required. There are many strategies to achieve a highly performant single-page application. One of the most commonly used strategies is to lazy-load as much of the application as possible. It's likely that the client does _not_ need the entire application's code upfront, rather, we can deliver a minimal amount of code to the client to bootstrap the application. We can then either prefetch and preload the remaining chunks or wait until the user interacts with a specific feature or module of our application, and then fetch and load the JavaScript that is necessary to render and execute.\nAs Angular developers, you are likely familiar with the built-in router's ability to lazy load child modules via routing. This is a big win for all of us. But, what if you could dynamically load modules and components at runtime? The Angular Show panelists (Aaron, Jennifer, and Brian) sat down with Jay Cooper Bell to learn more about this solution and the approach that he has used. Jay is the CTO and co-founder of Trellis, a fundraising platform for non-profit organizations, and a frequent contributor and speaker in the Angular community. Jay, and the team at Trellis, created rx-dynamic-component, an open-source library that enables Angular developers to dynamically load and mount a component at runtime using RxJS Observables. Jay teaches us about what he learned building the library along with the advantages of lazy-loading components using an Observable's next notification as the observer.\nDon't forget to subscribe so you can continue to hang out with the Angular Show panelists as we learn from the Angular community!\nShow Notes:\nrx-dynamic-component source code:\nhttps://github.com/trellisorg/platform/tree/master/packages/rx-dynamic-component \nrx-dynamic-component demo:\nhttps://github.com/trellisorg/platform/tree/master/apps/rx-dynamic-component-demo \nhttps://blog.angular.io/ivys-internal-data-structures-f410509c7480\nVideo about Memory Management: https://www.youtube.com/watch?v=Zs-d6_FPfMY&t=1s\nArticle: https://www.nytimes.com/interactive/2021/05/24/us/tulsa-race-massacre.html\nConnect with us:\nJay Bell - @JayCooperBell\nBrian F Love - @brian_love\nJennifer Wadella - @likeOMGitsFEDAY\nAaron Frost - @aaronfrost",
            "enclosure": {
                "length": "60531608",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/45420018/tas_june_6_2021_dynamic_module_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/45420018",
            "isoDate": "2021-07-07T13:52:15.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3784",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,coding,dynamic-module,javascript,lazy-loading,ng-conf,observables,programming,software-engineer",
                "subtitle": "Single Page Applications (SPA) have many advantages, including increased interactivity, responsiveness, and user experience.  However, a SPA often requires sending large chunks of JavaScript code to the client. This code must be downloaded and parsed...",
                "summary": "Single Page Applications (SPA) have many advantages, including increased interactivity, responsiveness, and user experience.  However, a SPA often requires sending large chunks of JavaScript code to the client. This code must be downloaded and parsed by the client, not to mention the execution time required. There are many strategies to achieve a highly performant single-page application. One of the most commonly used strategies is to lazy-load as much of the application as possible. It's likely that the client does _not_ need the entire application's code upfront, rather, we can deliver a minimal amount of code to the client to bootstrap the application. We can then either prefetch and preload the remaining chunks or wait until the user interacts with a specific feature or module of our application, and then fetch and load the JavaScript that is necessary to render and execute.<br /><br />As Angular developers, you are likely familiar with the built-in router's ability to lazy load child modules via routing. This is a big win for all of us. But, what if you could dynamically load modules and components at runtime? The Angular Show panelists (Aaron, Jennifer, and Brian) sat down with Jay Cooper Bell to learn more about this solution and the approach that he has used. Jay is the CTO and co-founder of Trellis, a fundraising platform for non-profit organizations, and a frequent contributor and speaker in the Angular community. Jay, and the team at Trellis, created rx-dynamic-component, an open-source library that enables Angular developers to dynamically load and mount a component at runtime using RxJS Observables. Jay teaches us about what he learned building the library along with the advantages of lazy-loading components using an Observable's next notification as the observer.<br /><br />Don't forget to subscribe so you can continue to hang out with the Angular Show panelists as we learn from the Angular community!<br /><br />Show Notes:<br />rx-dynamic-component source code:<br /><a href=\"https://github.com/trellisorg/platform/tree/master/packages/rx-dynamic-component\" rel=\"noopener\">https://github.com/trellisorg/platform/tree/master/packages/rx-dynamic-component</a> <br /><br />rx-dynamic-component demo:<br /><a href=\"https://github.com/trellisorg/platform/tree/master/apps/rx-dynamic-component-demo\" rel=\"noopener\">https://github.com/trellisorg/platform/tree/master/apps/rx-dynamic-component-demo</a> <br /><br /><a href=\"https://blog.angular.io/ivys-internal-data-structures-f410509c7480\" rel=\"noopener\">https://blog.angular.io/ivys-internal-data-structures-f410509c7480</a><br /><br />Video about Memory Management: <a href=\"https://www.youtube.com/watch?v=Zs-d6_FPfMY&t=1s\" rel=\"noopener\">https://www.youtube.com/watch?v=Zs-d6_FPfMY&t=1s</a><br /><br />Article: <a href=\"https://www.nytimes.com/interactive/2021/05/24/us/tulsa-race-massacre.html\" rel=\"noopener\">https://www.nytimes.com/interactive/2021/05/24/us/tulsa-race-massacre.html</a><br /><br />Connect with us:<br /><br />Jay Bell - @JayCooperBell<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Aaron Frost - @aaronfrost"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e062-dynamic-module-component-loading-us",
            "pubDate": "Wed, 07 Jul 2021 13:52:15 +0000",
            "title": "E062 -  Dynamic Module + Component Loading Using any Observables",
            "entities": {
                "ORG": [
                    "SPA",
                    "JavaScript",
                    "JavaScript",
                    "CTO",
                    "RxJS Observables",
                    "href=\"https://github.com/trellisorg",
                    "href=\"https://github.com/trellisorg",
                    "Memory Management",
                    "href=\"https://www.youtube.com",
                    "rel=\"noopener\">https://www.youtube.com/watch?v="
                ],
                "CARDINAL": [
                    "One"
                ],
                "WORK_OF_ART": [
                    "The Angular Show",
                    "Observable",
                    "F Love"
                ],
                "PERSON": [
                    "Aaron",
                    "Jennifer",
                    "Brian",
                    "Jay Cooper Bell",
                    "Jay",
                    "Trellis",
                    "Jay",
                    "Wadella - @likeOMGitsFEDAY",
                    "Frost - @aaronfrost"
                ],
                "GPE": [
                    "Trellis",
                    "rel=\"noopener\">https://blog.angular.io"
                ]
            }
        },
        {
            "content": "How long does it take to build your application? When you build your application are you rebuilding the entire universe, or are you using incremental build caching? For some applications, build times are perfectly acceptable, and there are no major complexities around building the application. For others, the build time is unacceptable, is impacting the developer experience, and perhaps most importantly, it is causing your organization money. So, what is your organization to do?<br /><br />There are a few organizations that manage development scale at the largest level, and one of those organizations is Google. All source code at Google is part of the google3 monolithic repository, and further, building applications can be complex. Google set out to solve this problem and built Blaze, and then released Bazel as an open-source project in 2015. In this show, we learned from Zack Gray, from Flare.build, about how Bazel is an automated tool for building and testing. Bazel is language and framework agnostic, meaning, it can be used to build and test not just TypeScript and JavaScript, but any language. Further, Bazel leverages parallelization, enabling the tool to build multiple aspects/modules of your application simultaneously. This also leads to building and testing across many machines. Finally, Bazel is smart enough to only build the artifacts that need to be re-built. This leads to incredible performance and reliability.<br /><br />If Blaze sounds like a potential solution for you, then this is an episode of the Angular Show that you will want to listen to. Finally, if you need help with building, running, configuring, and extending Blaze, then be sure to reach out to Zach and the team at Flare.build.<br /><br />Connect with us:<br /><br />Zach Gray - @zachgray_io<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Aaron Frost - @aaronfrost",
            "contentSnippet": "How long does it take to build your application? When you build your application are you rebuilding the entire universe, or are you using incremental build caching? For some applications, build times are perfectly acceptable, and there are no major complexities around building the application. For others, the build time is unacceptable, is impacting the developer experience, and perhaps most importantly, it is causing your organization money. So, what is your organization to do?\nThere are a few organizations that manage development scale at the largest level, and one of those organizations is Google. All source code at Google is part of the google3 monolithic repository, and further, building applications can be complex. Google set out to solve this problem and built Blaze, and then released Bazel as an open-source project in 2015. In this show, we learned from Zack Gray, from Flare.build, about how Bazel is an automated tool for building and testing. Bazel is language and framework agnostic, meaning, it can be used to build and test not just TypeScript and JavaScript, but any language. Further, Bazel leverages parallelization, enabling the tool to build multiple aspects/modules of your application simultaneously. This also leads to building and testing across many machines. Finally, Bazel is smart enough to only build the artifacts that need to be re-built. This leads to incredible performance and reliability.\nIf Blaze sounds like a potential solution for you, then this is an episode of the Angular Show that you will want to listen to. Finally, if you need help with building, running, configuring, and extending Blaze, then be sure to reach out to Zach and the team at Flare.build.\nConnect with us:\nZach Gray - @zachgray_io\nBrian F Love - @brian_love\nJennifer Wadella - @likeOMGitsFEDAY\nAaron Frost - @aaronfrost",
            "enclosure": {
                "length": "57606706",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/45206465/tas_may_19_2021_flair_build.mp3"
            },
            "guid": "https://api.spreaker.com/episode/45206465",
            "isoDate": "2021-06-23T14:30:31.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3601",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,application,development,flare.build",
                "subtitle": "How long does it take to build your application? When you build your application are you rebuilding the entire universe, or are you using incremental build caching? For some applications, build times are perfectly acceptable, and there are no major...",
                "summary": "How long does it take to build your application? When you build your application are you rebuilding the entire universe, or are you using incremental build caching? For some applications, build times are perfectly acceptable, and there are no major complexities around building the application. For others, the build time is unacceptable, is impacting the developer experience, and perhaps most importantly, it is causing your organization money. So, what is your organization to do?<br /><br />There are a few organizations that manage development scale at the largest level, and one of those organizations is Google. All source code at Google is part of the google3 monolithic repository, and further, building applications can be complex. Google set out to solve this problem and built Blaze, and then released Bazel as an open-source project in 2015. In this show, we learned from Zack Gray, from Flare.build, about how Bazel is an automated tool for building and testing. Bazel is language and framework agnostic, meaning, it can be used to build and test not just TypeScript and JavaScript, but any language. Further, Bazel leverages parallelization, enabling the tool to build multiple aspects/modules of your application simultaneously. This also leads to building and testing across many machines. Finally, Bazel is smart enough to only build the artifacts that need to be re-built. This leads to incredible performance and reliability.<br /><br />If Blaze sounds like a potential solution for you, then this is an episode of the Angular Show that you will want to listen to. Finally, if you need help with building, running, configuring, and extending Blaze, then be sure to reach out to Zach and the team at Flare.build.<br /><br />Connect with us:<br /><br />Zach Gray - @zachgray_io<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Aaron Frost - @aaronfrost"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e061-flair-build",
            "pubDate": "Wed, 23 Jun 2021 14:30:31 +0000",
            "title": "E061 - Flair.build",
            "entities": {
                "CARDINAL": [
                    "one"
                ],
                "ORG": [
                    "Google",
                    "Google",
                    "TypeScript"
                ],
                "PRODUCT": [
                    "Blaze"
                ],
                "PERSON": [
                    "Bazel",
                    "Zack Gray",
                    "Bazel",
                    "Bazel",
                    "JavaScript",
                    "Bazel",
                    "Bazel",
                    "Zach",
                    "Wadella - @likeOMGitsFEDAY",
                    "Frost - @aaronfrost"
                ],
                "DATE": [
                    "2015"
                ],
                "WORK_OF_ART": [
                    "the Angular Show",
                    "Blaze",
                    "F Love"
                ]
            }
        },
        {
            "content": "Have you heard of Stackblitz? If not, have you ever clicked the button in the Angular docs to launch a demo of the code and you are instantly transported into an environment that is running the Angular code alongside a slick code editor that resembles VS Code? We're going to assume that you answered yes to both of these questions. If not, go check out stackblitz.com and start-up an Angular application to see just how fast and easy it is to create a demo application running in the browser. Stackblitz is building incredible tooling for developers to use in the context of the browser, and to do so, they are pushing the envelope of building a web application. So, how do they do it?<br /><br />In this episode of the Angular Show, we are thrilled to sit down with Eric Simons, the co-founder, and CEO of Stackblitz to discuss the future of JavaScript and to learn how the team at Stackblitz is building an OS in the browser. Crazy - we know! Join the panelists as they ask Eric just how they are going about this. As you might guess, they are leveraging web APIs that some of us have probably never touched, like WebAssembly, to accomplish this task.<br /><br />What is the future of JavaScript? None of us know for sure, but we can take a look at cutting-edge solutions like Stackblitz to get a glimpse into what the future might look like.<br /><br />Show notes:<br /><a href=\"https://www.chromium.org/teams/web-capabilities-fugu\" rel=\"noopener\">https://www.chromium.org/teams/web-capabilities-fugu</a><br /><a href=\"https://stackblitz.com/v2\" rel=\"noopener\">https://stackblitz.com/v2</a><br /><br />Connect with us:<br />Eric Simons - @ericsimons40<br />Aaron Frost - @aaronfrost<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY",
            "contentSnippet": "Have you heard of Stackblitz? If not, have you ever clicked the button in the Angular docs to launch a demo of the code and you are instantly transported into an environment that is running the Angular code alongside a slick code editor that resembles VS Code? We're going to assume that you answered yes to both of these questions. If not, go check out stackblitz.com and start-up an Angular application to see just how fast and easy it is to create a demo application running in the browser. Stackblitz is building incredible tooling for developers to use in the context of the browser, and to do so, they are pushing the envelope of building a web application. So, how do they do it?\nIn this episode of the Angular Show, we are thrilled to sit down with Eric Simons, the co-founder, and CEO of Stackblitz to discuss the future of JavaScript and to learn how the team at Stackblitz is building an OS in the browser. Crazy - we know! Join the panelists as they ask Eric just how they are going about this. As you might guess, they are leveraging web APIs that some of us have probably never touched, like WebAssembly, to accomplish this task.\nWhat is the future of JavaScript? None of us know for sure, but we can take a look at cutting-edge solutions like Stackblitz to get a glimpse into what the future might look like.\nShow notes:\nhttps://www.chromium.org/teams/web-capabilities-fugu\nhttps://stackblitz.com/v2\nConnect with us:\nEric Simons - @ericsimons40\nAaron Frost - @aaronfrost\nBrian F Love - @brian_love\nJennifer Wadella - @likeOMGitsFEDAY",
            "enclosure": {
                "length": "50075935",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/45206296/tas_may_5_2021_future_of_js_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/45206296",
            "isoDate": "2021-06-09T13:39:26.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3130",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,community,development,javascript,ngconf,stackblitz,startup,webassembly",
                "subtitle": "Have you heard of Stackblitz? If not, have you ever clicked the button in the Angular docs to launch a demo of the code and you are instantly transported into an environment that is running the Angular code alongside a slick code editor that resembles...",
                "summary": "Have you heard of Stackblitz? If not, have you ever clicked the button in the Angular docs to launch a demo of the code and you are instantly transported into an environment that is running the Angular code alongside a slick code editor that resembles VS Code? We're going to assume that you answered yes to both of these questions. If not, go check out stackblitz.com and start-up an Angular application to see just how fast and easy it is to create a demo application running in the browser. Stackblitz is building incredible tooling for developers to use in the context of the browser, and to do so, they are pushing the envelope of building a web application. So, how do they do it?<br /><br />In this episode of the Angular Show, we are thrilled to sit down with Eric Simons, the co-founder, and CEO of Stackblitz to discuss the future of JavaScript and to learn how the team at Stackblitz is building an OS in the browser. Crazy - we know! Join the panelists as they ask Eric just how they are going about this. As you might guess, they are leveraging web APIs that some of us have probably never touched, like WebAssembly, to accomplish this task.<br /><br />What is the future of JavaScript? None of us know for sure, but we can take a look at cutting-edge solutions like Stackblitz to get a glimpse into what the future might look like.<br /><br />Show notes:<br /><a href=\"https://www.chromium.org/teams/web-capabilities-fugu\" rel=\"noopener\">https://www.chromium.org/teams/web-capabilities-fugu</a><br /><a href=\"https://stackblitz.com/v2\" rel=\"noopener\">https://stackblitz.com/v2</a><br /><br />Connect with us:<br />Eric Simons - @ericsimons40<br />Aaron Frost - @aaronfrost<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e060-future-of-js",
            "pubDate": "Wed, 09 Jun 2021 13:39:26 +0000",
            "title": "E060 - Future of JS",
            "entities": {
                "ORG": [
                    "Stackblitz",
                    "Stackblitz",
                    "Stackblitz",
                    "JavaScript",
                    "Stackblitz",
                    "WebAssembly",
                    "JavaScript",
                    "Stackblitz",
                    "href=\"https://www.chromium.org",
                    "href=\"https://stackblitz.com/v2",
                    "rel=\"noopener\">https://stackblitz.com"
                ],
                "PRODUCT": [
                    "VS Code"
                ],
                "WORK_OF_ART": [
                    "the Angular Show",
                    "F Love"
                ],
                "PERSON": [
                    "Eric Simons",
                    "Eric",
                    "Wadella - @likeOMGitsFEDAY"
                ],
                "GPE": [
                    "Simons"
                ]
            }
        },
        {
            "content": "Internationalization (i18n) and localization (l10n) can be critical for Angular applications that are used throughout a country, continent, or around the globe. As Angular developers, we have several tools at our disposal to accomplish i18n and l10n. As you might expect, since Angular is an opinionated framework that comes with batteries included, there is a solution provided by the Angular Team. What you might know is that the Angular Team made some big improvements in the localize package when Ivy, the new compilation and rendering pipeline for Angular that was released in version 9, was released that improves the development of Angular applications that support i18n and l10n. There are also a few community-driven open-source solutions for i18n with Angular, including Transloco and ngx-translate. With all of these options, which one should you choose?<br /><br />Thankfully, as loyal subscribers and listeners to this very podcast, we want to help you make an informed decision. And to do that, as usual, we turn to an expert in the community. Please welcome, Kaitlyn Ekdahl, a Senior Software Engineer at Narwhal Technologies, to the Angular Show to teach us about i18n and l10n with Angular. Kaitlyn shares her experience and in-depth knowledge of using Angular's localize solution, Transloco, and ngx-translate. We discuss the pros and cons, and why you might choose one over the other.<br /><br />Whether or not your current Angular applications require i18n and l10 today, this is an episode of the Angular Show that you do not want to miss. Share this with your colleagues and other Angular developers so that we the community can be educated, informed, and ready to build applications that can be used throughout our communities and throughout the world.<br /><br />Show Notes:<br />i18n vs l10n - <a href=\"https://blog.mozilla.org/l10n/2011/12/14/i18n-vs-l10n-whats-the-diff/\" rel=\"noopener\">https://blog.mozilla.org/l10n/2011/12/14/i18n-vs-l10n-whats-the-diff/</a><br />Locl - <a href=\"https://www.locl.app/\" rel=\"noopener\">https://www.locl.app/</a><br />Introducing Transloco - <a href=\"https://netbasal.com/introducing-transloco-angular-internationalization-done-right-54710337630c\" rel=\"noopener\">https://netbasal.com/introducing-transloco-angular-internationalization-done-right-54710337630c</a><br />Runtime i18n with Ivy by Olivier Comb: <a href=\"https://www.youtube.com/watch?v=miG-ghJhFPc\" rel=\"noopener\">https://www.youtube.com/watch?v=miG-ghJhFPc</a><br />Angular Athens: <a href=\"https://www.meetup.com/Angular-Athens/events/277017190/\" rel=\"noopener\">https://www.meetup.com/Angular-Athens/events/277017190/</a><br /><br /><br />Connect with us:<br />Kaitlyn Ekdahl - @kaitlynekdahl<br />Aaron Frost - @aaronfrost<br />Brian F Love - @brian_love",
            "contentSnippet": "Internationalization (i18n) and localization (l10n) can be critical for Angular applications that are used throughout a country, continent, or around the globe. As Angular developers, we have several tools at our disposal to accomplish i18n and l10n. As you might expect, since Angular is an opinionated framework that comes with batteries included, there is a solution provided by the Angular Team. What you might know is that the Angular Team made some big improvements in the localize package when Ivy, the new compilation and rendering pipeline for Angular that was released in version 9, was released that improves the development of Angular applications that support i18n and l10n. There are also a few community-driven open-source solutions for i18n with Angular, including Transloco and ngx-translate. With all of these options, which one should you choose?\nThankfully, as loyal subscribers and listeners to this very podcast, we want to help you make an informed decision. And to do that, as usual, we turn to an expert in the community. Please welcome, Kaitlyn Ekdahl, a Senior Software Engineer at Narwhal Technologies, to the Angular Show to teach us about i18n and l10n with Angular. Kaitlyn shares her experience and in-depth knowledge of using Angular's localize solution, Transloco, and ngx-translate. We discuss the pros and cons, and why you might choose one over the other.\nWhether or not your current Angular applications require i18n and l10 today, this is an episode of the Angular Show that you do not want to miss. Share this with your colleagues and other Angular developers so that we the community can be educated, informed, and ready to build applications that can be used throughout our communities and throughout the world.\nShow Notes:\ni18n vs l10n - https://blog.mozilla.org/l10n/2011/12/14/i18n-vs-l10n-whats-the-diff/\nLocl - https://www.locl.app/\nIntroducing Transloco - https://netbasal.com/introducing-transloco-angular-internationalization-done-right-54710337630c\nRuntime i18n with Ivy by Olivier Comb: https://www.youtube.com/watch?v=miG-ghJhFPc\nAngular Athens: https://www.meetup.com/Angular-Athens/events/277017190/\n\nConnect with us:\nKaitlyn Ekdahl - @kaitlynekdahl\nAaron Frost - @aaronfrost\nBrian F Love - @brian_love",
            "enclosure": {
                "length": "50428738",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/44824489/tas_april_28_2021_i18n_and_l10n_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/44824489",
            "isoDate": "2021-06-02T14:46:52.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3152",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,development,i18n,internationalization,javascript,js,l10n,localization,locl,ngconf,ng-conf,transloco,web",
                "subtitle": "Internationalization (i18n) and localization (l10n) can be critical for Angular applications that are used throughout a country, continent, or around the globe. As Angular developers, we have several tools at our disposal to accomplish i18n and l10n....",
                "summary": "Internationalization (i18n) and localization (l10n) can be critical for Angular applications that are used throughout a country, continent, or around the globe. As Angular developers, we have several tools at our disposal to accomplish i18n and l10n. As you might expect, since Angular is an opinionated framework that comes with batteries included, there is a solution provided by the Angular Team. What you might know is that the Angular Team made some big improvements in the localize package when Ivy, the new compilation and rendering pipeline for Angular that was released in version 9, was released that improves the development of Angular applications that support i18n and l10n. There are also a few community-driven open-source solutions for i18n with Angular, including Transloco and ngx-translate. With all of these options, which one should you choose?<br /><br />Thankfully, as loyal subscribers and listeners to this very podcast, we want to help you make an informed decision. And to do that, as usual, we turn to an expert in the community. Please welcome, Kaitlyn Ekdahl, a Senior Software Engineer at Narwhal Technologies, to the Angular Show to teach us about i18n and l10n with Angular. Kaitlyn shares her experience and in-depth knowledge of using Angular's localize solution, Transloco, and ngx-translate. We discuss the pros and cons, and why you might choose one over the other.<br /><br />Whether or not your current Angular applications require i18n and l10 today, this is an episode of the Angular Show that you do not want to miss. Share this with your colleagues and other Angular developers so that we the community can be educated, informed, and ready to build applications that can be used throughout our communities and throughout the world.<br /><br />Show Notes:<br />i18n vs l10n - <a href=\"https://blog.mozilla.org/l10n/2011/12/14/i18n-vs-l10n-whats-the-diff/\" rel=\"noopener\">https://blog.mozilla.org/l10n/2011/12/14/i18n-vs-l10n-whats-the-diff/</a><br />Locl - <a href=\"https://www.locl.app/\" rel=\"noopener\">https://www.locl.app/</a><br />Introducing Transloco - <a href=\"https://netbasal.com/introducing-transloco-angular-internationalization-done-right-54710337630c\" rel=\"noopener\">https://netbasal.com/introducing-transloco-angular-internationalization-done-right-54710337630c</a><br />Runtime i18n with Ivy by Olivier Comb: <a href=\"https://www.youtube.com/watch?v=miG-ghJhFPc\" rel=\"noopener\">https://www.youtube.com/watch?v=miG-ghJhFPc</a><br />Angular Athens: <a href=\"https://www.meetup.com/Angular-Athens/events/277017190/\" rel=\"noopener\">https://www.meetup.com/Angular-Athens/events/277017190/</a><br /><br /><br />Connect with us:<br />Kaitlyn Ekdahl - @kaitlynekdahl<br />Aaron Frost - @aaronfrost<br />Brian F Love - @brian_love"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e059-i18n-and-l10n",
            "pubDate": "Wed, 02 Jun 2021 14:46:52 +0000",
            "title": "E059 - i18n and l10n",
            "entities": {
                "ORG": [
                    "the Angular Team",
                    "the Angular Team",
                    "Transloco",
                    "Angular",
                    "Transloco",
                    "href=\"https://blog.mozilla.org",
                    "href=\"https://netbasal.com",
                    "href=\"https://www.youtube.com",
                    "rel=\"noopener\">https://www.youtube.com/watch?v"
                ],
                "CARDINAL": [
                    "9"
                ],
                "PERSON": [
                    "Kaitlyn Ekdahl",
                    "Kaitlyn",
                    "Olivier Comb"
                ],
                "LAW": [
                    "the Angular Show"
                ],
                "DATE": [
                    "today"
                ],
                "WORK_OF_ART": [
                    "the Angular Show",
                    "F Love"
                ]
            }
        },
        {
            "content": "The Angular Show invited Minko Gechev to come on the show and talk through some of the big Angular-related announcements, namely, Angular version 12, IE11 deprecation, and the shiny new Angular DevTools. Minko Gechev is a longtime contributor to Angular, a member of the Angular Team, a good friend of ours, and an all-around wonderful person to spend time with. To kick things off, Minko takes us through some of the big changes as part of the Angular version 12 release, including Ivy (no not the plant, the new-ish compilation and rendering pipeline in Angular) libraries and the final sail-off of ViewEngine (the thing that Ivy replaces), updates to the Language Service (VS Code plugin) to use Ivy, strict mode as the new default for new Angular projections, webpack 5 support, nullish coalescing operator in templates, and inline Sass. Phew!! That's a long list. I guess the team has been a bit busy. Hopefully, they got a break to attend Minko's amazing talk at Google I/O.<br /><br />And that's just the Angular version 12 content we cover in this episode! We also talk about DevTools, the new Chrome extension for Angular developers from the Angular Team, its features, how it works, the integration with the Chome DevTools, and how you should never touch an internal Angular API with three theta symbols (joking, but, seriously, no touchy)! The new DevTools are available in the Chrome Web Store to download and install today, and will soon be available for Firefox.<br /><br />Oh, we almost forgot! In the midst of all of these amazing technical accomplishments, the team snuck in some easy-peezy Tailwind CSS support for those of you that love to add dozens of classes to your HTML elements and are afraid of CSS (we get it, CSS is, like, really challenging). We're speculating that future versions of Angular might even write your CSS for you.<br /><br />Angular as a platform continues to grow and thrive. Want to be a part of the journey? Go ahead and subscribe so you can listen to this info-packed episode with Minko, and you'll be sure to not miss a future episode. Subscribe today!<br /><br />Show notes: <br />Article about a Introducing Angular DevTools <br /><a href=\"https://blog.angular.io/introducing-angular-devtools-2d59ff4cf62f\" rel=\"noopener\">https://blog.angular.io/introducing-angular-devtools-2d59ff4cf62f</a><br /><br />Connect with us: <br />Minko Gechev - @mgechev<br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY",
            "contentSnippet": "The Angular Show invited Minko Gechev to come on the show and talk through some of the big Angular-related announcements, namely, Angular version 12, IE11 deprecation, and the shiny new Angular DevTools. Minko Gechev is a longtime contributor to Angular, a member of the Angular Team, a good friend of ours, and an all-around wonderful person to spend time with. To kick things off, Minko takes us through some of the big changes as part of the Angular version 12 release, including Ivy (no not the plant, the new-ish compilation and rendering pipeline in Angular) libraries and the final sail-off of ViewEngine (the thing that Ivy replaces), updates to the Language Service (VS Code plugin) to use Ivy, strict mode as the new default for new Angular projections, webpack 5 support, nullish coalescing operator in templates, and inline Sass. Phew!! That's a long list. I guess the team has been a bit busy. Hopefully, they got a break to attend Minko's amazing talk at Google I/O.\nAnd that's just the Angular version 12 content we cover in this episode! We also talk about DevTools, the new Chrome extension for Angular developers from the Angular Team, its features, how it works, the integration with the Chome DevTools, and how you should never touch an internal Angular API with three theta symbols (joking, but, seriously, no touchy)! The new DevTools are available in the Chrome Web Store to download and install today, and will soon be available for Firefox.\nOh, we almost forgot! In the midst of all of these amazing technical accomplishments, the team snuck in some easy-peezy Tailwind CSS support for those of you that love to add dozens of classes to your HTML elements and are afraid of CSS (we get it, CSS is, like, really challenging). We're speculating that future versions of Angular might even write your CSS for you.\nAngular as a platform continues to grow and thrive. Want to be a part of the journey? Go ahead and subscribe so you can listen to this info-packed episode with Minko, and you'll be sure to not miss a future episode. Subscribe today!\nShow notes: \nArticle about a Introducing Angular DevTools \nhttps://blog.angular.io/introducing-angular-devtools-2d59ff4cf62f\nConnect with us: \nMinko Gechev - @mgechev\nBrian F Love - @brian_love\nAaron Frost - @aaronfrost\nJennifer Wadella - @likeOMGitsFEDAY",
            "enclosure": {
                "length": "58146358",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/45053793/tas_may_24_2021_angular_dev_tools_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/45053793",
            "isoDate": "2021-05-28T14:02:42.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3635",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,development,digital,ngconf,system,tools",
                "subtitle": "The Angular Show invited Minko Gechev to come on the show and talk through some of the big Angular-related announcements, namely, Angular version 12, IE11 deprecation, and the shiny new Angular DevTools. Minko Gechev is a longtime contributor to...",
                "summary": "The Angular Show invited Minko Gechev to come on the show and talk through some of the big Angular-related announcements, namely, Angular version 12, IE11 deprecation, and the shiny new Angular DevTools. Minko Gechev is a longtime contributor to Angular, a member of the Angular Team, a good friend of ours, and an all-around wonderful person to spend time with. To kick things off, Minko takes us through some of the big changes as part of the Angular version 12 release, including Ivy (no not the plant, the new-ish compilation and rendering pipeline in Angular) libraries and the final sail-off of ViewEngine (the thing that Ivy replaces), updates to the Language Service (VS Code plugin) to use Ivy, strict mode as the new default for new Angular projections, webpack 5 support, nullish coalescing operator in templates, and inline Sass. Phew!! That's a long list. I guess the team has been a bit busy. Hopefully, they got a break to attend Minko's amazing talk at Google I/O.<br /><br />And that's just the Angular version 12 content we cover in this episode! We also talk about DevTools, the new Chrome extension for Angular developers from the Angular Team, its features, how it works, the integration with the Chome DevTools, and how you should never touch an internal Angular API with three theta symbols (joking, but, seriously, no touchy)! The new DevTools are available in the Chrome Web Store to download and install today, and will soon be available for Firefox.<br /><br />Oh, we almost forgot! In the midst of all of these amazing technical accomplishments, the team snuck in some easy-peezy Tailwind CSS support for those of you that love to add dozens of classes to your HTML elements and are afraid of CSS (we get it, CSS is, like, really challenging). We're speculating that future versions of Angular might even write your CSS for you.<br /><br />Angular as a platform continues to grow and thrive. Want to be a part of the journey? Go ahead and subscribe so you can listen to this info-packed episode with Minko, and you'll be sure to not miss a future episode. Subscribe today!<br /><br />Show notes: <br />Article about a Introducing Angular DevTools <br /><a href=\"https://blog.angular.io/introducing-angular-devtools-2d59ff4cf62f\" rel=\"noopener\">https://blog.angular.io/introducing-angular-devtools-2d59ff4cf62f</a><br /><br />Connect with us: <br />Minko Gechev - @mgechev<br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e058-angular-dev-tools_1",
            "pubDate": "Fri, 28 May 2021 14:02:42 +0000",
            "title": "E058 - Angular Dev Tools",
            "entities": {
                "WORK_OF_ART": [
                    "The Angular Show invited Minko Gechev",
                    "F Love"
                ],
                "CARDINAL": [
                    "12",
                    "12",
                    "5",
                    "12",
                    "three",
                    "dozens"
                ],
                "PRODUCT": [
                    "Angular DevTools",
                    "VS Code"
                ],
                "PERSON": [
                    "Minko Gechev",
                    "Minko",
                    "Minko",
                    "Tailwind CSS",
                    "Minko",
                    "Wadella - @likeOMGitsFEDAY"
                ],
                "ORG": [
                    "the Angular Team",
                    "Angular",
                    "the Language Service",
                    "Angular",
                    "DevTools",
                    "Chrome",
                    "the Angular Team",
                    "the Chome DevTools",
                    "DevTools",
                    "CSS",
                    "CSS",
                    "CSS",
                    "rel=\"noopener\">https://blog.angular.io"
                ],
                "DATE": [
                    "today"
                ]
            }
        },
        {
            "content": "Ever wonder about being in Developer Relations (aka DevRel)? Or starting a meetup? Or building a technical community? In this episode, the panelists have the pleasure to sit down with Ana Cidre, a Developer Advocate at Auth0, and learn about how she got started with being a part of, and building, communities. Ana shares a bit of her story about how she got started, was mentored by Sherry List, and began engaging with technical communities, the JavaScript community, and of course, the Angular Community. Ana's story is both inspiration and education, and we know you will enjoy this special episode from the Angular Show.<br /><br />Ana shares how being a DevRel is not about selling, rather, developer relations is about building tools and education so that developers will remember a specific product or solution when they need it. She also shares with us about the Avocado Labs initiative that she pioneers at Auth0. Avocado Labs provides educational online content for developers, focusing on frontend engineering technologies, and of course, security and identity management. Avocado Labs hosts online presentations and panels. They have upcoming events that you can sign up for, as well as recordings from past events.<br /><br />In a rift with Ana about online communities, our beloved panelist Brian proposes an (according to Jennifer \"cute\") community idea called \"async/await\" where attendees consume some educational online content asynchronously on your own, and then gather later in-person, or online, to discuss, ask questions, or have a panel. It's an idea, and you hear it here first. <br /><br />Finally, Ana shares with us the Auth0 Ambassador program, how it works, the perks, and more. You can learn more about the Ambassador program using a link in our show notes.<br /><br /><br />Show Notes:<br /><br /><a href=\"https://www.goodreads.com/book/show/30121783-social-architecturehttps://avocadolabs.dev/\" rel=\"noopener\">https://www.goodreads.com/book/show/30121783-social-architecturehttps://avocadolabs.dev/</a><br />Links:<br /><a href=\"https://javascript-conference.com/\" rel=\"noopener\">https://javascript-conference.com/</a><br /><a href=\"https://twitter.com/joshsimmons/status/1236060608153280513\" rel=\"noopener\">https://twitter.com/joshsimmons/status/1236060608153280513</a> <br /><a href=\"https://www.ted.com/talks/celeste_headlee_10_ways_to_have_a_better_conversation\" rel=\"noopener\">https://www.ted.com/talks/celeste_headlee_10_ways_to_have_a_better_conversation</a><br /><br />Connect with us:<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Ana Cidre - @AnaCidre_",
            "contentSnippet": "Ever wonder about being in Developer Relations (aka DevRel)? Or starting a meetup? Or building a technical community? In this episode, the panelists have the pleasure to sit down with Ana Cidre, a Developer Advocate at Auth0, and learn about how she got started with being a part of, and building, communities. Ana shares a bit of her story about how she got started, was mentored by Sherry List, and began engaging with technical communities, the JavaScript community, and of course, the Angular Community. Ana's story is both inspiration and education, and we know you will enjoy this special episode from the Angular Show.\nAna shares how being a DevRel is not about selling, rather, developer relations is about building tools and education so that developers will remember a specific product or solution when they need it. She also shares with us about the Avocado Labs initiative that she pioneers at Auth0. Avocado Labs provides educational online content for developers, focusing on frontend engineering technologies, and of course, security and identity management. Avocado Labs hosts online presentations and panels. They have upcoming events that you can sign up for, as well as recordings from past events.\nIn a rift with Ana about online communities, our beloved panelist Brian proposes an (according to Jennifer \"cute\") community idea called \"async/await\" where attendees consume some educational online content asynchronously on your own, and then gather later in-person, or online, to discuss, ask questions, or have a panel. It's an idea, and you hear it here first. \nFinally, Ana shares with us the Auth0 Ambassador program, how it works, the perks, and more. You can learn more about the Ambassador program using a link in our show notes.\n\nShow Notes:\nhttps://www.goodreads.com/book/show/30121783-social-architecturehttps://avocadolabs.dev/\nLinks:\nhttps://javascript-conference.com/\nhttps://twitter.com/joshsimmons/status/1236060608153280513 \nhttps://www.ted.com/talks/celeste_headlee_10_ways_to_have_a_better_conversation\nConnect with us:\nBrian F Love - @brian_love\nJennifer Wadella - @likeOMGitsFEDAY\nAna Cidre - @AnaCidre_",
            "enclosure": {
                "length": "45165824",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/44799507/tas_april_7_2021_building_an_online_community_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/44799507",
            "isoDate": "2021-05-20T13:59:31.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "2823",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,community,development,ijs,ngconf,online",
                "subtitle": "Ever wonder about being in Developer Relations (aka DevRel)? Or starting a meetup? Or building a technical community? In this episode, the panelists have the pleasure to sit down with Ana Cidre, a Developer Advocate at Auth0, and learn about how she...",
                "summary": "Ever wonder about being in Developer Relations (aka DevRel)? Or starting a meetup? Or building a technical community? In this episode, the panelists have the pleasure to sit down with Ana Cidre, a Developer Advocate at Auth0, and learn about how she got started with being a part of, and building, communities. Ana shares a bit of her story about how she got started, was mentored by Sherry List, and began engaging with technical communities, the JavaScript community, and of course, the Angular Community. Ana's story is both inspiration and education, and we know you will enjoy this special episode from the Angular Show.<br /><br />Ana shares how being a DevRel is not about selling, rather, developer relations is about building tools and education so that developers will remember a specific product or solution when they need it. She also shares with us about the Avocado Labs initiative that she pioneers at Auth0. Avocado Labs provides educational online content for developers, focusing on frontend engineering technologies, and of course, security and identity management. Avocado Labs hosts online presentations and panels. They have upcoming events that you can sign up for, as well as recordings from past events.<br /><br />In a rift with Ana about online communities, our beloved panelist Brian proposes an (according to Jennifer \"cute\") community idea called \"async/await\" where attendees consume some educational online content asynchronously on your own, and then gather later in-person, or online, to discuss, ask questions, or have a panel. It's an idea, and you hear it here first. <br /><br />Finally, Ana shares with us the Auth0 Ambassador program, how it works, the perks, and more. You can learn more about the Ambassador program using a link in our show notes.<br /><br /><br />Show Notes:<br /><br /><a href=\"https://www.goodreads.com/book/show/30121783-social-architecturehttps://avocadolabs.dev/\" rel=\"noopener\">https://www.goodreads.com/book/show/30121783-social-architecturehttps://avocadolabs.dev/</a><br />Links:<br /><a href=\"https://javascript-conference.com/\" rel=\"noopener\">https://javascript-conference.com/</a><br /><a href=\"https://twitter.com/joshsimmons/status/1236060608153280513\" rel=\"noopener\">https://twitter.com/joshsimmons/status/1236060608153280513</a> <br /><a href=\"https://www.ted.com/talks/celeste_headlee_10_ways_to_have_a_better_conversation\" rel=\"noopener\">https://www.ted.com/talks/celeste_headlee_10_ways_to_have_a_better_conversation</a><br /><br />Connect with us:<br />Brian F Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Ana Cidre - @AnaCidre_"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e057-building-an-online-community",
            "pubDate": "Thu, 20 May 2021 13:59:31 +0000",
            "title": "E057 - Building an Online Community",
            "entities": {
                "ORG": [
                    "Developer Relations",
                    "Ana Cidre",
                    "JavaScript",
                    "the Angular Community",
                    "href=\"https://twitter.com",
                    "rel=\"noopener\">https://twitter.com/joshsimmons/status/1236060608153280513</a"
                ],
                "PERSON": [
                    "Sherry List",
                    "Avocado Labs",
                    "Avocado Labs",
                    "Brian",
                    "Jennifer",
                    "Wadella - @likeOMGitsFEDAY"
                ],
                "ORDINAL": [
                    "first"
                ]
            }
        },
        {
            "content": "In this episode of the Angular Show, we wanted to learn about workspaces. What exactly is a workspace? Why do we have this angular.json file? What is a builder? How does this all fit together with building Angular applications, both small, and at scale? What about Nx from the team at Nrwl?<br /><br />Join us as we spend some time learning from Benjamin Cabanes, an expert on Angular workspaces, and a senior engineer at Nrwl. Ben clearly defines what a workspace is, and what it is not. We learn from Ben how the Angular Workspace is configured, the primary components, and how it all fits together and integrates with the Angular CLI. Ben also teaches us about the benefits of a workspace over simply code colocation, and how we can use the power of Nx to improve the developer experience in our organizations.<br /><br />Be sure to subscribe so you can continue to learn from experts like Ben and the amazing Angular community.<br /><br />Show Notes:<br />Node Rockets - <a href=\"https://www.node-rockets.com/\" rel=\"noopener\">https://www.node-rockets.com/</a><br /><br />Connect with us: <br />Benjamin Cabanes - @bencabanes<br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost",
            "contentSnippet": "In this episode of the Angular Show, we wanted to learn about workspaces. What exactly is a workspace? Why do we have this angular.json file? What is a builder? How does this all fit together with building Angular applications, both small, and at scale? What about Nx from the team at Nrwl?\nJoin us as we spend some time learning from Benjamin Cabanes, an expert on Angular workspaces, and a senior engineer at Nrwl. Ben clearly defines what a workspace is, and what it is not. We learn from Ben how the Angular Workspace is configured, the primary components, and how it all fits together and integrates with the Angular CLI. Ben also teaches us about the benefits of a workspace over simply code colocation, and how we can use the power of Nx to improve the developer experience in our organizations.\nBe sure to subscribe so you can continue to learn from experts like Ben and the amazing Angular community.\nShow Notes:\nNode Rockets - https://www.node-rockets.com/\nConnect with us: \nBenjamin Cabanes - @bencabanes\nBrian F Love - @brian_love\nAaron Frost - @aaronfrost",
            "enclosure": {
                "length": "53036405",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/44761452/tas_march_31_2021_workplace_configuration_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/44761452",
            "isoDate": "2021-05-14T14:16:58.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3315",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,configuration,development,javascript,js,ngconf,show,web,workplace",
                "subtitle": "In this episode of the Angular Show, we wanted to learn about workspaces. What exactly is a workspace? Why do we have this angular.json file? What is a builder? How does this all fit together with building Angular applications, both small, and at...",
                "summary": "In this episode of the Angular Show, we wanted to learn about workspaces. What exactly is a workspace? Why do we have this angular.json file? What is a builder? How does this all fit together with building Angular applications, both small, and at scale? What about Nx from the team at Nrwl?<br /><br />Join us as we spend some time learning from Benjamin Cabanes, an expert on Angular workspaces, and a senior engineer at Nrwl. Ben clearly defines what a workspace is, and what it is not. We learn from Ben how the Angular Workspace is configured, the primary components, and how it all fits together and integrates with the Angular CLI. Ben also teaches us about the benefits of a workspace over simply code colocation, and how we can use the power of Nx to improve the developer experience in our organizations.<br /><br />Be sure to subscribe so you can continue to learn from experts like Ben and the amazing Angular community.<br /><br />Show Notes:<br />Node Rockets - <a href=\"https://www.node-rockets.com/\" rel=\"noopener\">https://www.node-rockets.com/</a><br /><br />Connect with us: <br />Benjamin Cabanes - @bencabanes<br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e056-workplace-configuration",
            "pubDate": "Fri, 14 May 2021 14:16:58 +0000",
            "title": "E056 - Workplace Configuration",
            "entities": {
                "WORK_OF_ART": [
                    "the Angular Show",
                    "F Love"
                ],
                "ORG": [
                    "Benjamin Cabanes",
                    "Nrwl",
                    "Angular"
                ],
                "PERSON": [
                    "Ben",
                    "Ben",
                    "Ben",
                    "Ben",
                    "Frost - @aaronfrost"
                ]
            }
        },
        {
            "content": "How many domains do you currently own? One for your blog, maybe one for your email, a family website or two, oh, and of course a bunch of domains for those awesome side projects and ideas you have. Side projects can be fun, challenging, and rewarding. Have you ever thought about what it might take or look like to bootstrap your own side project and successfully launch a new startup?<br /><br />Join the panelists of the Angular Show as we have the opportunity to spend some time with Niall Crosby, the founder, and CEO of AG Grid.  Niall shares with us the story of how he got started building AG Grid, some of the early decisions he made, and how he was able to bootstrap and launch a successful startup.  <br /><br />AG Grid is the best JavaScript grid in the world. And, as such, it wasn't built in a day (kinda like Rome, which we think is quite promising).  If you're not familiar with AG Grid, head over to thinkster.io or check out some of the free workshops that our very own Brian Love has delivered for teaching you AG Grid, from the basics to the most advanced use cases. <br /><br />This is an episode of the Angular Show that you don't want to miss, especially if you're eager to be an entrepreneur or if you're considering launching your own company.<br /><br /><br />Show notes: <br />Article about a story of ag-Grid <a href=\"https://medium.com/ag-grid/why-the-world-needed-another-angularjs-1-x-grid-17e522a53bc8\" rel=\"noopener\">https://medium.com/ag-grid/why-the-world-needed-another-angularjs-1-x-grid-17e522a53bc8</a><br /><br />Connect with us: <br />Niall Crosby - <a href=\"https://www.linkedin.com/in/niallcrosby/?originalSubdomain=uk\" rel=\"noopener\">https://www.linkedin.com/in/niallcrosby/?originalSubdomain=uk</a><br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost",
            "contentSnippet": "How many domains do you currently own? One for your blog, maybe one for your email, a family website or two, oh, and of course a bunch of domains for those awesome side projects and ideas you have. Side projects can be fun, challenging, and rewarding. Have you ever thought about what it might take or look like to bootstrap your own side project and successfully launch a new startup?\nJoin the panelists of the Angular Show as we have the opportunity to spend some time with Niall Crosby, the founder, and CEO of AG Grid.  Niall shares with us the story of how he got started building AG Grid, some of the early decisions he made, and how he was able to bootstrap and launch a successful startup.  \nAG Grid is the best JavaScript grid in the world. And, as such, it wasn't built in a day (kinda like Rome, which we think is quite promising).  If you're not familiar with AG Grid, head over to thinkster.io or check out some of the free workshops that our very own Brian Love has delivered for teaching you AG Grid, from the basics to the most advanced use cases. \nThis is an episode of the Angular Show that you don't want to miss, especially if you're eager to be an entrepreneur or if you're considering launching your own company.\n\nShow notes: \nArticle about a story of ag-Grid https://medium.com/ag-grid/why-the-world-needed-another-angularjs-1-x-grid-17e522a53bc8\nConnect with us: \nNiall Crosby - https://www.linkedin.com/in/niallcrosby/?originalSubdomain=uk\nBrian F Love - @brian_love\nAaron Frost - @aaronfrost",
            "enclosure": {
                "length": "50280366",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/44633123/tas_march_24_2021_web_performance_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/44633123",
            "isoDate": "2021-05-05T13:56:03.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3143",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "ag-grid,angular,bootstrap,ngconf,show,startup,successful",
                "subtitle": "How many domains do you currently own? One for your blog, maybe one for your email, a family website or two, oh, and of course a bunch of domains for those awesome side projects and ideas you have. Side projects can be fun, challenging, and rewarding....",
                "summary": "How many domains do you currently own? One for your blog, maybe one for your email, a family website or two, oh, and of course a bunch of domains for those awesome side projects and ideas you have. Side projects can be fun, challenging, and rewarding. Have you ever thought about what it might take or look like to bootstrap your own side project and successfully launch a new startup?<br /><br />Join the panelists of the Angular Show as we have the opportunity to spend some time with Niall Crosby, the founder, and CEO of AG Grid.  Niall shares with us the story of how he got started building AG Grid, some of the early decisions he made, and how he was able to bootstrap and launch a successful startup.  <br /><br />AG Grid is the best JavaScript grid in the world. And, as such, it wasn't built in a day (kinda like Rome, which we think is quite promising).  If you're not familiar with AG Grid, head over to thinkster.io or check out some of the free workshops that our very own Brian Love has delivered for teaching you AG Grid, from the basics to the most advanced use cases. <br /><br />This is an episode of the Angular Show that you don't want to miss, especially if you're eager to be an entrepreneur or if you're considering launching your own company.<br /><br /><br />Show notes: <br />Article about a story of ag-Grid <a href=\"https://medium.com/ag-grid/why-the-world-needed-another-angularjs-1-x-grid-17e522a53bc8\" rel=\"noopener\">https://medium.com/ag-grid/why-the-world-needed-another-angularjs-1-x-grid-17e522a53bc8</a><br /><br />Connect with us: <br />Niall Crosby - <a href=\"https://www.linkedin.com/in/niallcrosby/?originalSubdomain=uk\" rel=\"noopener\">https://www.linkedin.com/in/niallcrosby/?originalSubdomain=uk</a><br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost"
            },
            "link": "https://www.spreaker.com/user/ng-conf/bootstrapping-a-successful-startup",
            "pubDate": "Wed, 05 May 2021 13:56:03 +0000",
            "title": "E055 - Bootstrapping a Successful Startup",
            "entities": {
                "CARDINAL": [
                    "One",
                    "two"
                ],
                "WORK_OF_ART": [
                    "the Angular Show",
                    "the Angular Show"
                ],
                "PERSON": [
                    "Niall Crosby",
                    "JavaScript",
                    "Brian Love",
                    "F Love",
                    "Frost - @aaronfrost"
                ],
                "ORG": [
                    "AG Grid",
                    "AG Grid",
                    "AG Grid",
                    "AG Grid",
                    "ag-Grid",
                    "href=\"https://medium.com",
                    "rel=\"noopener\">https://medium.com"
                ],
                "DATE": [
                    "a day"
                ],
                "GPE": [
                    "Rome"
                ]
            }
        },
        {
            "content": "Let's be honest, most engineers are not good designers. Working closely with product and design teams improves our applications, and is necessary for building a successful product. So, what are design systems and what role do they play to solve this challenge?<br /><br />In this episode of the Angular Show, we sit down with our friend Bill Odom. Bill loves Angular and his passion is to share his knowledge with the community, through speaking and teaching. Bill is a trainer at Oasis Digital that provides the popular Angular Bootcamp training. The panelists learn from Bill that design systems enable effective communication, planning, implementation, and ongoing maintenance of user interface and experience between engineering, design, and product development teams.<br /><br />You can expect to learn what a design system is, how they are valuable to organizations, some widely used design systems today, integrating design systems with tooling to develop components in isolation such as Storybook, and how design tokens fit into the model. Angular is well-positioned for developing applications using modern tooling, including design tokens, design systems, and more. Don't forget to subscribe so you can follow along with the panelists as they learn from community members like Bill.<br /><br /><br />Show Notes:<br /><br />Oasis Digital<br /><a href=\"https://oasisdigital.com/\" rel=\"noopener\">https://oasisdigital.com/</a><br /><a href=\"https://oasisdigital.com/training\" rel=\"noopener\">https://oasisdigital.com/training</a><br /><a href=\"https://oasisdigital.com/code-talk-teach/\" rel=\"noopener\">https://oasisdigital.com/code-talk-teach/</a><br /><br />Angular and CSS Grid: Get ready to fall in love - ng-conf 2019 - <a href=\"https://youtu.be/lh6n0JxXD_g\" rel=\"noopener\">https://youtu.be/lh6n0JxXD_g</a><br /><br />Storybook<br /><a href=\"https://storybook.js.org/\" rel=\"noopener\">https://storybook.js.org/</a><br />Angular and Storybook, Oasis Digital - Nathan Kerr - <a href=\"https://www.2021.ng-conf.org/workshops/angular-and-storybook,-oasis-digital\" rel=\"noopener\">https://www.2021.ng-conf.org/workshops/angular-and-storybook,-oasis-digital</a><br />The benefits of a design system - Angular Berlin - Kai R\u00f6der - <a href=\"https://youtu.be/mWsNQB0fV38\" rel=\"noopener\">https://youtu.be/mWsNQB0fV38</a><br /><br />Design tokens<br />WTF are Design Tokens? - Jina Anne - <a href=\"https://youtu.be/q5qIowMyVt8\" rel=\"noopener\">https://youtu.be/q5qIowMyVt8</a><br />Theo - SalesForce - <a href=\"https://github.com/salesforce-ux/theo\" rel=\"noopener\">https://github.com/salesforce-ux/theo</a><br />Style Dictionary - Amazon - <a href=\"https://amzn.github.io/style-dictionary/\" rel=\"noopener\">https://amzn.github.io/style-dictionary/</a><br /><br />Why Angular is the best framework for a design system - Jan Greger Hemb -<br /><a href=\"https://youtu.be/yERBKsNVE60\" rel=\"noopener\">https://youtu.be/yERBKsNVE60</a><br /><br />Connect with us:<br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Bill Odom - @wnodom",
            "contentSnippet": "Let's be honest, most engineers are not good designers. Working closely with product and design teams improves our applications, and is necessary for building a successful product. So, what are design systems and what role do they play to solve this challenge?\nIn this episode of the Angular Show, we sit down with our friend Bill Odom. Bill loves Angular and his passion is to share his knowledge with the community, through speaking and teaching. Bill is a trainer at Oasis Digital that provides the popular Angular Bootcamp training. The panelists learn from Bill that design systems enable effective communication, planning, implementation, and ongoing maintenance of user interface and experience between engineering, design, and product development teams.\nYou can expect to learn what a design system is, how they are valuable to organizations, some widely used design systems today, integrating design systems with tooling to develop components in isolation such as Storybook, and how design tokens fit into the model. Angular is well-positioned for developing applications using modern tooling, including design tokens, design systems, and more. Don't forget to subscribe so you can follow along with the panelists as they learn from community members like Bill.\n\nShow Notes:\nOasis Digital\nhttps://oasisdigital.com/\nhttps://oasisdigital.com/training\nhttps://oasisdigital.com/code-talk-teach/\nAngular and CSS Grid: Get ready to fall in love - ng-conf 2019 - https://youtu.be/lh6n0JxXD_g\nStorybook\nhttps://storybook.js.org/\nAngular and Storybook, Oasis Digital - Nathan Kerr - https://www.2021.ng-conf.org/workshops/angular-and-storybook,-oasis-digital\nThe benefits of a design system - Angular Berlin - Kai R\u00f6der - https://youtu.be/mWsNQB0fV38\nDesign tokens\nWTF are Design Tokens? - Jina Anne - https://youtu.be/q5qIowMyVt8\nTheo - SalesForce - https://github.com/salesforce-ux/theo\nStyle Dictionary - Amazon - https://amzn.github.io/style-dictionary/\nWhy Angular is the best framework for a design system - Jan Greger Hemb -\nhttps://youtu.be/yERBKsNVE60\nConnect with us:\nBrian F Love - @brian_love\nAaron Frost - @aaronfrost\nJennifer Wadella - @likeOMGitsFEDAY\nBill Odom - @wnodom",
            "enclosure": {
                "length": "67360286",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/44333457/latest_episode.mp3"
            },
            "guid": "https://api.spreaker.com/episode/44333457",
            "isoDate": "2021-04-29T11:55:05.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4210",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,design,development,digital,javascript,ng-conf,oasis,system",
                "subtitle": "Let's be honest, most engineers are not good designers. Working closely with product and design teams improves our applications, and is necessary for building a successful product. So, what are design systems and what role do they play to solve this...",
                "summary": "Let's be honest, most engineers are not good designers. Working closely with product and design teams improves our applications, and is necessary for building a successful product. So, what are design systems and what role do they play to solve this challenge?<br /><br />In this episode of the Angular Show, we sit down with our friend Bill Odom. Bill loves Angular and his passion is to share his knowledge with the community, through speaking and teaching. Bill is a trainer at Oasis Digital that provides the popular Angular Bootcamp training. The panelists learn from Bill that design systems enable effective communication, planning, implementation, and ongoing maintenance of user interface and experience between engineering, design, and product development teams.<br /><br />You can expect to learn what a design system is, how they are valuable to organizations, some widely used design systems today, integrating design systems with tooling to develop components in isolation such as Storybook, and how design tokens fit into the model. Angular is well-positioned for developing applications using modern tooling, including design tokens, design systems, and more. Don't forget to subscribe so you can follow along with the panelists as they learn from community members like Bill.<br /><br /><br />Show Notes:<br /><br />Oasis Digital<br /><a href=\"https://oasisdigital.com/\" rel=\"noopener\">https://oasisdigital.com/</a><br /><a href=\"https://oasisdigital.com/training\" rel=\"noopener\">https://oasisdigital.com/training</a><br /><a href=\"https://oasisdigital.com/code-talk-teach/\" rel=\"noopener\">https://oasisdigital.com/code-talk-teach/</a><br /><br />Angular and CSS Grid: Get ready to fall in love - ng-conf 2019 - <a href=\"https://youtu.be/lh6n0JxXD_g\" rel=\"noopener\">https://youtu.be/lh6n0JxXD_g</a><br /><br />Storybook<br /><a href=\"https://storybook.js.org/\" rel=\"noopener\">https://storybook.js.org/</a><br />Angular and Storybook, Oasis Digital - Nathan Kerr - <a href=\"https://www.2021.ng-conf.org/workshops/angular-and-storybook,-oasis-digital\" rel=\"noopener\">https://www.2021.ng-conf.org/workshops/angular-and-storybook,-oasis-digital</a><br />The benefits of a design system - Angular Berlin - Kai R\u00f6der - <a href=\"https://youtu.be/mWsNQB0fV38\" rel=\"noopener\">https://youtu.be/mWsNQB0fV38</a><br /><br />Design tokens<br />WTF are Design Tokens? - Jina Anne - <a href=\"https://youtu.be/q5qIowMyVt8\" rel=\"noopener\">https://youtu.be/q5qIowMyVt8</a><br />Theo - SalesForce - <a href=\"https://github.com/salesforce-ux/theo\" rel=\"noopener\">https://github.com/salesforce-ux/theo</a><br />Style Dictionary - Amazon - <a href=\"https://amzn.github.io/style-dictionary/\" rel=\"noopener\">https://amzn.github.io/style-dictionary/</a><br /><br />Why Angular is the best framework for a design system - Jan Greger Hemb -<br /><a href=\"https://youtu.be/yERBKsNVE60\" rel=\"noopener\">https://youtu.be/yERBKsNVE60</a><br /><br />Connect with us:<br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Bill Odom - @wnodom"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e054-design-systems-angular",
            "pubDate": "Thu, 29 Apr 2021 11:55:05 +0000",
            "title": "E054 - Design Systems & Angular",
            "entities": {
                "WORK_OF_ART": [
                    "the Angular Show",
                    "rel=\"noopener\">https://oasisdigital.com/training</a><br /><a href=\"https://oasisdigital.com/code-talk-teach/\" rel=\"noopener\">https://oasisdigital.com/code-talk-teach/</a><br"
                ],
                "PERSON": [
                    "Bill Odom",
                    "Bill",
                    "Bill",
                    "Storybook",
                    "Wadella - @likeOMGitsFEDAY"
                ],
                "ORG": [
                    "Oasis Digital",
                    "Bill.<br",
                    "Digital",
                    "href=\"https://oasisdigital.com",
                    "CSS Grid",
                    "mWsNQB0fV38",
                    "href=\"https://github.com",
                    "rel=\"noopener\">https://youtu.be/yERBKsNVE60</a><br"
                ],
                "PRODUCT": [
                    "Angular Bootcamp"
                ],
                "DATE": [
                    "today"
                ],
                "LOC": [
                    "Storybook",
                    "Design Tokens"
                ]
            }
        },
        {
            "content": "We here at the Angular Show strive to deliver fun, newsworthy, and exciting developments in the Angular community. And, while databases may not be something you are familiar with or really have to even worry about, we wanted to take a break from our usual programming to reflect briefly on data persistence. After all, you need to put your user data somewhere, and we don't recommend stuffing everything into localStorage.<br /><br />In this episode, panelists Brian Love, Jennifer Wadella, and Aaron Frost welcome Oren Eini, founder of RavenDB, to the Angular Show. Oren teaches us about some of the key decisions around structured vs unstructured databases (or SQL vs NoSQL in hipster developer parlance). With the boom of document-driven unstructured databases, we wanted to learn why you might choose this technology, the pitfalls and benefits, and what are the options out there. Of course, Oren has a bit of a bias for RavenDB, so we'll learn what RavenDB is all about and why it might be a good solution for your Angular application.<br /><br />Show Notes<br /><a href=\"http://howfuckedismydatabase.com/nosql/\" rel=\"noopener\">http://howfuckedismydatabase.com/nosql/</a><br />Shadon: <a href=\"https://www.shodan.io/\" rel=\"noopener\">https://www.shodan.io/</a><br />Data Breaches: <a href=\"https://www.informationisbeautiful.net/visualizations/worlds-biggest-data-breaches-hacks/\" rel=\"noopener\">https://www.informationisbeautiful.net/visualizations/worlds-biggest-data-breaches-hacks/</a><br />Israel COVID Stats: <a href=\"https://datadashboard.health.gov.il/COVID-19/general\" rel=\"noopener\">https://datadashboard.health.gov.il/COVID-19/general</a><br /><br />Connect with us:<br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Oren Eini - @ayende",
            "contentSnippet": "We here at the Angular Show strive to deliver fun, newsworthy, and exciting developments in the Angular community. And, while databases may not be something you are familiar with or really have to even worry about, we wanted to take a break from our usual programming to reflect briefly on data persistence. After all, you need to put your user data somewhere, and we don't recommend stuffing everything into localStorage.\nIn this episode, panelists Brian Love, Jennifer Wadella, and Aaron Frost welcome Oren Eini, founder of RavenDB, to the Angular Show. Oren teaches us about some of the key decisions around structured vs unstructured databases (or SQL vs NoSQL in hipster developer parlance). With the boom of document-driven unstructured databases, we wanted to learn why you might choose this technology, the pitfalls and benefits, and what are the options out there. Of course, Oren has a bit of a bias for RavenDB, so we'll learn what RavenDB is all about and why it might be a good solution for your Angular application.\nShow Notes\nhttp://howfuckedismydatabase.com/nosql/\nShadon: https://www.shodan.io/\nData Breaches: https://www.informationisbeautiful.net/visualizations/worlds-biggest-data-breaches-hacks/\nIsrael COVID Stats: https://datadashboard.health.gov.il/COVID-19/general\nConnect with us:\nBrian F Love - @brian_love\nAaron Frost - @aaronfrost\nJennifer Wadella - @likeOMGitsFEDAY\nOren Eini - @ayende",
            "enclosure": {
                "length": "69083916",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/44116177/latest_episode.mp3"
            },
            "guid": "https://api.spreaker.com/episode/44116177",
            "isoDate": "2021-04-06T15:49:47.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4318",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,database,development,javascript,ngconf,nosql,ravendb,relational,sql,web",
                "subtitle": "We here at the Angular Show strive to deliver fun, newsworthy, and exciting developments in the Angular community. And, while databases may not be something you are familiar with or really have to even worry about, we wanted to take a break from our...",
                "summary": "We here at the Angular Show strive to deliver fun, newsworthy, and exciting developments in the Angular community. And, while databases may not be something you are familiar with or really have to even worry about, we wanted to take a break from our usual programming to reflect briefly on data persistence. After all, you need to put your user data somewhere, and we don't recommend stuffing everything into localStorage.<br /><br />In this episode, panelists Brian Love, Jennifer Wadella, and Aaron Frost welcome Oren Eini, founder of RavenDB, to the Angular Show. Oren teaches us about some of the key decisions around structured vs unstructured databases (or SQL vs NoSQL in hipster developer parlance). With the boom of document-driven unstructured databases, we wanted to learn why you might choose this technology, the pitfalls and benefits, and what are the options out there. Of course, Oren has a bit of a bias for RavenDB, so we'll learn what RavenDB is all about and why it might be a good solution for your Angular application.<br /><br />Show Notes<br /><a href=\"http://howfuckedismydatabase.com/nosql/\" rel=\"noopener\">http://howfuckedismydatabase.com/nosql/</a><br />Shadon: <a href=\"https://www.shodan.io/\" rel=\"noopener\">https://www.shodan.io/</a><br />Data Breaches: <a href=\"https://www.informationisbeautiful.net/visualizations/worlds-biggest-data-breaches-hacks/\" rel=\"noopener\">https://www.informationisbeautiful.net/visualizations/worlds-biggest-data-breaches-hacks/</a><br />Israel COVID Stats: <a href=\"https://datadashboard.health.gov.il/COVID-19/general\" rel=\"noopener\">https://datadashboard.health.gov.il/COVID-19/general</a><br /><br />Connect with us:<br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Oren Eini - @ayende"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e053-ravendb",
            "pubDate": "Tue, 06 Apr 2021 15:49:47 +0000",
            "title": "E053 - RavenDB",
            "entities": {
                "PERSON": [
                    "Brian Love",
                    "Jennifer Wadella",
                    "Aaron Frost",
                    "Oren Eini",
                    "Wadella - @likeOMGitsFEDAY"
                ],
                "LAW": [
                    "the Angular Show"
                ],
                "ORG": [
                    "SQL",
                    "rel=\"noopener\">http://howfuckedismydatabase.com",
                    "href=\"https://datadashboard.health.gov.il",
                    "COVID-19/general</a><br"
                ],
                "PRODUCT": [
                    "Notes"
                ]
            }
        },
        {
            "content": "In the final part of our series on RxJS operators we welcome Zack DeRose, senior engineer at Nrwl, back to the show to learn about multicasting, error handling and utility operators. To kick things off we do a quick recap of hot vs cold Observables, unicast vs multicast, and then the Subject class as well as a few of its child-classes.<br /><br />You might be wondering, \"What is a multicasted Observable; Why would I want that; and what is the implication for my application?\" In short, the multicast operators provide the functionality to create a multicasted Observable (duh! and huh?). The complexity and confusion usually arise around what operators to choose from. Why would I choose publish() over shareReplay()? And, what about ref counting? Don't worry - panelists Aaron Frost, Brian Love, and Jennifer Wadella, along with our esteemed guest Zack, answer these very questions.<br /><br />We then go into detail on error handling in RxJS and the various operators for error handling, from catchError() to throwError(), and everything in between. Finally, we talk through various utility operators such as tap() and delay().<br /><br />While you don't need to have listened to the first 3 episodes on RxJS operators in this series to enjoy this episode, we do recommend you check them out if you haven't already. Be sure to subscribe so you don't miss a single episode of the Angular Show!<br /><br />Show Notes:<br />WTF is a cold observable: <a href=\"https://www.youtube.com/watch?v=4btjdWHM6lI&ab_channel=AngularSeattle\" rel=\"noopener\">https://www.youtube.com/watch?v=4btjdWHM6lI&ab_channel=AngularSeattle</a><br />DeRose Hpothesis on Code Complexity: <a href=\"https://www.youtube.com/watch?v=H9EZZDREMEk&t=779s&ab_channel=AngularSeattle\" rel=\"noopener\">https://www.youtube.com/watch?v=H9EZZDREMEk&t=779s&ab_channel=AngularSeattle</a><br />zackderose.dev<br />Multicasting: <a href=\"https://dev.to/bitovi/understanding-multicasting-observables-in-angular-2371\" rel=\"noopener\">https://dev.to/bitovi/understanding-multicasting-observables-in-angular-2371</a><br /><br />Connect with us:<br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Zack DeRose - @zackderose",
            "contentSnippet": "In the final part of our series on RxJS operators we welcome Zack DeRose, senior engineer at Nrwl, back to the show to learn about multicasting, error handling and utility operators. To kick things off we do a quick recap of hot vs cold Observables, unicast vs multicast, and then the Subject class as well as a few of its child-classes.\nYou might be wondering, \"What is a multicasted Observable; Why would I want that; and what is the implication for my application?\" In short, the multicast operators provide the functionality to create a multicasted Observable (duh! and huh?). The complexity and confusion usually arise around what operators to choose from. Why would I choose publish() over shareReplay()? And, what about ref counting? Don't worry - panelists Aaron Frost, Brian Love, and Jennifer Wadella, along with our esteemed guest Zack, answer these very questions.\nWe then go into detail on error handling in RxJS and the various operators for error handling, from catchError() to throwError(), and everything in between. Finally, we talk through various utility operators such as tap() and delay().\nWhile you don't need to have listened to the first 3 episodes on RxJS operators in this series to enjoy this episode, we do recommend you check them out if you haven't already. Be sure to subscribe so you don't miss a single episode of the Angular Show!\nShow Notes:\nWTF is a cold observable: https://www.youtube.com/watch?v=4btjdWHM6lI&ab_channel=AngularSeattle\nDeRose Hpothesis on Code Complexity: https://www.youtube.com/watch?v=H9EZZDREMEk&t=779s&ab_channel=AngularSeattle\nzackderose.dev\nMulticasting: https://dev.to/bitovi/understanding-multicasting-observables-in-angular-2371\nConnect with us:\nBrian F Love - @brian_love\nAaron Frost - @aaronfrost\nJennifer Wadella - @likeOMGitsFEDAY\nZack DeRose - @zackderose",
            "enclosure": {
                "length": "84141856",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/43979115/tas_march_3_2021_rxjs_operators_ep_4_multicasting_error_handling_utility_operators_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/43979115",
            "isoDate": "2021-03-23T20:11:14.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "5259",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,coding,developer,development,javascript,ng-conf,programmer,programming,rxjs",
                "subtitle": "In the final part of our series on RxJS operators we welcome Zack DeRose, senior engineer at Nrwl, back to the show to learn about multicasting, error handling and utility operators. To kick things off we do a quick recap of hot vs cold Observables,...",
                "summary": "In the final part of our series on RxJS operators we welcome Zack DeRose, senior engineer at Nrwl, back to the show to learn about multicasting, error handling and utility operators. To kick things off we do a quick recap of hot vs cold Observables, unicast vs multicast, and then the Subject class as well as a few of its child-classes.<br /><br />You might be wondering, \"What is a multicasted Observable; Why would I want that; and what is the implication for my application?\" In short, the multicast operators provide the functionality to create a multicasted Observable (duh! and huh?). The complexity and confusion usually arise around what operators to choose from. Why would I choose publish() over shareReplay()? And, what about ref counting? Don't worry - panelists Aaron Frost, Brian Love, and Jennifer Wadella, along with our esteemed guest Zack, answer these very questions.<br /><br />We then go into detail on error handling in RxJS and the various operators for error handling, from catchError() to throwError(), and everything in between. Finally, we talk through various utility operators such as tap() and delay().<br /><br />While you don't need to have listened to the first 3 episodes on RxJS operators in this series to enjoy this episode, we do recommend you check them out if you haven't already. Be sure to subscribe so you don't miss a single episode of the Angular Show!<br /><br />Show Notes:<br />WTF is a cold observable: <a href=\"https://www.youtube.com/watch?v=4btjdWHM6lI&ab_channel=AngularSeattle\" rel=\"noopener\">https://www.youtube.com/watch?v=4btjdWHM6lI&ab_channel=AngularSeattle</a><br />DeRose Hpothesis on Code Complexity: <a href=\"https://www.youtube.com/watch?v=H9EZZDREMEk&t=779s&ab_channel=AngularSeattle\" rel=\"noopener\">https://www.youtube.com/watch?v=H9EZZDREMEk&t=779s&ab_channel=AngularSeattle</a><br />zackderose.dev<br />Multicasting: <a href=\"https://dev.to/bitovi/understanding-multicasting-observables-in-angular-2371\" rel=\"noopener\">https://dev.to/bitovi/understanding-multicasting-observables-in-angular-2371</a><br /><br />Connect with us:<br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Zack DeRose - @zackderose"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e052-rxjs-operators-ep-4-multicasting-er",
            "pubDate": "Tue, 23 Mar 2021 20:11:14 +0000",
            "title": "E052 - RxJS Operators Ep. 4: Multicasting, Error Handling, & Utility Operators",
            "entities": {
                "GPE": [
                    "RxJS",
                    "Observables",
                    "RxJS"
                ],
                "PERSON": [
                    "Zack DeRose",
                    "Aaron Frost",
                    "Brian Love",
                    "Jennifer Wadella",
                    "Zack",
                    "Wadella - @likeOMGitsFEDAY"
                ],
                "ORG": [
                    "Nrwl",
                    "shareReplay",
                    "href=\"https://www.youtube.com",
                    "AngularSeattle",
                    "rel=\"noopener\">https://www.youtube.com/watch?v=4btjdWHM6lI&ab_channel",
                    "href=\"https://www.youtube.com",
                    "AngularSeattle",
                    "rel=\"noopener\">https://www.youtube.com/watch?v",
                    "H9EZZDREMEk&t=779s&ab_channel",
                    "href=\"https://dev.to/bitovi",
                    "rel=\"noopener\">https://dev.to/bitovi"
                ],
                "NORP": [
                    "Subject",
                    "RxJS"
                ],
                "ORDINAL": [
                    "first"
                ],
                "CARDINAL": [
                    "3"
                ]
            }
        },
        {
            "content": "The Angular Show welcomes back our friends from Infragistics to talk about their new App Builder prototype as a low-code solution to building Angular applications that integrate seamlessly with their Indigo Design platform. Infragistics is a design and development company that also builds tooling and products to enable developers to build robust applications in .NET and Angular. In this show, we welcome George Abraham and Konstantin Dinev back to the show to teach us about design systems and their low-code solution for Angular.<br /><br />We start out by learning about design systems and the importance of using a design system to integrate the UI/UX team with the development workflow. In many organizations, there is a gap between these two teams, and further, making feature iterations and scaling designs across many applications can be difficult and complex. Design systems seek to solve these issues. Infragistics Indigo Design is built with this purpose in mind.<br /><br />Infragistics' new App Builder build (see what we did there) on Indigo Design to provide a low-code solution for application prototyping and development. Imagine taking your UI design, building the design and navigation using their cloud solution, and then downloading the resulting Angular application that is ready to go. Now now, you might find this a bit scary being an Angular developer. But, have no fear, the panelists ask the tough questions for you, such as what about the quality, maintainability, and testability of the generated code?? We think you'll be pleasantly surprised to learn what the team at Infragistics is building. Besides, who really enjoys spending hours writing out semantic HTML and CSS?<br /><br />Head over to infragistics.com to learn more about Indigo Design and the new App Builder for Angular. Check it out, and let us know what you think!<br /><br />Show Notes:<br />Indigo Design: <a href=\"https://www.infragistics.com/products/indigo-design\" rel=\"noopener\">https://www.infragistics.com/products/indigo-design</a><br />App Builder: <a href=\"https://www.infragistics.com/products/appbuilder\" rel=\"noopener\">https://www.infragistics.com/products/appbuilder</a><br />Indigo Design Feedback: <a href=\"mailto:feedback@indigo.design\">feedback@indigo.design</a><br /><br />Connect with us: <br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost<br />Konstantin Dinev - @KonstantinDinev<br />George Abraham - @jabberSGA",
            "contentSnippet": "The Angular Show welcomes back our friends from Infragistics to talk about their new App Builder prototype as a low-code solution to building Angular applications that integrate seamlessly with their Indigo Design platform. Infragistics is a design and development company that also builds tooling and products to enable developers to build robust applications in .NET and Angular. In this show, we welcome George Abraham and Konstantin Dinev back to the show to teach us about design systems and their low-code solution for Angular.\nWe start out by learning about design systems and the importance of using a design system to integrate the UI/UX team with the development workflow. In many organizations, there is a gap between these two teams, and further, making feature iterations and scaling designs across many applications can be difficult and complex. Design systems seek to solve these issues. Infragistics Indigo Design is built with this purpose in mind.\nInfragistics' new App Builder build (see what we did there) on Indigo Design to provide a low-code solution for application prototyping and development. Imagine taking your UI design, building the design and navigation using their cloud solution, and then downloading the resulting Angular application that is ready to go. Now now, you might find this a bit scary being an Angular developer. But, have no fear, the panelists ask the tough questions for you, such as what about the quality, maintainability, and testability of the generated code?? We think you'll be pleasantly surprised to learn what the team at Infragistics is building. Besides, who really enjoys spending hours writing out semantic HTML and CSS?\nHead over to infragistics.com to learn more about Indigo Design and the new App Builder for Angular. Check it out, and let us know what you think!\nShow Notes:\nIndigo Design: https://www.infragistics.com/products/indigo-design\nApp Builder: https://www.infragistics.com/products/appbuilder\nIndigo Design Feedback: feedback@indigo.design\nConnect with us: \nBrian F Love - @brian_love\nAaron Frost - @aaronfrost\nKonstantin Dinev - @KonstantinDinev\nGeorge Abraham - @jabberSGA",
            "enclosure": {
                "length": "49628770",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/43760914/tas_february_24_2021_indigo_design_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/43760914",
            "isoDate": "2021-03-10T15:16:45.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3102",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,design,development,indigo,infragistics,javascript,operators,ui,ux,web,webdev",
                "subtitle": "The Angular Show welcomes back our friends from Infragistics to talk about their new App Builder prototype as a low-code solution to building Angular applications that integrate seamlessly with their Indigo Design platform. Infragistics is a design...",
                "summary": "The Angular Show welcomes back our friends from Infragistics to talk about their new App Builder prototype as a low-code solution to building Angular applications that integrate seamlessly with their Indigo Design platform. Infragistics is a design and development company that also builds tooling and products to enable developers to build robust applications in .NET and Angular. In this show, we welcome George Abraham and Konstantin Dinev back to the show to teach us about design systems and their low-code solution for Angular.<br /><br />We start out by learning about design systems and the importance of using a design system to integrate the UI/UX team with the development workflow. In many organizations, there is a gap between these two teams, and further, making feature iterations and scaling designs across many applications can be difficult and complex. Design systems seek to solve these issues. Infragistics Indigo Design is built with this purpose in mind.<br /><br />Infragistics' new App Builder build (see what we did there) on Indigo Design to provide a low-code solution for application prototyping and development. Imagine taking your UI design, building the design and navigation using their cloud solution, and then downloading the resulting Angular application that is ready to go. Now now, you might find this a bit scary being an Angular developer. But, have no fear, the panelists ask the tough questions for you, such as what about the quality, maintainability, and testability of the generated code?? We think you'll be pleasantly surprised to learn what the team at Infragistics is building. Besides, who really enjoys spending hours writing out semantic HTML and CSS?<br /><br />Head over to infragistics.com to learn more about Indigo Design and the new App Builder for Angular. Check it out, and let us know what you think!<br /><br />Show Notes:<br />Indigo Design: <a href=\"https://www.infragistics.com/products/indigo-design\" rel=\"noopener\">https://www.infragistics.com/products/indigo-design</a><br />App Builder: <a href=\"https://www.infragistics.com/products/appbuilder\" rel=\"noopener\">https://www.infragistics.com/products/appbuilder</a><br />Indigo Design Feedback: <a href=\"mailto:feedback@indigo.design\">feedback@indigo.design</a><br /><br />Connect with us: <br />Brian F Love - @brian_love<br />Aaron Frost - @aaronfrost<br />Konstantin Dinev - @KonstantinDinev<br />George Abraham - @jabberSGA"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e051-indigo-design",
            "pubDate": "Wed, 10 Mar 2021 15:16:45 +0000",
            "title": "E051 - Indigo Design",
            "entities": {
                "WORK_OF_ART": [
                    "The Angular Show",
                    "F Love"
                ],
                "PRODUCT": [
                    "App Builder",
                    "App Builder",
                    "App Builder for Angular"
                ],
                "ORG": [
                    "Indigo Design",
                    "UI",
                    "Infragistics Indigo Design",
                    "Indigo Design",
                    "UI",
                    "Infragistics",
                    "Indigo Design",
                    "href=\"https://www.infragistics.com",
                    "href=\"https://www.infragistics.com",
                    "Dinev - @KonstantinDinev"
                ],
                "PERSON": [
                    "George Abraham",
                    "Konstantin Dinev"
                ],
                "CARDINAL": [
                    "two"
                ],
                "TIME": [
                    "hours"
                ],
                "DATE": [
                    "href=\"mailto"
                ]
            }
        },
        {
            "content": "In the final installment of our series on forms, the Angular Show welcomes one of our favorite speakers and expert on forms, our very own panelist, Jennifer Wadella. Jennifer is the Director of Angular Development at Bitovi, a front-end JavaScript consulting firm.<br /><br />In the first two installments, we discussed Angular Formly with Bram (better known as Beeman) and Juri Strumpflohner, and then we sat down with Ward Bell to expand our understanding and appreciation for template-driven forms. In this episode, Jennifer will take your knowledge of reactive-driven forms to the next level. To get started, we will broadly discuss the basics of reactive forms and its API; including the AbstractControl, the FormBuilder, and more. We'll then briefly learn about the differences between using the reactive forms API and the template-driven approach. We'll also discuss some more advanced topics, such as the value control accessor and validation. Finally, we'll look at a few of the open issues related to reactive forms and discuss how the API could be improved (ehh hemm, typings).<br /><br />If you haven't subscribed to our show, go ahead and do it now. We love this community and we want you to be a part of it! The Angular Show is your home for the latest Angular news, to learn more about Angular, and to meet amazing people in the community.<br /><br />Show Notes:  <br />ngx-typed-forms: <a href=\"https://github.com/Quramy/ngx-typed-forms\" rel=\"noopener\">https://github.com/Quramy/ngx-typed-forms</a><br />Strong typings: <a href=\"https://github.com/angular/angular/issues/13721\" rel=\"noopener\">https://github.com/angular/angular/issues/13721</a><br />Andrew\u2019s reply: <a href=\"https://github.com/angular/angular/pull/40772#issuecomment-776456955\" rel=\"noopener\">https://github.com/angular/angular/pull/40772#issuecomment-776456955</a> <br />Improvements: <a href=\"https://github.com/angular/angular/issues/31963\" rel=\"noopener\">https://github.com/angular/angular/issues/31963</a><br />Control touch state observable: <a href=\"https://github.com/angular/angular/issues/10887\" rel=\"noopener\">https://github.com/angular/angular/issues/10887</a><br />Control.getValidators() is missing: <a href=\"https://github.com/angular/angular/issues/13461\" rel=\"noopener\">https://github.com/angular/angular/issues/13461</a><br />Input as Observable: <a href=\"https://github.com/angular/angular/issues/5689\" rel=\"noopener\">https://github.com/angular/angular/issues/5689</a><br /><br />Identity made simple for developers with Auth0 - <a href=\"https://a0.to/youtube\" rel=\"noopener\">https://a0.to/youtube</a><br />Demo: How to add user login to an Angular application using Auth0 - <a href=\"https://a0.to/angularSDKqs\" rel=\"noopener\">https://a0.to/angularSDKqs</a><br /><br />Connect with us:<br />Brian Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Aaron Frost - @aaronfrost",
            "contentSnippet": "In the final installment of our series on forms, the Angular Show welcomes one of our favorite speakers and expert on forms, our very own panelist, Jennifer Wadella. Jennifer is the Director of Angular Development at Bitovi, a front-end JavaScript consulting firm.\nIn the first two installments, we discussed Angular Formly with Bram (better known as Beeman) and Juri Strumpflohner, and then we sat down with Ward Bell to expand our understanding and appreciation for template-driven forms. In this episode, Jennifer will take your knowledge of reactive-driven forms to the next level. To get started, we will broadly discuss the basics of reactive forms and its API; including the AbstractControl, the FormBuilder, and more. We'll then briefly learn about the differences between using the reactive forms API and the template-driven approach. We'll also discuss some more advanced topics, such as the value control accessor and validation. Finally, we'll look at a few of the open issues related to reactive forms and discuss how the API could be improved (ehh hemm, typings).\nIf you haven't subscribed to our show, go ahead and do it now. We love this community and we want you to be a part of it! The Angular Show is your home for the latest Angular news, to learn more about Angular, and to meet amazing people in the community.\nShow Notes:  \nngx-typed-forms: https://github.com/Quramy/ngx-typed-forms\nStrong typings: https://github.com/angular/angular/issues/13721\nAndrew\u2019s reply: https://github.com/angular/angular/pull/40772#issuecomment-776456955 \nImprovements: https://github.com/angular/angular/issues/31963\nControl touch state observable: https://github.com/angular/angular/issues/10887\nControl.getValidators() is missing: https://github.com/angular/angular/issues/13461\nInput as Observable: https://github.com/angular/angular/issues/5689\nIdentity made simple for developers with Auth0 - https://a0.to/youtube\nDemo: How to add user login to an Angular application using Auth0 - https://a0.to/angularSDKqs\nConnect with us:\nBrian Love - @brian_love\nJennifer Wadella - @likeOMGitsFEDAY\nAaron Frost - @aaronfrost",
            "enclosure": {
                "length": "74425154",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/43702701/tas_february_24_2021_forms_series_episode_3_reactive_forms_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/43702701",
            "isoDate": "2021-03-03T14:36:01.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4652",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,development,forms,javascript,programming,reactive,tech,web,webdev",
                "subtitle": "In the final installment of our series on forms, the Angular Show welcomes one of our favorite speakers and expert on forms, our very own panelist, Jennifer Wadella. Jennifer is the Director of Angular Development at Bitovi, a front-end JavaScript...",
                "summary": "In the final installment of our series on forms, the Angular Show welcomes one of our favorite speakers and expert on forms, our very own panelist, Jennifer Wadella. Jennifer is the Director of Angular Development at Bitovi, a front-end JavaScript consulting firm.<br /><br />In the first two installments, we discussed Angular Formly with Bram (better known as Beeman) and Juri Strumpflohner, and then we sat down with Ward Bell to expand our understanding and appreciation for template-driven forms. In this episode, Jennifer will take your knowledge of reactive-driven forms to the next level. To get started, we will broadly discuss the basics of reactive forms and its API; including the AbstractControl, the FormBuilder, and more. We'll then briefly learn about the differences between using the reactive forms API and the template-driven approach. We'll also discuss some more advanced topics, such as the value control accessor and validation. Finally, we'll look at a few of the open issues related to reactive forms and discuss how the API could be improved (ehh hemm, typings).<br /><br />If you haven't subscribed to our show, go ahead and do it now. We love this community and we want you to be a part of it! The Angular Show is your home for the latest Angular news, to learn more about Angular, and to meet amazing people in the community.<br /><br />Show Notes:  <br />ngx-typed-forms: <a href=\"https://github.com/Quramy/ngx-typed-forms\" rel=\"noopener\">https://github.com/Quramy/ngx-typed-forms</a><br />Strong typings: <a href=\"https://github.com/angular/angular/issues/13721\" rel=\"noopener\">https://github.com/angular/angular/issues/13721</a><br />Andrew\u2019s reply: <a href=\"https://github.com/angular/angular/pull/40772#issuecomment-776456955\" rel=\"noopener\">https://github.com/angular/angular/pull/40772#issuecomment-776456955</a> <br />Improvements: <a href=\"https://github.com/angular/angular/issues/31963\" rel=\"noopener\">https://github.com/angular/angular/issues/31963</a><br />Control touch state observable: <a href=\"https://github.com/angular/angular/issues/10887\" rel=\"noopener\">https://github.com/angular/angular/issues/10887</a><br />Control.getValidators() is missing: <a href=\"https://github.com/angular/angular/issues/13461\" rel=\"noopener\">https://github.com/angular/angular/issues/13461</a><br />Input as Observable: <a href=\"https://github.com/angular/angular/issues/5689\" rel=\"noopener\">https://github.com/angular/angular/issues/5689</a><br /><br />Identity made simple for developers with Auth0 - <a href=\"https://a0.to/youtube\" rel=\"noopener\">https://a0.to/youtube</a><br />Demo: How to add user login to an Angular application using Auth0 - <a href=\"https://a0.to/angularSDKqs\" rel=\"noopener\">https://a0.to/angularSDKqs</a><br /><br />Connect with us:<br />Brian Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Aaron Frost - @aaronfrost"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e050-forms-series-episode-3-reactive-for",
            "pubDate": "Wed, 03 Mar 2021 14:36:01 +0000",
            "title": "E050 - Forms Series Episode 3: Reactive Forms",
            "entities": {
                "CARDINAL": [
                    "one",
                    "two"
                ],
                "PERSON": [
                    "Jennifer Wadella",
                    "Jennifer",
                    "JavaScript",
                    "Bram",
                    "Beeman",
                    "Juri Strumpflohner",
                    "Ward Bell",
                    "Jennifer",
                    "Wadella - @likeOMGitsFEDAY",
                    "Frost - @aaronfrost"
                ],
                "ORDINAL": [
                    "first"
                ],
                "PRODUCT": [
                    "Angular Formly",
                    "Notes"
                ],
                "ORG": [
                    "API",
                    "AbstractControl",
                    "FormBuilder",
                    "API",
                    "API",
                    "href=\"https://github.com",
                    "href=\"https://github.com",
                    "href=\"https://github.com",
                    "href=\"https://github.com",
                    "href=\"https://github.com",
                    "href=\"https://github.com",
                    "href=\"https://github.com"
                ],
                "WORK_OF_ART": [
                    "The Angular Show",
                    "Love"
                ]
            }
        },
        {
            "content": "In part 3 of our series on RxJS operators, the Angular Show panelists Aaron Frost, Jennifer Wadella, and Brian Love, along with our friend Lara Newsom, take a stroll through the filtering operators. The filtering operators enable developers to filter next notifications from an Observable.<br /><br />The most logical filtering operator to start with is, well, you guessed it, the filter() operator. From there, we look to the operators that only emit a single next notification: first(), last(), find(), and single(). Most of these operators are fairly straight-forward, and often have an optional predicate that can be provided to determine when the operator returns a new Observable that immediately emits the next notification to the Observer, or to the next operator in the pipe. Moving onward Lara teaches us about the family of take() and skip() operators. We didn't list them out here since we are lazy and don't want to type them all out, plus, you should really just have a listen to the show and subscribe! Ok, phew, now Lara and the panelists talk about the ignoreElement() operator, which like the window() operator, has nothing to do with the DOM. Rounding the final bend in our run through the filtering operators we talk about the family of distinct() operators. And, with a sprint to the finish line, we learn about the audit(), debounce() and simple() operators for rate limiting. Speaking of rate-limiting, this is getting long. But, thankfully, this show on the filtering operators is not that long, plus, you can always expect a good time hanging out with the Angular Show. Enjoy!<br /><br /><br />Show Notes:  <br /><a href=\"https://dev.to/rxjs/debounce-vs-throttle-vs-audit-vs-sample-difference-you-should-know-1f21\" rel=\"noopener\">https://dev.to/rxjs/debounce-vs-throttle-vs-audit-vs-sample-difference-you-should-know-1f21</a><br /><br />Connect with us:<br />Lara Newsom - @LaraNerdsom<br />Brian Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Aaron Frost - @aaronfrost",
            "contentSnippet": "In part 3 of our series on RxJS operators, the Angular Show panelists Aaron Frost, Jennifer Wadella, and Brian Love, along with our friend Lara Newsom, take a stroll through the filtering operators. The filtering operators enable developers to filter next notifications from an Observable.\nThe most logical filtering operator to start with is, well, you guessed it, the filter() operator. From there, we look to the operators that only emit a single next notification: first(), last(), find(), and single(). Most of these operators are fairly straight-forward, and often have an optional predicate that can be provided to determine when the operator returns a new Observable that immediately emits the next notification to the Observer, or to the next operator in the pipe. Moving onward Lara teaches us about the family of take() and skip() operators. We didn't list them out here since we are lazy and don't want to type them all out, plus, you should really just have a listen to the show and subscribe! Ok, phew, now Lara and the panelists talk about the ignoreElement() operator, which like the window() operator, has nothing to do with the DOM. Rounding the final bend in our run through the filtering operators we talk about the family of distinct() operators. And, with a sprint to the finish line, we learn about the audit(), debounce() and simple() operators for rate limiting. Speaking of rate-limiting, this is getting long. But, thankfully, this show on the filtering operators is not that long, plus, you can always expect a good time hanging out with the Angular Show. Enjoy!\n\nShow Notes:  \nhttps://dev.to/rxjs/debounce-vs-throttle-vs-audit-vs-sample-difference-you-should-know-1f21\nConnect with us:\nLara Newsom - @LaraNerdsom\nBrian Love - @brian_love\nJennifer Wadella - @likeOMGitsFEDAY\nAaron Frost - @aaronfrost",
            "enclosure": {
                "length": "69807469",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/43510551/tas_feb_10_2021_rxjs_operators_ep_3_filtering_operators_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/43510551",
            "isoDate": "2021-02-17T15:47:20.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4363",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,filtering,filtering-operators,javascript,ng-conf,operators",
                "subtitle": "In part 3 of our series on RxJS operators, the Angular Show panelists Aaron Frost, Jennifer Wadella, and Brian Love, along with our friend Lara Newsom, take a stroll through the filtering operators. The filtering operators enable developers to filter...",
                "summary": "In part 3 of our series on RxJS operators, the Angular Show panelists Aaron Frost, Jennifer Wadella, and Brian Love, along with our friend Lara Newsom, take a stroll through the filtering operators. The filtering operators enable developers to filter next notifications from an Observable.<br /><br />The most logical filtering operator to start with is, well, you guessed it, the filter() operator. From there, we look to the operators that only emit a single next notification: first(), last(), find(), and single(). Most of these operators are fairly straight-forward, and often have an optional predicate that can be provided to determine when the operator returns a new Observable that immediately emits the next notification to the Observer, or to the next operator in the pipe. Moving onward Lara teaches us about the family of take() and skip() operators. We didn't list them out here since we are lazy and don't want to type them all out, plus, you should really just have a listen to the show and subscribe! Ok, phew, now Lara and the panelists talk about the ignoreElement() operator, which like the window() operator, has nothing to do with the DOM. Rounding the final bend in our run through the filtering operators we talk about the family of distinct() operators. And, with a sprint to the finish line, we learn about the audit(), debounce() and simple() operators for rate limiting. Speaking of rate-limiting, this is getting long. But, thankfully, this show on the filtering operators is not that long, plus, you can always expect a good time hanging out with the Angular Show. Enjoy!<br /><br /><br />Show Notes:  <br /><a href=\"https://dev.to/rxjs/debounce-vs-throttle-vs-audit-vs-sample-difference-you-should-know-1f21\" rel=\"noopener\">https://dev.to/rxjs/debounce-vs-throttle-vs-audit-vs-sample-difference-you-should-know-1f21</a><br /><br />Connect with us:<br />Lara Newsom - @LaraNerdsom<br />Brian Love - @brian_love<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Aaron Frost - @aaronfrost"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e049-rxjs-operators-episode-3-filtering-",
            "pubDate": "Wed, 17 Feb 2021 15:47:20 +0000",
            "title": "E049 - RxJS Operators Episode 3: Filtering Operators",
            "entities": {
                "CARDINAL": [
                    "3"
                ],
                "NORP": [
                    "RxJS"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Jennifer Wadella",
                    "Brian Love",
                    "Lara Newsom",
                    "Wadella - @likeOMGitsFEDAY",
                    "Frost - @aaronfrost"
                ],
                "ORDINAL": [
                    "first"
                ],
                "ORG": [
                    "Observer"
                ],
                "PRODUCT": [
                    "Lara",
                    "Lara",
                    "Notes"
                ],
                "WORK_OF_ART": [
                    "the Angular Show",
                    "Love"
                ],
                "GPE": [
                    "href=\"https://dev.to",
                    "rel=\"noopener\">https://dev.to"
                ]
            }
        },
        {
            "content": "What is a linter? For some, a linter is that round brush-thingy with sticky paper that you use to remove your cat's fur from your otherwise beautiful jacket before going out in public. For computer software engineers, a linter is a program that uses static analysis to determine if there are potential errors, stylistic problems, or other suspicious operations in an application. Attempting to use your lint brush with an Angular application might be tricky, or perhaps, it's an alternative method to cleaning the grime off your screen that has been there for months and you can somehow see past every day. Instead, Angular developers have long relied on tslint, which is a lint tool specifically built for TypeScript. Things were good, well, mostly good, up until last year when, in the midst of quarantining and eating ramen, you read a tweet that said maintenance of tslint was coming to an end. So, what is an Angular developer to do?<br /><br />Enter James Henry. James is a Consultant Architect for Nrwl, and generally coined by the Angular Show, as \"that good looking guy at Narwhal\" (not that everyone else isn't beautiful). James has worked alongside the eslint team for many years, and has provided a solution to those using TypeScript, and thus tslint, to migrate and leverage the power of eslint. James talks through his journey working with eslint, TypeScript, and more. To further prove that James good looking (scratch that)... an outstanding contributor to the community, James has provided a migration path for the most common tslint rules to eslint rules.<br /><br />Should you migrate to eslint today? How difficult is it? What about my existing tslint rules? Those are all great questions, and the panelists will explore and learn from James the answers to those questions and more. Go ahead, subscribe, and have a listen.<br /><br />Show Notes:<br />discord.gg/angular<br /><a href=\"https://astexplorer.net/\" rel=\"noopener\">https://astexplorer.net/</a><br /><a href=\"https://github.com/typescript-eslint/tslint-to-eslint-config\" rel=\"noopener\">https://github.com/typescript-eslint/tslint-to-eslint-config</a><br /><a href=\"https://github.com/angular-eslint/angular-eslint\" rel=\"noopener\">https://github.com/angular-eslint/angular-eslint</a><br /><a href=\"https://twitter.com/cotufa82/status/1355901060636930049\" rel=\"noopener\">https://twitter.com/cotufa82/status/1355901060636930049</a><br /><br />Connect with us:<br />James Henry @mrjameshenry<br />Jennifer Wadella @likeOMGitsFEDAY<br />Brian Love @brian_love<br />Aaron Frost @aaronfrost",
            "contentSnippet": "What is a linter? For some, a linter is that round brush-thingy with sticky paper that you use to remove your cat's fur from your otherwise beautiful jacket before going out in public. For computer software engineers, a linter is a program that uses static analysis to determine if there are potential errors, stylistic problems, or other suspicious operations in an application. Attempting to use your lint brush with an Angular application might be tricky, or perhaps, it's an alternative method to cleaning the grime off your screen that has been there for months and you can somehow see past every day. Instead, Angular developers have long relied on tslint, which is a lint tool specifically built for TypeScript. Things were good, well, mostly good, up until last year when, in the midst of quarantining and eating ramen, you read a tweet that said maintenance of tslint was coming to an end. So, what is an Angular developer to do?\nEnter James Henry. James is a Consultant Architect for Nrwl, and generally coined by the Angular Show, as \"that good looking guy at Narwhal\" (not that everyone else isn't beautiful). James has worked alongside the eslint team for many years, and has provided a solution to those using TypeScript, and thus tslint, to migrate and leverage the power of eslint. James talks through his journey working with eslint, TypeScript, and more. To further prove that James good looking (scratch that)... an outstanding contributor to the community, James has provided a migration path for the most common tslint rules to eslint rules.\nShould you migrate to eslint today? How difficult is it? What about my existing tslint rules? Those are all great questions, and the panelists will explore and learn from James the answers to those questions and more. Go ahead, subscribe, and have a listen.\nShow Notes:\ndiscord.gg/angular\nhttps://astexplorer.net/\nhttps://github.com/typescript-eslint/tslint-to-eslint-config\nhttps://github.com/angular-eslint/angular-eslint\nhttps://twitter.com/cotufa82/status/1355901060636930049\nConnect with us:\nJames Henry @mrjameshenry\nJennifer Wadella @likeOMGitsFEDAY\nBrian Love @brian_love\nAaron Frost @aaronfrost",
            "enclosure": {
                "length": "66641384",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/43375765/tas_february_5_2021_tslint_to_eslint_migration_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/43375765",
            "isoDate": "2021-02-10T15:40:21.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4166",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,eslint,javascript,ng-conf,programmer,programming,tslint",
                "subtitle": "What is a linter? For some, a linter is that round brush-thingy with sticky paper that you use to remove your cat's fur from your otherwise beautiful jacket before going out in public. For computer software engineers, a linter is a program that uses...",
                "summary": "What is a linter? For some, a linter is that round brush-thingy with sticky paper that you use to remove your cat's fur from your otherwise beautiful jacket before going out in public. For computer software engineers, a linter is a program that uses static analysis to determine if there are potential errors, stylistic problems, or other suspicious operations in an application. Attempting to use your lint brush with an Angular application might be tricky, or perhaps, it's an alternative method to cleaning the grime off your screen that has been there for months and you can somehow see past every day. Instead, Angular developers have long relied on tslint, which is a lint tool specifically built for TypeScript. Things were good, well, mostly good, up until last year when, in the midst of quarantining and eating ramen, you read a tweet that said maintenance of tslint was coming to an end. So, what is an Angular developer to do?<br /><br />Enter James Henry. James is a Consultant Architect for Nrwl, and generally coined by the Angular Show, as \"that good looking guy at Narwhal\" (not that everyone else isn't beautiful). James has worked alongside the eslint team for many years, and has provided a solution to those using TypeScript, and thus tslint, to migrate and leverage the power of eslint. James talks through his journey working with eslint, TypeScript, and more. To further prove that James good looking (scratch that)... an outstanding contributor to the community, James has provided a migration path for the most common tslint rules to eslint rules.<br /><br />Should you migrate to eslint today? How difficult is it? What about my existing tslint rules? Those are all great questions, and the panelists will explore and learn from James the answers to those questions and more. Go ahead, subscribe, and have a listen.<br /><br />Show Notes:<br />discord.gg/angular<br /><a href=\"https://astexplorer.net/\" rel=\"noopener\">https://astexplorer.net/</a><br /><a href=\"https://github.com/typescript-eslint/tslint-to-eslint-config\" rel=\"noopener\">https://github.com/typescript-eslint/tslint-to-eslint-config</a><br /><a href=\"https://github.com/angular-eslint/angular-eslint\" rel=\"noopener\">https://github.com/angular-eslint/angular-eslint</a><br /><a href=\"https://twitter.com/cotufa82/status/1355901060636930049\" rel=\"noopener\">https://twitter.com/cotufa82/status/1355901060636930049</a><br /><br />Connect with us:<br />James Henry @mrjameshenry<br />Jennifer Wadella @likeOMGitsFEDAY<br />Brian Love @brian_love<br />Aaron Frost @aaronfrost"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e048-tslint-to-eslint-migration",
            "pubDate": "Wed, 10 Feb 2021 15:40:21 +0000",
            "title": "E048 - tslint to eslint Migration",
            "entities": {
                "DATE": [
                    "months",
                    "last year",
                    "many years",
                    "today"
                ],
                "ORG": [
                    "TypeScript",
                    "TypeScript",
                    "TypeScript",
                    "href=\"https://github.com",
                    "href=\"https://github.com",
                    "href=\"https://twitter.com/cotufa82/status/1355901060636930049",
                    "rel=\"noopener\">https://twitter.com/cotufa82/status/1355901060636930049</a><br"
                ],
                "PERSON": [
                    "James Henry",
                    "James",
                    "James",
                    "James",
                    "James",
                    "James",
                    "Henry",
                    "Wadella",
                    "Frost @aaronfrost"
                ],
                "WORK_OF_ART": [
                    "a Consultant Architect for Nrwl",
                    "Love"
                ],
                "LAW": [
                    "the Angular Show"
                ]
            }
        },
        {
            "content": "Angular is a feature-rich and opinionated framework. Opinionated, for example, in terms of fetching data via XHR. Most, and perhaps all, Angular developers reach for the HttpClientModule. Most of us don't have to even think about that decision. While the debate will likely never end over JavaScript frameworks, Angular developers may never end their debate over what forms implementation to use. Do you use reactive forms (which are arguably not really reactive) or template-driven forms? The Angular show panelists want to take you on a learning journey into the depths of this debate in a healthy, fun, and educational way.<br /><br />If you read the Angular documentation you might be inclined to believe that Angular's template-driven forms approach is where you start, but real Angular devs use reactive forms. I mean, the name reactive is hip. And template-driven forms, that's so AngularJS-y. Why would I want to use template-driven forms?<br /><br />We have the perfect guest to answer that question for you. Ward Bell, a Google Developer Expert in Angular and President/Co-Founder at IdeaBlade, has put template-driven forms through its paces for many years, and in our opinion, is one of the foremost experts on using template-driven forms in Angular. Grab your kombucha, coffee, running shoes, or really whatever you want, and join us as we learn from the master on template-driven forms. By the end of the show, you might be asking yourself why you aren't already using template-driven forms in your Angular applications.<br /><br />Bonus notes from Ward after the show:<br /><br />I talked through a couple of approaches during the show but I didn\u2019t have an actual sample to refer to... I just updated the StackBlitz sample with an example of both approaches. Color me \u201cobsessive\u201d.<br /><br /><a href=\"https://stackblitz.com/edit/angular-kkatri?file=src%2Fapp%2Fhero-form%2Fhero-form.component.html\" rel=\"noopener\">https://stackblitz.com/edit/angular-kkatri?file=src%2Fapp%2Fhero-form%2Fhero-form.component.html</a><br /><br />The hero now has both a \u201cPower\u201d and a \u201cPower Qualifier\u201d (category and subcategory). Both are required. You pick a power and the list of qualifiers changes accordingly. A special \u201cSelect a power qualifier\u201d appears until you pick a qualifier. This demonstrates the \u201cdisabled control\u201d approach.<br /><br />One of the selectable powers is \u201cOther\u201d. It has no pre-defined qualifiers. Instead, you must enter a free-form description of the \u201cother power\u201d; what you enter is bound to the hero\u2019s qualifier field.<br /><br />When you pick \u201cOther\u201d, the \u201cPower Qualifier\u201d selector is removed from the form and a required free-form input control takes its place. This is the alternative \u201cngIf\u201d approach that I mentioned.<br /><br />Click the \u201cNew\u201d button to see how it works when Hero has no power.<br /><br />Show Notes<br />AbstractControl: <a href=\"https://angular.io/api/forms/AbstractControl\" rel=\"noopener\">https://angular.io/api/forms/AbstractControl</a><br /><br />Connect with us:<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Brian Love - @brian_love<br />Ward Bell - @wardbell",
            "contentSnippet": "Angular is a feature-rich and opinionated framework. Opinionated, for example, in terms of fetching data via XHR. Most, and perhaps all, Angular developers reach for the HttpClientModule. Most of us don't have to even think about that decision. While the debate will likely never end over JavaScript frameworks, Angular developers may never end their debate over what forms implementation to use. Do you use reactive forms (which are arguably not really reactive) or template-driven forms? The Angular show panelists want to take you on a learning journey into the depths of this debate in a healthy, fun, and educational way.\nIf you read the Angular documentation you might be inclined to believe that Angular's template-driven forms approach is where you start, but real Angular devs use reactive forms. I mean, the name reactive is hip. And template-driven forms, that's so AngularJS-y. Why would I want to use template-driven forms?\nWe have the perfect guest to answer that question for you. Ward Bell, a Google Developer Expert in Angular and President/Co-Founder at IdeaBlade, has put template-driven forms through its paces for many years, and in our opinion, is one of the foremost experts on using template-driven forms in Angular. Grab your kombucha, coffee, running shoes, or really whatever you want, and join us as we learn from the master on template-driven forms. By the end of the show, you might be asking yourself why you aren't already using template-driven forms in your Angular applications.\nBonus notes from Ward after the show:\nI talked through a couple of approaches during the show but I didn\u2019t have an actual sample to refer to... I just updated the StackBlitz sample with an example of both approaches. Color me \u201cobsessive\u201d.\nhttps://stackblitz.com/edit/angular-kkatri?file=src%2Fapp%2Fhero-form%2Fhero-form.component.html\nThe hero now has both a \u201cPower\u201d and a \u201cPower Qualifier\u201d (category and subcategory). Both are required. You pick a power and the list of qualifiers changes accordingly. A special \u201cSelect a power qualifier\u201d appears until you pick a qualifier. This demonstrates the \u201cdisabled control\u201d approach.\nOne of the selectable powers is \u201cOther\u201d. It has no pre-defined qualifiers. Instead, you must enter a free-form description of the \u201cother power\u201d; what you enter is bound to the hero\u2019s qualifier field.\nWhen you pick \u201cOther\u201d, the \u201cPower Qualifier\u201d selector is removed from the form and a required free-form input control takes its place. This is the alternative \u201cngIf\u201d approach that I mentioned.\nClick the \u201cNew\u201d button to see how it works when Hero has no power.\nShow Notes\nAbstractControl: https://angular.io/api/forms/AbstractControl\nConnect with us:\nAaron Frost - @aaronfrost\nJennifer Wadella - @likeOMGitsFEDAY\nBrian Love - @brian_love\nWard Bell - @wardbell",
            "enclosure": {
                "length": "53697634",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/43270905/tas_jan_27_2021_forms_series_episode_2_template_driven_forms_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/43270905",
            "isoDate": "2021-02-05T14:03:21.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3357",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "abstractcontrol,angular,bell,code,development,driven,forms,framework,javascript,js,ng,template,ward,web",
                "subtitle": "Angular is a feature-rich and opinionated framework. Opinionated, for example, in terms of fetching data via XHR. Most, and perhaps all, Angular developers reach for the HttpClientModule. Most of us don't have to even think about that decision. While...",
                "summary": "Angular is a feature-rich and opinionated framework. Opinionated, for example, in terms of fetching data via XHR. Most, and perhaps all, Angular developers reach for the HttpClientModule. Most of us don't have to even think about that decision. While the debate will likely never end over JavaScript frameworks, Angular developers may never end their debate over what forms implementation to use. Do you use reactive forms (which are arguably not really reactive) or template-driven forms? The Angular show panelists want to take you on a learning journey into the depths of this debate in a healthy, fun, and educational way.<br /><br />If you read the Angular documentation you might be inclined to believe that Angular's template-driven forms approach is where you start, but real Angular devs use reactive forms. I mean, the name reactive is hip. And template-driven forms, that's so AngularJS-y. Why would I want to use template-driven forms?<br /><br />We have the perfect guest to answer that question for you. Ward Bell, a Google Developer Expert in Angular and President/Co-Founder at IdeaBlade, has put template-driven forms through its paces for many years, and in our opinion, is one of the foremost experts on using template-driven forms in Angular. Grab your kombucha, coffee, running shoes, or really whatever you want, and join us as we learn from the master on template-driven forms. By the end of the show, you might be asking yourself why you aren't already using template-driven forms in your Angular applications.<br /><br />Bonus notes from Ward after the show:<br /><br />I talked through a couple of approaches during the show but I didn\u2019t have an actual sample to refer to... I just updated the StackBlitz sample with an example of both approaches. Color me \u201cobsessive\u201d.<br /><br /><a href=\"https://stackblitz.com/edit/angular-kkatri?file=src%2Fapp%2Fhero-form%2Fhero-form.component.html\" rel=\"noopener\">https://stackblitz.com/edit/angular-kkatri?file=src%2Fapp%2Fhero-form%2Fhero-form.component.html</a><br /><br />The hero now has both a \u201cPower\u201d and a \u201cPower Qualifier\u201d (category and subcategory). Both are required. You pick a power and the list of qualifiers changes accordingly. A special \u201cSelect a power qualifier\u201d appears until you pick a qualifier. This demonstrates the \u201cdisabled control\u201d approach.<br /><br />One of the selectable powers is \u201cOther\u201d. It has no pre-defined qualifiers. Instead, you must enter a free-form description of the \u201cother power\u201d; what you enter is bound to the hero\u2019s qualifier field.<br /><br />When you pick \u201cOther\u201d, the \u201cPower Qualifier\u201d selector is removed from the form and a required free-form input control takes its place. This is the alternative \u201cngIf\u201d approach that I mentioned.<br /><br />Click the \u201cNew\u201d button to see how it works when Hero has no power.<br /><br />Show Notes<br />AbstractControl: <a href=\"https://angular.io/api/forms/AbstractControl\" rel=\"noopener\">https://angular.io/api/forms/AbstractControl</a><br /><br />Connect with us:<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Brian Love - @brian_love<br />Ward Bell - @wardbell"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e047-forms-series-episode-2-template-dri",
            "pubDate": "Fri, 05 Feb 2021 14:03:21 +0000",
            "title": "E047 - Forms Series Episode 2: Template Driven Forms",
            "entities": {
                "ORG": [
                    "JavaScript",
                    "IdeaBlade",
                    "StackBlitz",
                    "href=\"https://stackblitz.com",
                    "src%2Fapp%2Fhero-form%2Fhero-form.component.html",
                    "rel=\"noopener\">https://stackblitz.com",
                    "src%2Fapp%2Fhero-form%2Fhero-form.component.html</a><br",
                    "AbstractControl",
                    "rel=\"noopener\">https://angular.io",
                    "/>Ward Bell - @wardbell"
                ],
                "PERSON": [
                    "AngularJS-y. Why",
                    "Ward Bell",
                    "Ward",
                    "Wadella - @likeOMGitsFEDAY"
                ],
                "DATE": [
                    "many years"
                ],
                "GPE": [
                    "kombucha"
                ],
                "WORK_OF_ART": [
                    "Power",
                    "Power Qualifier",
                    "Other",
                    "Other",
                    "Power Qualifier",
                    "Love"
                ],
                "PRODUCT": [
                    "Notes"
                ]
            }
        },
        {
            "content": "Developing on the web can potentially be reduced to inputs and outputs, and further, a snapshot of current inputs and outputs is the state of our application. Inputs often come in the form of user events, and one of the primary methods for users to provide input into our applications is through forms. Whether you love or hate forms, web developers have no way of escaping this critical input method. <br /><br />In this episode of the Angular Show, our panelists are joined by two experts in the area of Angular and forms, Juri Strumpflohner and Bram Borggreve.  Juri Strumpflohner is a Senior Software Engineer at Narwhal and Bram is a freelance developer and founder of BeeSoftLabs. Juri <br />and Bram are members of the Angular Formly core team that produces and maintains this open-source project. <br /><br />While Angular ships with powerful form modules, Angular Formly builds on top of Angular's modules to provide an abstraction layer that enables developers to build robust and complex forms. One of the biggest advantages is the ability to dynamically and programmatically define form groups, arrays, and controls. Further, Angular Formly provides wrappers for control appearances based on several popular UI component libraries, such as Angular Material and Bootstrap, or you can create your own UI wrapper if necessary.<br /><br />Connect with us: <br />Juri Strumpflohner - @juristr<br />Bram Borggreve - @beeman_nl<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Brian Love - @brian_love",
            "contentSnippet": "Developing on the web can potentially be reduced to inputs and outputs, and further, a snapshot of current inputs and outputs is the state of our application. Inputs often come in the form of user events, and one of the primary methods for users to provide input into our applications is through forms. Whether you love or hate forms, web developers have no way of escaping this critical input method. \nIn this episode of the Angular Show, our panelists are joined by two experts in the area of Angular and forms, Juri Strumpflohner and Bram Borggreve.  Juri Strumpflohner is a Senior Software Engineer at Narwhal and Bram is a freelance developer and founder of BeeSoftLabs. Juri \nand Bram are members of the Angular Formly core team that produces and maintains this open-source project. \nWhile Angular ships with powerful form modules, Angular Formly builds on top of Angular's modules to provide an abstraction layer that enables developers to build robust and complex forms. One of the biggest advantages is the ability to dynamically and programmatically define form groups, arrays, and controls. Further, Angular Formly provides wrappers for control appearances based on several popular UI component libraries, such as Angular Material and Bootstrap, or you can create your own UI wrapper if necessary.\nConnect with us: \nJuri Strumpflohner - @juristr\nBram Borggreve - @beeman_nl\nAaron Frost - @aaronfrost\nJennifer Wadella - @likeOMGitsFEDAY\nBrian Love - @brian_love",
            "enclosure": {
                "length": "71684885",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/42799526/tas_november_11_forms_series_ngx_formly_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/42799526",
            "isoDate": "2021-01-27T15:23:35.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4481",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,formly,forms,javascript,ng-conf,ngx,programmer,programming",
                "subtitle": "Developing on the web can potentially be reduced to inputs and outputs, and further, a snapshot of current inputs and outputs is the state of our application. Inputs often come in the form of user events, and one of the primary methods for users to...",
                "summary": "Developing on the web can potentially be reduced to inputs and outputs, and further, a snapshot of current inputs and outputs is the state of our application. Inputs often come in the form of user events, and one of the primary methods for users to provide input into our applications is through forms. Whether you love or hate forms, web developers have no way of escaping this critical input method. <br /><br />In this episode of the Angular Show, our panelists are joined by two experts in the area of Angular and forms, Juri Strumpflohner and Bram Borggreve.  Juri Strumpflohner is a Senior Software Engineer at Narwhal and Bram is a freelance developer and founder of BeeSoftLabs. Juri <br />and Bram are members of the Angular Formly core team that produces and maintains this open-source project. <br /><br />While Angular ships with powerful form modules, Angular Formly builds on top of Angular's modules to provide an abstraction layer that enables developers to build robust and complex forms. One of the biggest advantages is the ability to dynamically and programmatically define form groups, arrays, and controls. Further, Angular Formly provides wrappers for control appearances based on several popular UI component libraries, such as Angular Material and Bootstrap, or you can create your own UI wrapper if necessary.<br /><br />Connect with us: <br />Juri Strumpflohner - @juristr<br />Bram Borggreve - @beeman_nl<br />Aaron Frost - @aaronfrost<br />Jennifer Wadella - @likeOMGitsFEDAY<br />Brian Love - @brian_love"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e046-forms-series-episode-1-angular-form",
            "pubDate": "Wed, 27 Jan 2021 15:23:35 +0000",
            "title": "E046  - Forms Series Episode 1: Angular Formly",
            "entities": {
                "CARDINAL": [
                    "one",
                    "two",
                    "One"
                ],
                "WORK_OF_ART": [
                    "the Angular Show",
                    "Love"
                ],
                "PERSON": [
                    "Juri Strumpflohner",
                    "Bram Borggreve",
                    "Juri Strumpflohner",
                    "Bram",
                    "Juri",
                    "Bram",
                    "Angular Formly",
                    "Wadella - @likeOMGitsFEDAY"
                ],
                "ORG": [
                    "UI",
                    "Angular Material and Bootstrap",
                    "UI"
                ]
            }
        },
        {
            "content": "Micro-what?!? What is a micro frontend, what does it have to do with Angular, why would I want to use this strategy, and how do I go about implementing this in my organization?<br /><br />These are all good questions. Whether you know what a micro frontend is, have never heard of it, or are currently implementing this strategy in your organization, this is an episode of the Angular Show that you do not want to miss.<br /><br />Join panelists Aaron Frost, Brian Love, and Jennifer Wadella as they start their journey in learning about Micro Frontends in Angular. We had the privilege to sit down with Zama Khan Mohamed, who is an expert in Micro Frontends. Zama teaches us the basics of what a micro frontend is and why we would consider this strategy for our applications. Then, we dive into the details on how Angular developers and organizations using Angular, as well as a mix of other frameworks, can leverage Micro Frontends in their architecture. We also discuss some of the benefits and costs of this approach, and why you might want to consider using micro frontends. Finally, we also touch on Webpach version 5's new support for federated modules and the impact this has on how we build modern micro frontends.<br /><br />Phew - that sounds like a lot, but have no fear, your friendly panelists are here to walk with you through this new landscape of micro frontends in the JavaScript ecosystem.<br /><br />Show Notes:<br /><a href=\"https://github.com/single-spa/single-spa\" rel=\"noopener\">https://github.com/single-spa/single-spa</a><br /><a href=\"https://webpack.js.org/concepts/module-federation/\" rel=\"noopener\">https://webpack.js.org/concepts/module-federation/</a><br /><br />Connect with us:<br />@mohamedzamakhan<br />@likeOMGitsFEDAY<br />@brian_love<br />@aaronfrost",
            "contentSnippet": "Micro-what?!? What is a micro frontend, what does it have to do with Angular, why would I want to use this strategy, and how do I go about implementing this in my organization?\nThese are all good questions. Whether you know what a micro frontend is, have never heard of it, or are currently implementing this strategy in your organization, this is an episode of the Angular Show that you do not want to miss.\nJoin panelists Aaron Frost, Brian Love, and Jennifer Wadella as they start their journey in learning about Micro Frontends in Angular. We had the privilege to sit down with Zama Khan Mohamed, who is an expert in Micro Frontends. Zama teaches us the basics of what a micro frontend is and why we would consider this strategy for our applications. Then, we dive into the details on how Angular developers and organizations using Angular, as well as a mix of other frameworks, can leverage Micro Frontends in their architecture. We also discuss some of the benefits and costs of this approach, and why you might want to consider using micro frontends. Finally, we also touch on Webpach version 5's new support for federated modules and the impact this has on how we build modern micro frontends.\nPhew - that sounds like a lot, but have no fear, your friendly panelists are here to walk with you through this new landscape of micro frontends in the JavaScript ecosystem.\nShow Notes:\nhttps://github.com/single-spa/single-spa\nhttps://webpack.js.org/concepts/module-federation/\nConnect with us:\n@mohamedzamakhan\n@likeOMGitsFEDAY\n@brian_love\n@aaronfrost",
            "enclosure": {
                "length": "65848085",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/42955633/tas_december_9_micro_frontends_in_angular_edit_3.mp3"
            },
            "guid": "https://api.spreaker.com/episode/42955633",
            "isoDate": "2021-01-15T19:02:47.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4116",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,javascript,micro-frontends,ng-conf,programmer,programming",
                "subtitle": "Micro-what?!? What is a micro frontend, what does it have to do with Angular, why would I want to use this strategy, and how do I go about implementing this in my organization?\n\nThese are all good questions. Whether you know what a micro frontend is,...",
                "summary": "Micro-what?!? What is a micro frontend, what does it have to do with Angular, why would I want to use this strategy, and how do I go about implementing this in my organization?<br /><br />These are all good questions. Whether you know what a micro frontend is, have never heard of it, or are currently implementing this strategy in your organization, this is an episode of the Angular Show that you do not want to miss.<br /><br />Join panelists Aaron Frost, Brian Love, and Jennifer Wadella as they start their journey in learning about Micro Frontends in Angular. We had the privilege to sit down with Zama Khan Mohamed, who is an expert in Micro Frontends. Zama teaches us the basics of what a micro frontend is and why we would consider this strategy for our applications. Then, we dive into the details on how Angular developers and organizations using Angular, as well as a mix of other frameworks, can leverage Micro Frontends in their architecture. We also discuss some of the benefits and costs of this approach, and why you might want to consider using micro frontends. Finally, we also touch on Webpach version 5's new support for federated modules and the impact this has on how we build modern micro frontends.<br /><br />Phew - that sounds like a lot, but have no fear, your friendly panelists are here to walk with you through this new landscape of micro frontends in the JavaScript ecosystem.<br /><br />Show Notes:<br /><a href=\"https://github.com/single-spa/single-spa\" rel=\"noopener\">https://github.com/single-spa/single-spa</a><br /><a href=\"https://webpack.js.org/concepts/module-federation/\" rel=\"noopener\">https://webpack.js.org/concepts/module-federation/</a><br /><br />Connect with us:<br />@mohamedzamakhan<br />@likeOMGitsFEDAY<br />@brian_love<br />@aaronfrost"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e045-micro-frontends-in-angular",
            "pubDate": "Fri, 15 Jan 2021 19:02:47 +0000",
            "title": "E045 - Micro Frontends in Angular",
            "entities": {
                "WORK_OF_ART": [
                    "the Angular Show"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Brian Love",
                    "Jennifer Wadella",
                    "Zama Khan Mohamed",
                    "Zama",
                    "Webpach"
                ],
                "FAC": [
                    "Micro Frontends",
                    "Micro Frontends"
                ],
                "GPE": [
                    "Micro Frontends"
                ],
                "CARDINAL": [
                    "5"
                ],
                "ORG": [
                    "JavaScript",
                    "href=\"https://github.com"
                ]
            }
        },
        {
            "content": "Securing your Angular application is almost always necessary. And, it's almost always unnecessary for you to roll your own solution to authentication and security. Why? First, security is not easy and straight-forward. At first, you might be tempted to think, \"Well, it's just a form with two fields, email, and a password, right?\" Not really. Securing your app is complex, constantly evolving, and is critical to your application. Finally, implementing your own OAuth-based social account authentication can be mundane, and perhaps even trivial. You, your team, and your organization should prioritize what you know and do best: building your app.<br /><br />While there are many identity providers to choose from, Angular Show panelists Jeniffer Wadella and Brian Love wanted to learn more about the solution provided by Microsoft. So, we sat down with Christos Matskas from the Microsoft Identity Product Group to learn more.<br /><br />Microsoft Azure provides a robust infrastructure and tooling for securing Angular applications. And getting started only requires an Azure account and your existing knowledge of Angular. First, you register your Angular application, then you can configure your Angular application using the Microsoft Authentication Library for JavaScript. The Microsoft Identity Product Group team has also built a wrapper on top of the JS library specifically for Angular, making it very easy to install and import the necessary module into your Angular application's root module to configure your application. The team also provides plenty of source code examples in their documentation specific to Angular. Using Microsoft Identity platform, you can rest assured that your application is secure, and the security of your application is following best practices from security experts.<br /><br />Join us as we learn about the benefits of using an identity provider, the specific implementation of using Microsoft Azure identity solution with Angular, and how you can get started. Don't forget to subscribe to get more great content from the Angular Show!<br /><br />Show Notes:<br /><a href=\"https://medium.com/identity-beyond-borders/what-the-heck-is-pkce-40662e801a76\" rel=\"noopener\">https://medium.com/identity-beyond-borders/what-the-heck-is-pkce-40662e801a76</a><br /><a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-v2-angular\" rel=\"noopener\">https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-v2-angular</a><br /><br />Connect With Us:<br />Christos Matskas - <br />@ChristosMatskas<br />@AzureAndChill<br />aka.ms/425Show<br />aka.ms/425Show/yt<br />aka.ms/425Show/blog<br />aka.ms/425Show/discord/join<br /><br />Jennifer Wadella - <br />@likeOMGitsFEDAY<br /><br />Brian Love -<br />@brian_love",
            "contentSnippet": "Securing your Angular application is almost always necessary. And, it's almost always unnecessary for you to roll your own solution to authentication and security. Why? First, security is not easy and straight-forward. At first, you might be tempted to think, \"Well, it's just a form with two fields, email, and a password, right?\" Not really. Securing your app is complex, constantly evolving, and is critical to your application. Finally, implementing your own OAuth-based social account authentication can be mundane, and perhaps even trivial. You, your team, and your organization should prioritize what you know and do best: building your app.\nWhile there are many identity providers to choose from, Angular Show panelists Jeniffer Wadella and Brian Love wanted to learn more about the solution provided by Microsoft. So, we sat down with Christos Matskas from the Microsoft Identity Product Group to learn more.\nMicrosoft Azure provides a robust infrastructure and tooling for securing Angular applications. And getting started only requires an Azure account and your existing knowledge of Angular. First, you register your Angular application, then you can configure your Angular application using the Microsoft Authentication Library for JavaScript. The Microsoft Identity Product Group team has also built a wrapper on top of the JS library specifically for Angular, making it very easy to install and import the necessary module into your Angular application's root module to configure your application. The team also provides plenty of source code examples in their documentation specific to Angular. Using Microsoft Identity platform, you can rest assured that your application is secure, and the security of your application is following best practices from security experts.\nJoin us as we learn about the benefits of using an identity provider, the specific implementation of using Microsoft Azure identity solution with Angular, and how you can get started. Don't forget to subscribe to get more great content from the Angular Show!\nShow Notes:\nhttps://medium.com/identity-beyond-borders/what-the-heck-is-pkce-40662e801a76\nhttps://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-v2-angular\nConnect With Us:\nChristos Matskas - \n@ChristosMatskas\n@AzureAndChill\naka.ms/425Show\naka.ms/425Show/yt\naka.ms/425Show/blog\naka.ms/425Show/discord/join\nJennifer Wadella - \n@likeOMGitsFEDAY\nBrian Love -\n@brian_love",
            "enclosure": {
                "length": "35094296",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/42577991/tas_december_12_securing_angular_apps_with_the_microsoft_identity_platform_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/42577991",
            "isoDate": "2021-01-06T15:35:18.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "2194",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,javascript,microsoft,ng-conf,programmer,programming",
                "subtitle": "Securing your Angular application is almost always necessary. And, it's almost always unnecessary for you to roll your own solution to authentication and security. Why? First, security is not easy and straight-forward. At first, you might be tempted...",
                "summary": "Securing your Angular application is almost always necessary. And, it's almost always unnecessary for you to roll your own solution to authentication and security. Why? First, security is not easy and straight-forward. At first, you might be tempted to think, \"Well, it's just a form with two fields, email, and a password, right?\" Not really. Securing your app is complex, constantly evolving, and is critical to your application. Finally, implementing your own OAuth-based social account authentication can be mundane, and perhaps even trivial. You, your team, and your organization should prioritize what you know and do best: building your app.<br /><br />While there are many identity providers to choose from, Angular Show panelists Jeniffer Wadella and Brian Love wanted to learn more about the solution provided by Microsoft. So, we sat down with Christos Matskas from the Microsoft Identity Product Group to learn more.<br /><br />Microsoft Azure provides a robust infrastructure and tooling for securing Angular applications. And getting started only requires an Azure account and your existing knowledge of Angular. First, you register your Angular application, then you can configure your Angular application using the Microsoft Authentication Library for JavaScript. The Microsoft Identity Product Group team has also built a wrapper on top of the JS library specifically for Angular, making it very easy to install and import the necessary module into your Angular application's root module to configure your application. The team also provides plenty of source code examples in their documentation specific to Angular. Using Microsoft Identity platform, you can rest assured that your application is secure, and the security of your application is following best practices from security experts.<br /><br />Join us as we learn about the benefits of using an identity provider, the specific implementation of using Microsoft Azure identity solution with Angular, and how you can get started. Don't forget to subscribe to get more great content from the Angular Show!<br /><br />Show Notes:<br /><a href=\"https://medium.com/identity-beyond-borders/what-the-heck-is-pkce-40662e801a76\" rel=\"noopener\">https://medium.com/identity-beyond-borders/what-the-heck-is-pkce-40662e801a76</a><br /><a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-v2-angular\" rel=\"noopener\">https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-v2-angular</a><br /><br />Connect With Us:<br />Christos Matskas - <br />@ChristosMatskas<br />@AzureAndChill<br />aka.ms/425Show<br />aka.ms/425Show/yt<br />aka.ms/425Show/blog<br />aka.ms/425Show/discord/join<br /><br />Jennifer Wadella - <br />@likeOMGitsFEDAY<br /><br />Brian Love -<br />@brian_love"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e044-securing-angular-apps-with-the-micr",
            "pubDate": "Wed, 06 Jan 2021 15:35:18 +0000",
            "title": "E044 - Securing Angular Apps with the Microsoft Identity Platform",
            "entities": {
                "ORDINAL": [
                    "First",
                    "first",
                    "First"
                ],
                "CARDINAL": [
                    "two"
                ],
                "PERSON": [
                    "Angular Show",
                    "Jeniffer Wadella",
                    "Brian Love"
                ],
                "ORG": [
                    "Microsoft",
                    "the Microsoft Identity Product Group",
                    "the Microsoft Authentication Library",
                    "JavaScript",
                    "The Microsoft Identity Product Group",
                    "Microsoft Identity",
                    "Microsoft",
                    "href=\"https://medium.com",
                    "rel=\"noopener\">https://medium.com",
                    "/>@ChristosMatskas"
                ],
                "WORK_OF_ART": [
                    "Love"
                ]
            }
        },
        {
            "content": "Join us in part two of our series on RxJS Operators. As Angular developers, we rely on RxJS primary for asynchronous operations via the Observable primitive. While we can think of an Observable like a Promise, and simply subscribe, we can also take advantage of the many, many operators at our disposal for the transformation of events and data within the Observable stream.<br /><br />In order to learn more about RxJS transformation operators, we invited Lara Newsom and Zack De Rose to the podcast. Lara and Zack have a wealth of knowledge in both Angular and RxJS. Lara is a software engineer at Source Allies, a technical consultancy located in Iowa; and Zack is a senior software engineer at Narwhal, where they build Nx and Nx Cloud, as well as provide Angular consulting services.<br /><br />To get started, the group tackles the mapping operators, including map, pluck, scan, and reduce. They then dive into the various higher-order mapping operators, including switchMap, exhaustMap, mergeMap, and concatMap. Learning the different behaviors of each of the mapping operators is important when determining which operator to use within the pipe method. Next, the panel talks about the buffer operators, including buffer, bufferCount, and bufferTime. This then leads into discussion about the window operators, including window, windowCount, and windowTime, all of which have nothing to do with the global window variable in JavaScript when executing in the context of a browser.<br /><br />This episode is jam-packed with great content, humor, and fun. Don't forget to subscribe so you can continue to join us in our journey of learning about RxJS Operators.<br /><br />Lara Newson @LaraNerdsom<br />Zack DeRose @zackderose<br />Aaron Frost @aaronfrost<br />Jennifer Wadella @likeOMGitsFEDAY<br />Brian Love @brian_love",
            "contentSnippet": "Join us in part two of our series on RxJS Operators. As Angular developers, we rely on RxJS primary for asynchronous operations via the Observable primitive. While we can think of an Observable like a Promise, and simply subscribe, we can also take advantage of the many, many operators at our disposal for the transformation of events and data within the Observable stream.\nIn order to learn more about RxJS transformation operators, we invited Lara Newsom and Zack De Rose to the podcast. Lara and Zack have a wealth of knowledge in both Angular and RxJS. Lara is a software engineer at Source Allies, a technical consultancy located in Iowa; and Zack is a senior software engineer at Narwhal, where they build Nx and Nx Cloud, as well as provide Angular consulting services.\nTo get started, the group tackles the mapping operators, including map, pluck, scan, and reduce. They then dive into the various higher-order mapping operators, including switchMap, exhaustMap, mergeMap, and concatMap. Learning the different behaviors of each of the mapping operators is important when determining which operator to use within the pipe method. Next, the panel talks about the buffer operators, including buffer, bufferCount, and bufferTime. This then leads into discussion about the window operators, including window, windowCount, and windowTime, all of which have nothing to do with the global window variable in JavaScript when executing in the context of a browser.\nThis episode is jam-packed with great content, humor, and fun. Don't forget to subscribe so you can continue to join us in our journey of learning about RxJS Operators.\nLara Newson @LaraNerdsom\nZack DeRose @zackderose\nAaron Frost @aaronfrost\nJennifer Wadella @likeOMGitsFEDAY\nBrian Love @brian_love",
            "enclosure": {
                "length": "75267224",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/42297192/tas_oct_28_rxjs_operators_series_ep2_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/42297192",
            "isoDate": "2020-12-23T17:57:36.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4705",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,javascript,ng-conf,programmer,programming,rxjs",
                "subtitle": "Join us in part two of our series on RxJS Operators. As Angular developers, we rely on RxJS primary for asynchronous operations via the Observable primitive. While we can think of an Observable like a Promise, and simply subscribe, we can also take...",
                "summary": "Join us in part two of our series on RxJS Operators. As Angular developers, we rely on RxJS primary for asynchronous operations via the Observable primitive. While we can think of an Observable like a Promise, and simply subscribe, we can also take advantage of the many, many operators at our disposal for the transformation of events and data within the Observable stream.<br /><br />In order to learn more about RxJS transformation operators, we invited Lara Newsom and Zack De Rose to the podcast. Lara and Zack have a wealth of knowledge in both Angular and RxJS. Lara is a software engineer at Source Allies, a technical consultancy located in Iowa; and Zack is a senior software engineer at Narwhal, where they build Nx and Nx Cloud, as well as provide Angular consulting services.<br /><br />To get started, the group tackles the mapping operators, including map, pluck, scan, and reduce. They then dive into the various higher-order mapping operators, including switchMap, exhaustMap, mergeMap, and concatMap. Learning the different behaviors of each of the mapping operators is important when determining which operator to use within the pipe method. Next, the panel talks about the buffer operators, including buffer, bufferCount, and bufferTime. This then leads into discussion about the window operators, including window, windowCount, and windowTime, all of which have nothing to do with the global window variable in JavaScript when executing in the context of a browser.<br /><br />This episode is jam-packed with great content, humor, and fun. Don't forget to subscribe so you can continue to join us in our journey of learning about RxJS Operators.<br /><br />Lara Newson @LaraNerdsom<br />Zack DeRose @zackderose<br />Aaron Frost @aaronfrost<br />Jennifer Wadella @likeOMGitsFEDAY<br />Brian Love @brian_love"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e043-rxjs-operators-series-episode-2-tra",
            "pubDate": "Wed, 23 Dec 2020 17:57:36 +0000",
            "title": "E043 - RxJS Operators Series Episode 2: Transformation Operators",
            "entities": {
                "CARDINAL": [
                    "two"
                ],
                "ORG": [
                    "RxJS Operators",
                    "Lara",
                    "JavaScript",
                    "RxJS Operators.<br"
                ],
                "GPE": [
                    "RxJS",
                    "RxJS",
                    "RxJS",
                    "Iowa",
                    "pluck",
                    "scan",
                    "exhaustMap",
                    "mergeMap"
                ],
                "PERSON": [
                    "Observable",
                    "Lara Newsom",
                    "Zack De Rose",
                    "Zack",
                    "Zack",
                    "Nx Cloud",
                    "Frost @aaronfrost",
                    "Wadella"
                ],
                "PRODUCT": [
                    "Promise"
                ],
                "FAC": [
                    "Source Allies"
                ],
                "WORK_OF_ART": [
                    "Love"
                ]
            }
        },
        {
            "content": "The Angular Show is primarily focused on engagement with the Angular community through education. But in this week's episode, we won't be learning anything new; we won't hear from a community expert about a particular technology; we won't discuss the past, present, or future of Angular; and we won't learn about state management, flux, redux, NgRx, or RxJS...<br /><br />You might be asking - \"Well, then what ARE the wonderful panelists going to talk about on today's show?\"<br /><br />In the first installment of the Angular Sideline, our lovely panelists Jennifer Wadella, Aaron Frost, &\u00a0Brian Love,\u00a0brought you into a range of their hysterical and odd musings. And you can expect nothing different for this second episode.\u00a0<br /><br />Just ask yourself this - \"How much do you love Angular and just how far would you go to express that love?\" We won't give away any of the juicy nuggets of comedy that are about to caress your ears and tantalize your neurons. Just click play - and don't forget to subscribe so you don't miss any of our future episodes of the Angular Show.<br /><br />Jennifer Wadella @likeOMGitsFEDAY<br />Brian Love @brian_love<br />@aaronfrost<br /><br />Show Notes:<br /><a href=\"https://twitter.com/zackderose/status/1315647734729248768\" rel=\"noopener\">https://twitter.com/zackderose/status/1315647734729248768</a>",
            "contentSnippet": "The Angular Show is primarily focused on engagement with the Angular community through education. But in this week's episode, we won't be learning anything new; we won't hear from a community expert about a particular technology; we won't discuss the past, present, or future of Angular; and we won't learn about state management, flux, redux, NgRx, or RxJS...\nYou might be asking - \"Well, then what ARE the wonderful panelists going to talk about on today's show?\"\nIn the first installment of the Angular Sideline, our lovely panelists Jennifer Wadella, Aaron Frost, &\u00a0Brian Love,\u00a0brought you into a range of their hysterical and odd musings. And you can expect nothing different for this second episode.\u00a0\nJust ask yourself this - \"How much do you love Angular and just how far would you go to express that love?\" We won't give away any of the juicy nuggets of comedy that are about to caress your ears and tantalize your neurons. Just click play - and don't forget to subscribe so you don't miss any of our future episodes of the Angular Show.\nJennifer Wadella @likeOMGitsFEDAY\nBrian Love @brian_love\n@aaronfrost\nShow Notes:\nhttps://twitter.com/zackderose/status/1315647734729248768",
            "enclosure": {
                "length": "34696332",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/42297185/tas_oct_21_angular_sideline_2_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/42297185",
            "isoDate": "2020-12-09T15:54:43.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "2169",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,javascript,ng-conf,programmer,programming",
                "subtitle": "The Angular Show is primarily focused on engagement with the Angular community through education. But in this week's episode, we won't be learning anything new; we won't hear from a community expert about a particular technology; we won't discuss the...",
                "summary": "The Angular Show is primarily focused on engagement with the Angular community through education. But in this week's episode, we won't be learning anything new; we won't hear from a community expert about a particular technology; we won't discuss the past, present, or future of Angular; and we won't learn about state management, flux, redux, NgRx, or RxJS...<br /><br />You might be asking - \"Well, then what ARE the wonderful panelists going to talk about on today's show?\"<br /><br />In the first installment of the Angular Sideline, our lovely panelists Jennifer Wadella, Aaron Frost, &\u00a0Brian Love,\u00a0brought you into a range of their hysterical and odd musings. And you can expect nothing different for this second episode.\u00a0<br /><br />Just ask yourself this - \"How much do you love Angular and just how far would you go to express that love?\" We won't give away any of the juicy nuggets of comedy that are about to caress your ears and tantalize your neurons. Just click play - and don't forget to subscribe so you don't miss any of our future episodes of the Angular Show.<br /><br />Jennifer Wadella @likeOMGitsFEDAY<br />Brian Love @brian_love<br />@aaronfrost<br /><br />Show Notes:<br /><a href=\"https://twitter.com/zackderose/status/1315647734729248768\" rel=\"noopener\">https://twitter.com/zackderose/status/1315647734729248768</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e042-angular-sideline-2",
            "pubDate": "Wed, 09 Dec 2020 15:54:43 +0000",
            "title": "E042 - Angular Sideline #2",
            "entities": {
                "WORK_OF_ART": [
                    "The Angular Show",
                    "Love"
                ],
                "DATE": [
                    "week",
                    "today"
                ],
                "GPE": [
                    "flux",
                    "redux",
                    "RxJS"
                ],
                "PERSON": [
                    "NgRx",
                    "Jennifer Wadella",
                    "Aaron Frost",
                    "Wadella @likeOMGitsFEDAY"
                ],
                "ORDINAL": [
                    "first",
                    "second"
                ],
                "ORG": [
                    "the Angular Sideline",
                    "href=\"https://twitter.com/zackderose/status/1315647734729248768"
                ]
            }
        },
        {
            "content": "Let's admit it - sometimes CSS can be difficult. Seasoned veterans of web development even struggle with CSS. It's this magical thing that makes our applications look and work with beauty. But, it can also be a challenge, especially as our applications and teams grow and evolve. Most Angular developers spend their day writing TypeScript, HTML, and CSS, or potentially use a preprocessor for CSS such as SCSS or LESS. This episode of The Angular Show focuses on the latter.<br /><br />The panelists are joined by Nicole Oliver, a senior software engineer at Narwhal, who teaches about styling applications in Angular as she shares her experience working with large organizations to reign in the beast that is CSS.<br /><br />The group dives into topics such as block-element-modifier (BEM), Scalable and Modular Architecture for CSS (SMACSS), Object-oriented CSS (OOCSS), and utility-first methodologies. They also chat about using SCSS variables, CSS custom variables, and other approaches for consistent styling of Angular applications.<br /><br />Nicole Oliver @nixallover<br />Jennifer Wadella @likeOMGitsFEDAY<br />Brian Love @brian_love<br />Aaron Frost@aaronfrost<br /><br />Show Notes:<br />Material.io<br /><a href=\"https://material.io/design/material-studies/fortnightly.html#product-architecture\" rel=\"noopener\">https://material.io/design/material-studies/fortnightly.html#product-architecture</a>",
            "contentSnippet": "Let's admit it - sometimes CSS can be difficult. Seasoned veterans of web development even struggle with CSS. It's this magical thing that makes our applications look and work with beauty. But, it can also be a challenge, especially as our applications and teams grow and evolve. Most Angular developers spend their day writing TypeScript, HTML, and CSS, or potentially use a preprocessor for CSS such as SCSS or LESS. This episode of The Angular Show focuses on the latter.\nThe panelists are joined by Nicole Oliver, a senior software engineer at Narwhal, who teaches about styling applications in Angular as she shares her experience working with large organizations to reign in the beast that is CSS.\nThe group dives into topics such as block-element-modifier (BEM), Scalable and Modular Architecture for CSS (SMACSS), Object-oriented CSS (OOCSS), and utility-first methodologies. They also chat about using SCSS variables, CSS custom variables, and other approaches for consistent styling of Angular applications.\nNicole Oliver @nixallover\nJennifer Wadella @likeOMGitsFEDAY\nBrian Love @brian_love\nAaron Frost@aaronfrost\nShow Notes:\nMaterial.io\nhttps://material.io/design/material-studies/fortnightly.html#product-architecture",
            "enclosure": {
                "length": "78150716",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/42251733/tas_oct_14_styling_applications_in_angular_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/42251733",
            "isoDate": "2020-12-01T22:32:02.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4885",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coder,coding,css,developer,development,html,javascript,ng-conf,programmer,programming",
                "subtitle": "Let's admit it - sometimes CSS can be difficult. Seasoned veterans of web development even struggle with CSS. It's this magical thing that makes our applications look and work with beauty. But, it can also be a challenge, especially as our...",
                "summary": "Let's admit it - sometimes CSS can be difficult. Seasoned veterans of web development even struggle with CSS. It's this magical thing that makes our applications look and work with beauty. But, it can also be a challenge, especially as our applications and teams grow and evolve. Most Angular developers spend their day writing TypeScript, HTML, and CSS, or potentially use a preprocessor for CSS such as SCSS or LESS. This episode of The Angular Show focuses on the latter.<br /><br />The panelists are joined by Nicole Oliver, a senior software engineer at Narwhal, who teaches about styling applications in Angular as she shares her experience working with large organizations to reign in the beast that is CSS.<br /><br />The group dives into topics such as block-element-modifier (BEM), Scalable and Modular Architecture for CSS (SMACSS), Object-oriented CSS (OOCSS), and utility-first methodologies. They also chat about using SCSS variables, CSS custom variables, and other approaches for consistent styling of Angular applications.<br /><br />Nicole Oliver @nixallover<br />Jennifer Wadella @likeOMGitsFEDAY<br />Brian Love @brian_love<br />Aaron Frost@aaronfrost<br /><br />Show Notes:<br />Material.io<br /><a href=\"https://material.io/design/material-studies/fortnightly.html#product-architecture\" rel=\"noopener\">https://material.io/design/material-studies/fortnightly.html#product-architecture</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e041-styling-applications-in-angular",
            "pubDate": "Tue, 01 Dec 2020 22:32:02 +0000",
            "title": "E041 - Styling Applications in Angular",
            "entities": {
                "ORG": [
                    "CSS",
                    "CSS",
                    "TypeScript",
                    "CSS",
                    "CSS",
                    "SCSS",
                    "BEM",
                    "Scalable and Modular Architecture",
                    "CSS",
                    "CSS"
                ],
                "DATE": [
                    "their day"
                ],
                "WORK_OF_ART": [
                    "The Angular Show",
                    "Love"
                ],
                "PERSON": [
                    "Nicole Oliver",
                    "Oliver @nixallover",
                    "Wadella"
                ],
                "ORDINAL": [
                    "first"
                ]
            }
        },
        {
            "content": "RxJS provides both the observable primitives as well as a broad set of operators for the creation and transformation of data. And, as you know, Angular leverages RxJS for cancelable asynchronous actions and events. In our opinion, the two are a perfect match. Interactions with web applications are asynchronous in nature and Angular provides a robust solution to detecting those asynchronous actions, enabling developers to build interactive experiences for the web with ease.<br /><br />In this series on RxJS operators, we help you learn the operators. As you likely know, there are a lot of them, and it can be difficult to know what each of them does, and often, how to determine which operator, or operators, are succinct and current for solving the complexities of streaming data, actions, and events in our applications.<br /><br />Join panelists Jennifer Wadella, Aaron Frost, Brian Love, and guest Jan-Niklas Wortmann as we explore the creation operators. These functions enable the creation of new observables, or the composing of existing observables into a new observable stream. Jan-Niklas is a Google Developer Expert in Angular and volunteers his time on the RxJS core team. Listen in and learn from Jan-Niklas as he teaches us about many of the creation operators in RxJS. We're sure you'll walk away from this episode with a new and expanded knowledge of RxJS.<br /><br />Find us on Twitter:<br />Jan-Niklas Wortmann | @niklas_wortmann<br />Brian Love | @brian_love<br />Jennifer Wadella | @likeOMGitsFEDAY<br />Aaron Frost | @aaronfrost",
            "contentSnippet": "RxJS provides both the observable primitives as well as a broad set of operators for the creation and transformation of data. And, as you know, Angular leverages RxJS for cancelable asynchronous actions and events. In our opinion, the two are a perfect match. Interactions with web applications are asynchronous in nature and Angular provides a robust solution to detecting those asynchronous actions, enabling developers to build interactive experiences for the web with ease.\nIn this series on RxJS operators, we help you learn the operators. As you likely know, there are a lot of them, and it can be difficult to know what each of them does, and often, how to determine which operator, or operators, are succinct and current for solving the complexities of streaming data, actions, and events in our applications.\nJoin panelists Jennifer Wadella, Aaron Frost, Brian Love, and guest Jan-Niklas Wortmann as we explore the creation operators. These functions enable the creation of new observables, or the composing of existing observables into a new observable stream. Jan-Niklas is a Google Developer Expert in Angular and volunteers his time on the RxJS core team. Listen in and learn from Jan-Niklas as he teaches us about many of the creation operators in RxJS. We're sure you'll walk away from this episode with a new and expanded knowledge of RxJS.\nFind us on Twitter:\nJan-Niklas Wortmann | @niklas_wortmann\nBrian Love | @brian_love\nJennifer Wadella | @likeOMGitsFEDAY\nAaron Frost | @aaronfrost",
            "enclosure": {
                "length": "64569206",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/41759212/tas_oct_7_rxjs_operators_episode_1_creation_operators_join_creation_operators_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/41759212",
            "isoDate": "2020-11-23T14:00:09.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4036",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,javascript,ng-conf,programmer,programming,rxjs",
                "subtitle": "RxJS provides both the observable primitives as well as a broad set of operators for the creation and transformation of data. And, as you know, Angular leverages RxJS for cancelable asynchronous actions and events. In our opinion, the two are a...",
                "summary": "RxJS provides both the observable primitives as well as a broad set of operators for the creation and transformation of data. And, as you know, Angular leverages RxJS for cancelable asynchronous actions and events. In our opinion, the two are a perfect match. Interactions with web applications are asynchronous in nature and Angular provides a robust solution to detecting those asynchronous actions, enabling developers to build interactive experiences for the web with ease.<br /><br />In this series on RxJS operators, we help you learn the operators. As you likely know, there are a lot of them, and it can be difficult to know what each of them does, and often, how to determine which operator, or operators, are succinct and current for solving the complexities of streaming data, actions, and events in our applications.<br /><br />Join panelists Jennifer Wadella, Aaron Frost, Brian Love, and guest Jan-Niklas Wortmann as we explore the creation operators. These functions enable the creation of new observables, or the composing of existing observables into a new observable stream. Jan-Niklas is a Google Developer Expert in Angular and volunteers his time on the RxJS core team. Listen in and learn from Jan-Niklas as he teaches us about many of the creation operators in RxJS. We're sure you'll walk away from this episode with a new and expanded knowledge of RxJS.<br /><br />Find us on Twitter:<br />Jan-Niklas Wortmann | @niklas_wortmann<br />Brian Love | @brian_love<br />Jennifer Wadella | @likeOMGitsFEDAY<br />Aaron Frost | @aaronfrost"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e040-rxjs-operators-episode-1-creation-o",
            "pubDate": "Mon, 23 Nov 2020 14:00:09 +0000",
            "title": "E040 - RxJS Operators Episode 1: Creation Operators & Join Creation Operators",
            "entities": {
                "GPE": [
                    "RxJS",
                    "RxJS",
                    "RxJS"
                ],
                "CARDINAL": [
                    "two"
                ],
                "NORP": [
                    "RxJS"
                ],
                "PERSON": [
                    "Jennifer Wadella",
                    "Aaron Frost",
                    "Brian Love",
                    "Niklas Wortmann"
                ],
                "ORG": [
                    "Jan-Niklas"
                ],
                "WORK_OF_ART": [
                    "Love"
                ]
            }
        },
        {
            "content": "Grab your favorite cola, some swig, a beer, or sangria, and sit down with panelists Jennifer Wadella, Aaron Frost, and Brian Love\u00a0for a hangout. This week's episode of The Angular Show is about the show. It's a bit meta, we know, but we wanted to share with you a little bit about why we spend a few hours every week to create the Angular Show. This podcast was born out of a desire to make a podcast that reflects the community, that is inclusive, and that is welcoming.<br /><br />We also wanted to share with you some of the funny moments that have occurred both before and during the show. We can't give away the herbs and spices that make up the secret sauce that coats the delicious podcast that tantilizes your ears, but (hint, hint) we offer a slight possibility of leaking some of the juicy bits if we get enough tweets on the 'ole Tweet Machine.<br /><br />Finally, we share with you how we pick our guests and how we determine the topics that we talk about. We also shared how we transitioned the show this year to focus on producing several series, with more in depth series yet to come on topics such as forms.",
            "contentSnippet": "Grab your favorite cola, some swig, a beer, or sangria, and sit down with panelists Jennifer Wadella, Aaron Frost, and Brian Love\u00a0for a hangout. This week's episode of The Angular Show is about the show. It's a bit meta, we know, but we wanted to share with you a little bit about why we spend a few hours every week to create the Angular Show. This podcast was born out of a desire to make a podcast that reflects the community, that is inclusive, and that is welcoming.\nWe also wanted to share with you some of the funny moments that have occurred both before and during the show. We can't give away the herbs and spices that make up the secret sauce that coats the delicious podcast that tantilizes your ears, but (hint, hint) we offer a slight possibility of leaking some of the juicy bits if we get enough tweets on the 'ole Tweet Machine.\nFinally, we share with you how we pick our guests and how we determine the topics that we talk about. We also shared how we transitioned the show this year to focus on producing several series, with more in depth series yet to come on topics such as forms.",
            "enclosure": {
                "length": "38867984",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/41904095/tas_september_7_angular_show_side_stories_edit_2.mp3"
            },
            "guid": "https://api.spreaker.com/episode/41904095",
            "isoDate": "2020-11-11T15:32:17.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "2430",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,ng-conf,podcasts",
                "subtitle": "Grab your favorite cola, some swig, a beer, or sangria, and sit down with panelists Jennifer Wadella, Aaron Frost, and Brian Love\u00a0for a hangout. This week's episode of The Angular Show is about the show. It's a bit meta, we know, but we wanted to...",
                "summary": "Grab your favorite cola, some swig, a beer, or sangria, and sit down with panelists Jennifer Wadella, Aaron Frost, and Brian Love\u00a0for a hangout. This week's episode of The Angular Show is about the show. It's a bit meta, we know, but we wanted to share with you a little bit about why we spend a few hours every week to create the Angular Show. This podcast was born out of a desire to make a podcast that reflects the community, that is inclusive, and that is welcoming.<br /><br />We also wanted to share with you some of the funny moments that have occurred both before and during the show. We can't give away the herbs and spices that make up the secret sauce that coats the delicious podcast that tantilizes your ears, but (hint, hint) we offer a slight possibility of leaking some of the juicy bits if we get enough tweets on the 'ole Tweet Machine.<br /><br />Finally, we share with you how we pick our guests and how we determine the topics that we talk about. We also shared how we transitioned the show this year to focus on producing several series, with more in depth series yet to come on topics such as forms."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e039-angular-sideline-why-the-angular-sh",
            "pubDate": "Wed, 11 Nov 2020 15:32:17 +0000",
            "title": "E039 - Angular Sideline: Why The Angular Show Was Started",
            "entities": {
                "PERSON": [
                    "Jennifer Wadella",
                    "Aaron Frost",
                    "Brian Love"
                ],
                "DATE": [
                    "week",
                    "this year"
                ],
                "WORK_OF_ART": [
                    "The Angular Show",
                    "the Angular Show",
                    "Tweet Machine.<br"
                ],
                "TIME": [
                    "a few hours"
                ]
            }
        },
        {
            "content": "Panelists Jennifer Wadella, Aaron Frost, and Brian Love sit down with Lukas Ruebbelke, a Google Developer Expert in Angular, author, speaker, and mentor, to learn about a mentorship model that Lukas has developed for providing individuals with the opportunity to change their lives through programming. Lukas has displayed his love for the community through deep personal investments using his mentorship model. Starting with his first-principles and cross-pollination approach to software development, Lukas teaches with passion and heart. <br /><br />Throughout the history of software engineering, the tools, languages, and frameworks have changed drastically. However, what has not changed, as proposed by Lukas, is that programming can be distilled to four first-principles: nouns, verbs, iterators, and conditionals. Taking this one step further, Lukas teaches about what he refers to as the \"axis of evil\", which is when it is too painful to write tests for your code. The panelists and Lukas talk about what it means to write good code, and how this varies based on the context of good code.<br /><br />To wrap things up, Lukas and the panelists talk about investing in ourselves and the people with whom we interact, in our organizations and the community. It's important that we take the long game to software engineering and prioritize our own mental health and our relationships.<br /><br />Show Links:<br /><a href=\"https://osmihelp.org/resources\" rel=\"noopener\">https://osmihelp.org/resources</a><br /><a href=\"https://www.amazon.com/Infinite-Game-Simon-Sinek/\" rel=\"noopener\">https://www.amazon.com/Infinite-Game-Simon-Sinek/</a>",
            "contentSnippet": "Panelists Jennifer Wadella, Aaron Frost, and Brian Love sit down with Lukas Ruebbelke, a Google Developer Expert in Angular, author, speaker, and mentor, to learn about a mentorship model that Lukas has developed for providing individuals with the opportunity to change their lives through programming. Lukas has displayed his love for the community through deep personal investments using his mentorship model. Starting with his first-principles and cross-pollination approach to software development, Lukas teaches with passion and heart. \nThroughout the history of software engineering, the tools, languages, and frameworks have changed drastically. However, what has not changed, as proposed by Lukas, is that programming can be distilled to four first-principles: nouns, verbs, iterators, and conditionals. Taking this one step further, Lukas teaches about what he refers to as the \"axis of evil\", which is when it is too painful to write tests for your code. The panelists and Lukas talk about what it means to write good code, and how this varies based on the context of good code.\nTo wrap things up, Lukas and the panelists talk about investing in ourselves and the people with whom we interact, in our organizations and the community. It's important that we take the long game to software engineering and prioritize our own mental health and our relationships.\nShow Links:\nhttps://osmihelp.org/resources\nhttps://www.amazon.com/Infinite-Game-Simon-Sinek/",
            "enclosure": {
                "length": "73228959",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/41759211/tas_sept_16_lukas_ruebbelke_mentorship_and_the_four_first_principles_of_software_engineering_with_angular_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/41759211",
            "isoDate": "2020-11-04T13:56:29.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4577",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,applications,code,coding,developer,development,javascript,ng-conf,programmer,programming,software-development",
                "subtitle": "Panelists Jennifer Wadella, Aaron Frost, and Brian Love sit down with Lukas Ruebbelke, a Google Developer Expert in Angular, author, speaker, and mentor, to learn about a mentorship model that Lukas has developed for providing individuals with the...",
                "summary": "Panelists Jennifer Wadella, Aaron Frost, and Brian Love sit down with Lukas Ruebbelke, a Google Developer Expert in Angular, author, speaker, and mentor, to learn about a mentorship model that Lukas has developed for providing individuals with the opportunity to change their lives through programming. Lukas has displayed his love for the community through deep personal investments using his mentorship model. Starting with his first-principles and cross-pollination approach to software development, Lukas teaches with passion and heart. <br /><br />Throughout the history of software engineering, the tools, languages, and frameworks have changed drastically. However, what has not changed, as proposed by Lukas, is that programming can be distilled to four first-principles: nouns, verbs, iterators, and conditionals. Taking this one step further, Lukas teaches about what he refers to as the \"axis of evil\", which is when it is too painful to write tests for your code. The panelists and Lukas talk about what it means to write good code, and how this varies based on the context of good code.<br /><br />To wrap things up, Lukas and the panelists talk about investing in ourselves and the people with whom we interact, in our organizations and the community. It's important that we take the long game to software engineering and prioritize our own mental health and our relationships.<br /><br />Show Links:<br /><a href=\"https://osmihelp.org/resources\" rel=\"noopener\">https://osmihelp.org/resources</a><br /><a href=\"https://www.amazon.com/Infinite-Game-Simon-Sinek/\" rel=\"noopener\">https://www.amazon.com/Infinite-Game-Simon-Sinek/</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e038-mentorship-and-the-four-first-princ",
            "pubDate": "Wed, 04 Nov 2020 13:56:29 +0000",
            "title": "E038 - Mentorship and the Four First-Principles of Software Engineering with Angular",
            "entities": {
                "PERSON": [
                    "Jennifer Wadella",
                    "Aaron Frost",
                    "Brian Love",
                    "Lukas Ruebbelke"
                ],
                "ORG": [
                    "Lukas",
                    "Lukas",
                    "Lukas",
                    "Lukas",
                    "Lukas",
                    "href=\"https://osmihelp.org/resources",
                    "rel=\"noopener\">https://osmihelp.org/resources</a><br"
                ],
                "ORDINAL": [
                    "first",
                    "first"
                ],
                "NORP": [
                    "Lukas",
                    "Lukas"
                ],
                "CARDINAL": [
                    "four",
                    "one"
                ]
            }
        },
        {
            "content": "In this episode of the Angular Show, panelists Brian Love,\u00a0Aaron Frost,\u00a0and Jennifer Wadella sit down with the team at Infragistics, the creators of Ignite UI,\u00a0a complete UX/UI toolkit for building high performance, modern web, mobile, and desktop applications.<br /><br />The team at Infragistics has a long history of developing desktop applications using Microsoft technologies for enterprises and has worked with clients to move legacy applications to the web. This is where Angular comes in - as a perfect match for building robust and scalable line-of-business applications. Using Ignite UI and Angular, the team at Infragistics is able to efficiently bring desktop applications to the browser.<br /><br />Enterprises rely on applications that are secure, tested, scalable, and will meet the demands of the future. Infragistics provides solutions to meet these requirements. To learn more go to <a href=\"https://www.infragistics.com/products/ignite-ui\" rel=\"noopener\">https://www.infragistics.com/products/ignite-ui</a>.<br /><br />Show Links:<br />\u25ba <a href=\"https://github.com/johnpapa/HotTowel\" rel=\"noopener\">https://github.com/johnpapa/HotTowel</a><br />\u25ba <a href=\"https://twitter.com/gabsmashh/status/1301153985592733696\" rel=\"noopener\">https://twitter.com/gabsmashh/status/1301153985592733696</a><br />\u25ba <a href=\"https://twitter.com/AdamRackis/status/1300855838828040197\" rel=\"noopener\">https://twitter.com/AdamRackis/status/1300855838828040197</a><br />\u25ba igniteui.com<br />\u25ba github.com/igniteui<br />\u25baVideo series on Desktop web: <br /><a href=\"https://www.youtube.com/watchv\" rel=\"noopener\">https://www.youtube.com/watchv</a>=TAaG0nUUy6A&feature=youtu.be<br />\u25ba vote.gov<br /><br />Brian Lagunas: @brianlagunas<br />Konstantin Dinev: @KonstantinDinev<br />Steve Johnston: @stevenMJohnston",
            "contentSnippet": "In this episode of the Angular Show, panelists Brian Love,\u00a0Aaron Frost,\u00a0and Jennifer Wadella sit down with the team at Infragistics, the creators of Ignite UI,\u00a0a complete UX/UI toolkit for building high performance, modern web, mobile, and desktop applications.\nThe team at Infragistics has a long history of developing desktop applications using Microsoft technologies for enterprises and has worked with clients to move legacy applications to the web. This is where Angular comes in - as a perfect match for building robust and scalable line-of-business applications. Using Ignite UI and Angular, the team at Infragistics is able to efficiently bring desktop applications to the browser.\nEnterprises rely on applications that are secure, tested, scalable, and will meet the demands of the future. Infragistics provides solutions to meet these requirements. To learn more go to https://www.infragistics.com/products/ignite-ui.\nShow Links:\n\u25ba https://github.com/johnpapa/HotTowel\n\u25ba https://twitter.com/gabsmashh/status/1301153985592733696\n\u25ba https://twitter.com/AdamRackis/status/1300855838828040197\n\u25ba igniteui.com\n\u25ba github.com/igniteui\n\u25baVideo series on Desktop web: \nhttps://www.youtube.com/watchv=TAaG0nUUy6A&feature=youtu.be\n\u25ba vote.gov\nBrian Lagunas: @brianlagunas\nKonstantin Dinev: @KonstantinDinev\nSteve Johnston: @stevenMJohnston",
            "enclosure": {
                "length": "56599500",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/41587697/tas_sept_2nd_app_modernization_and_desktop_to_web_edit_1_2.mp3"
            },
            "guid": "https://api.spreaker.com/episode/41587697",
            "isoDate": "2020-10-28T00:07:24.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3538",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,ng-conf,programmer,programming",
                "subtitle": "In this episode of the Angular Show, panelists Brian Love,\u00a0Aaron Frost,\u00a0and Jennifer Wadella sit down with the team at Infragistics, the creators of Ignite UI,\u00a0a complete UX/UI toolkit for building high performance, modern web, mobile, and desktop...",
                "summary": "In this episode of the Angular Show, panelists Brian Love,\u00a0Aaron Frost,\u00a0and Jennifer Wadella sit down with the team at Infragistics, the creators of Ignite UI,\u00a0a complete UX/UI toolkit for building high performance, modern web, mobile, and desktop applications.<br /><br />The team at Infragistics has a long history of developing desktop applications using Microsoft technologies for enterprises and has worked with clients to move legacy applications to the web. This is where Angular comes in - as a perfect match for building robust and scalable line-of-business applications. Using Ignite UI and Angular, the team at Infragistics is able to efficiently bring desktop applications to the browser.<br /><br />Enterprises rely on applications that are secure, tested, scalable, and will meet the demands of the future. Infragistics provides solutions to meet these requirements. To learn more go to <a href=\"https://www.infragistics.com/products/ignite-ui\" rel=\"noopener\">https://www.infragistics.com/products/ignite-ui</a>.<br /><br />Show Links:<br />\u25ba <a href=\"https://github.com/johnpapa/HotTowel\" rel=\"noopener\">https://github.com/johnpapa/HotTowel</a><br />\u25ba <a href=\"https://twitter.com/gabsmashh/status/1301153985592733696\" rel=\"noopener\">https://twitter.com/gabsmashh/status/1301153985592733696</a><br />\u25ba <a href=\"https://twitter.com/AdamRackis/status/1300855838828040197\" rel=\"noopener\">https://twitter.com/AdamRackis/status/1300855838828040197</a><br />\u25ba igniteui.com<br />\u25ba github.com/igniteui<br />\u25baVideo series on Desktop web: <br /><a href=\"https://www.youtube.com/watchv\" rel=\"noopener\">https://www.youtube.com/watchv</a>=TAaG0nUUy6A&feature=youtu.be<br />\u25ba vote.gov<br /><br />Brian Lagunas: @brianlagunas<br />Konstantin Dinev: @KonstantinDinev<br />Steve Johnston: @stevenMJohnston"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e037-app-modernization-and-desktop-to-we",
            "pubDate": "Wed, 28 Oct 2020 00:07:24 +0000",
            "title": "E037 - App Modernization and Desktop to Web",
            "entities": {
                "WORK_OF_ART": [
                    "the Angular Show"
                ],
                "PERSON": [
                    "Brian Love",
                    "Aaron Frost",
                    "Jennifer Wadella",
                    "Lagunas"
                ],
                "ORG": [
                    "Infragistics",
                    "Ignite UI",
                    "UX",
                    "Infragistics",
                    "Microsoft",
                    "Infragistics",
                    "href=\"https://www.infragistics.com",
                    "href=\"https://github.com",
                    "href=\"https://twitter.com",
                    "gabsmashh/status/1301153985592733696",
                    "rel=\"noopener\">https://twitter.com/gabsmashh/status/1301153985592733696</a><br />\u25ba",
                    "href=\"https://twitter.com",
                    "rel=\"noopener\">https://twitter.com/AdamRackis/status/1300855838828040197</a><br />\u25ba",
                    "Desktop",
                    "href=\"https://www.youtube.com",
                    "rel=\"noopener\">https://www.youtube.com/watchv</a>=TAaG0nUUy6A&feature=youtu.be",
                    "@stevenMJohnston"
                ],
                "GPE": [
                    "Dinev"
                ]
            }
        },
        {
            "content": "What is the future of Angular? What new features and improvements are being thought of and worked on? Will the developer experience improve? Panelists Brian Love and Aaron Frost sat down with Minko Gechev, a member of the developer relations team for Angular at Google and a longtime contributor to Angular through open-source, to answer some of those questions. And trust us, the future of Angular is bright, starting with all the amazing new features that are being built.  The developer experience is only going to get better and faster. Minko shares with us a look into the potential future of Angular. <br /><br />Minko shares with us a look into the potential future of Angular, including the future support for TypeScript 4 versions. The Angular team is committed to supporting future TypeScript versions that bring new features, improvements, and fixes to the language. We then learn about the transition of the Angular Language Service to leverage Ivy, the compilation and rendering engine shipped in Angular version 9, which will solve some inconsistency issues, but also provide some speed improvements in our IDE. We also learn about the migration that is going to happen from TSLint to ESLint, and what that transition is going to look like. Minko then discusses how the team is going to tackle the inlining of critical CSS in order to improve an application's First Contentful Paint time. Finally, we learn about a new and exciting developer tools extension that is going to help Angular developers to profile and inspect their applications.<br /><br />Today, Angular is an incredible framework and platform for building web, mobile, and desktop applications, and we're excited by the outlook and possibilities moving forward!  Listen in and join us as we get a sneak peek into that future.<br /><br />Show Notes:<br /><br />\u25ba <a href=\"https://twitter.com/MikeRyanDev/status/1307687779195854849\" rel=\"noopener\">https://twitter.com/MikeRyanDev/status/1307687779195854849</a><br />\u25ba <a href=\"https://github.com/angular/angular-cli/releases/tag/v10.1.0-next.7\" rel=\"noopener\">https://github.com/angular/angular-cli/releases/tag/v10.1.0-next.7</a>",
            "contentSnippet": "What is the future of Angular? What new features and improvements are being thought of and worked on? Will the developer experience improve? Panelists Brian Love and Aaron Frost sat down with Minko Gechev, a member of the developer relations team for Angular at Google and a longtime contributor to Angular through open-source, to answer some of those questions. And trust us, the future of Angular is bright, starting with all the amazing new features that are being built.  The developer experience is only going to get better and faster. Minko shares with us a look into the potential future of Angular. \nMinko shares with us a look into the potential future of Angular, including the future support for TypeScript 4 versions. The Angular team is committed to supporting future TypeScript versions that bring new features, improvements, and fixes to the language. We then learn about the transition of the Angular Language Service to leverage Ivy, the compilation and rendering engine shipped in Angular version 9, which will solve some inconsistency issues, but also provide some speed improvements in our IDE. We also learn about the migration that is going to happen from TSLint to ESLint, and what that transition is going to look like. Minko then discusses how the team is going to tackle the inlining of critical CSS in order to improve an application's First Contentful Paint time. Finally, we learn about a new and exciting developer tools extension that is going to help Angular developers to profile and inspect their applications.\nToday, Angular is an incredible framework and platform for building web, mobile, and desktop applications, and we're excited by the outlook and possibilities moving forward!  Listen in and join us as we get a sneak peek into that future.\nShow Notes:\n\u25ba https://twitter.com/MikeRyanDev/status/1307687779195854849\n\u25ba https://github.com/angular/angular-cli/releases/tag/v10.1.0-next.7",
            "enclosure": {
                "length": "48081072",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/41586350/tas_sept_23_minko_gechev_the_future_of_angular_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/41586350",
            "isoDate": "2020-10-23T14:05:20.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3006",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,javascript,ng-conf,programmer,programming",
                "subtitle": "What is the future of Angular? What new features and improvements are being thought of and worked on? Will the developer experience improve? Panelists Brian Love and Aaron Frost sat down with Minko Gechev, a member of the developer relations team for...",
                "summary": "What is the future of Angular? What new features and improvements are being thought of and worked on? Will the developer experience improve? Panelists Brian Love and Aaron Frost sat down with Minko Gechev, a member of the developer relations team for Angular at Google and a longtime contributor to Angular through open-source, to answer some of those questions. And trust us, the future of Angular is bright, starting with all the amazing new features that are being built.  The developer experience is only going to get better and faster. Minko shares with us a look into the potential future of Angular. <br /><br />Minko shares with us a look into the potential future of Angular, including the future support for TypeScript 4 versions. The Angular team is committed to supporting future TypeScript versions that bring new features, improvements, and fixes to the language. We then learn about the transition of the Angular Language Service to leverage Ivy, the compilation and rendering engine shipped in Angular version 9, which will solve some inconsistency issues, but also provide some speed improvements in our IDE. We also learn about the migration that is going to happen from TSLint to ESLint, and what that transition is going to look like. Minko then discusses how the team is going to tackle the inlining of critical CSS in order to improve an application's First Contentful Paint time. Finally, we learn about a new and exciting developer tools extension that is going to help Angular developers to profile and inspect their applications.<br /><br />Today, Angular is an incredible framework and platform for building web, mobile, and desktop applications, and we're excited by the outlook and possibilities moving forward!  Listen in and join us as we get a sneak peek into that future.<br /><br />Show Notes:<br /><br />\u25ba <a href=\"https://twitter.com/MikeRyanDev/status/1307687779195854849\" rel=\"noopener\">https://twitter.com/MikeRyanDev/status/1307687779195854849</a><br />\u25ba <a href=\"https://github.com/angular/angular-cli/releases/tag/v10.1.0-next.7\" rel=\"noopener\">https://github.com/angular/angular-cli/releases/tag/v10.1.0-next.7</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e036-the-future-of-angular",
            "pubDate": "Fri, 23 Oct 2020 14:05:20 +0000",
            "title": "E036 - The Future of Angular",
            "entities": {
                "PERSON": [
                    "Brian Love",
                    "Aaron Frost",
                    "Minko Gechev"
                ],
                "PRODUCT": [
                    "TypeScript 4"
                ],
                "ORG": [
                    "TypeScript",
                    "the Angular Language Service",
                    "IDE",
                    "CSS",
                    "First Contentful Paint",
                    "href=\"https://twitter.com/MikeRyanDev/status/1307687779195854849\" rel=\"noopener\">https://twitter.com/MikeRyanDev/status/1307687779195854849</a><br />\u25ba",
                    "href=\"https://github.com",
                    "v10.1.0-next.7</a"
                ],
                "CARDINAL": [
                    "9"
                ]
            }
        },
        {
            "content": "As a follow-up to Ep. 020 - Building Communication Between the Angular Team & the Community - we sat down with Stephen Fluin and Jules Kremer of the Angular team to continue the conversation on the present and future of Angular. <br /><br />You can check out Ep. 020 right here \ud83d\udc49 <a href=\"http://bit.ly/AngularShowEp20\" rel=\"noopener\">http://bit.ly/AngularShowEp20</a><br /><br />Show Notes:<br />\u25ba <a href=\"https://blog.angular.io/a-roadmap-for-angular-1b4fa996a771\" rel=\"noopener\">https://blog.angular.io/a-roadmap-for-angular-1b4fa996a771</a>",
            "contentSnippet": "As a follow-up to Ep. 020 - Building Communication Between the Angular Team & the Community - we sat down with Stephen Fluin and Jules Kremer of the Angular team to continue the conversation on the present and future of Angular. \nYou can check out Ep. 020 right here \ud83d\udc49 http://bit.ly/AngularShowEp20\nShow Notes:\n\u25ba https://blog.angular.io/a-roadmap-for-angular-1b4fa996a771",
            "enclosure": {
                "length": "69907735",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/41446689/tas_angular_team_follow_up_with_jules_and_stephen_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/41446689",
            "isoDate": "2020-10-14T14:27:38.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4370",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,ng-conf",
                "subtitle": "As a follow-up to Ep. 020 - Building Communication Between the Angular Team & the Community - we sat down with Stephen Fluin and Jules Kremer of the Angular team to continue the conversation on the present and future of Angular. \n\nYou can check out...",
                "summary": "As a follow-up to Ep. 020 - Building Communication Between the Angular Team & the Community - we sat down with Stephen Fluin and Jules Kremer of the Angular team to continue the conversation on the present and future of Angular. <br /><br />You can check out Ep. 020 right here \ud83d\udc49 <a href=\"http://bit.ly/AngularShowEp20\" rel=\"noopener\">http://bit.ly/AngularShowEp20</a><br /><br />Show Notes:<br />\u25ba <a href=\"https://blog.angular.io/a-roadmap-for-angular-1b4fa996a771\" rel=\"noopener\">https://blog.angular.io/a-roadmap-for-angular-1b4fa996a771</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e035-angular-team-follow-up-with-stephen",
            "pubDate": "Wed, 14 Oct 2020 14:27:38 +0000",
            "title": "E035 - Angular Team Follow-Up with Stephen Fluin & Jules Kremer",
            "entities": {
                "CARDINAL": [
                    "020",
                    "020"
                ],
                "ORG": [
                    "the Angular Team & the Community",
                    "rel=\"noopener\">https://blog.angular.io"
                ],
                "PERSON": [
                    "Stephen Fluin",
                    "Jules Kremer"
                ]
            }
        },
        {
            "content": "State management is hard. Why? First, some engineers may not consider the state of their apps. This can lead to apps that are buggy, difficult to test, and often face regressions when attempting to fix issues. Second, if you're managing control flow and state in your application, state in some applications can be complex and fast-moving. Determining what solution to use, whether to build your own solution or to grab an existing off-the-shelf solution can be a difficult decision. Third, state management libraries can be difficult to learn. Entire courses are devoted to managing state in Angular applications, whether you choose NgRx, NGXS, Akita, MobX, Redux-Observables, etc.<br /><br />We get that. Why? We've seen a thing or two. In this episode, panelists Jennifer Wadella,\u00a0Aaron Frost, &\u00a0Brian Love\u00a0share some of their own struggles with state management, decisions that went awry, and some horror stories that they've lived through. Then, Brian sits down with Mike Ryan, core team member for NgRx, and Google Developer Expert in Angular. Mike shares with us some stories and some key takeaways for managing state, control flow, and code volume in your Angular application using NgRx.<br /><br />And that's a wrap! We hope you've enjoyed our 6-part series on State Management in Angular. <br /><br />What topics interest you that you'd like us to dive into on the Angular Show? Let us know! Follow us on Twitter, our DMs are open, and don't forget to subscribe!\u00a0",
            "contentSnippet": "State management is hard. Why? First, some engineers may not consider the state of their apps. This can lead to apps that are buggy, difficult to test, and often face regressions when attempting to fix issues. Second, if you're managing control flow and state in your application, state in some applications can be complex and fast-moving. Determining what solution to use, whether to build your own solution or to grab an existing off-the-shelf solution can be a difficult decision. Third, state management libraries can be difficult to learn. Entire courses are devoted to managing state in Angular applications, whether you choose NgRx, NGXS, Akita, MobX, Redux-Observables, etc.\nWe get that. Why? We've seen a thing or two. In this episode, panelists Jennifer Wadella,\u00a0Aaron Frost, &\u00a0Brian Love\u00a0share some of their own struggles with state management, decisions that went awry, and some horror stories that they've lived through. Then, Brian sits down with Mike Ryan, core team member for NgRx, and Google Developer Expert in Angular. Mike shares with us some stories and some key takeaways for managing state, control flow, and code volume in your Angular application using NgRx.\nAnd that's a wrap! We hope you've enjoyed our 6-part series on State Management in Angular. \nWhat topics interest you that you'd like us to dive into on the Angular Show? Let us know! Follow us on Twitter, our DMs are open, and don't forget to subscribe!",
            "enclosure": {
                "length": "63927945",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/41333161/tas_state_management_pt_6_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/41333161",
            "isoDate": "2020-10-07T12:56:48.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3996",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,angularshow,javascript,ng-conf",
                "subtitle": "State management is hard. Why? First, some engineers may not consider the state of their apps. This can lead to apps that are buggy, difficult to test, and often face regressions when attempting to fix issues. Second, if you're managing control flow...",
                "summary": "State management is hard. Why? First, some engineers may not consider the state of their apps. This can lead to apps that are buggy, difficult to test, and often face regressions when attempting to fix issues. Second, if you're managing control flow and state in your application, state in some applications can be complex and fast-moving. Determining what solution to use, whether to build your own solution or to grab an existing off-the-shelf solution can be a difficult decision. Third, state management libraries can be difficult to learn. Entire courses are devoted to managing state in Angular applications, whether you choose NgRx, NGXS, Akita, MobX, Redux-Observables, etc.<br /><br />We get that. Why? We've seen a thing or two. In this episode, panelists Jennifer Wadella,\u00a0Aaron Frost, &\u00a0Brian Love\u00a0share some of their own struggles with state management, decisions that went awry, and some horror stories that they've lived through. Then, Brian sits down with Mike Ryan, core team member for NgRx, and Google Developer Expert in Angular. Mike shares with us some stories and some key takeaways for managing state, control flow, and code volume in your Angular application using NgRx.<br /><br />And that's a wrap! We hope you've enjoyed our 6-part series on State Management in Angular. <br /><br />What topics interest you that you'd like us to dive into on the Angular Show? Let us know! Follow us on Twitter, our DMs are open, and don't forget to subscribe!\u00a0"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e034-state-management-pt-6-state-managem",
            "pubDate": "Wed, 07 Oct 2020 12:56:48 +0000",
            "title": "E034 - State Management pt. 6 - State Management Is Hard",
            "entities": {
                "ORDINAL": [
                    "First",
                    "Second",
                    "Third"
                ],
                "GPE": [
                    "NgRx",
                    "NGXS",
                    "Redux-Observables"
                ],
                "ORG": [
                    "Akita",
                    "NgRx",
                    "Google Developer Expert",
                    "State Management in Angular"
                ],
                "CARDINAL": [
                    "two",
                    "6"
                ],
                "PERSON": [
                    "Jennifer Wadella",
                    "Aaron Frost",
                    "Brian",
                    "Mike Ryan",
                    "Mike"
                ],
                "WORK_OF_ART": [
                    "the Angular Show"
                ],
                "PRODUCT": [
                    "Twitter"
                ]
            }
        },
        {
            "content": "While NgRx is the most widely used and adopted platform for state management in Angular, there are several other solutions that are available to Angular developers. In this episode, panelists Aaron Frost, Brian Love, and Jennifer Wadella are 'buzzing' with details on MobX, Akita, and NGXS. <br /><br />All three of these solutions can be used in Angular, are open-source, and are free to use. MobX is widely used with React, perhaps the second favorite after redux, for state management. Akita, from the team at Datarama, takes a slightly different approach from the redux pattern for providing a state management solution. Akita is popular within the Angular community, but can also be used with both React and Svelte projections. Finally, NGXS is inspired by redux and NgRx and makes heavy use of TypeScript decorators to achieve similar goals as NgRx with a potential lower code cost.<br /><br />Join us in part 5 of our series on state management in Angular and come along with the panelists and learn about various solutions that you might want to consider for your Angular application.",
            "contentSnippet": "While NgRx is the most widely used and adopted platform for state management in Angular, there are several other solutions that are available to Angular developers. In this episode, panelists Aaron Frost, Brian Love, and Jennifer Wadella are 'buzzing' with details on MobX, Akita, and NGXS. \nAll three of these solutions can be used in Angular, are open-source, and are free to use. MobX is widely used with React, perhaps the second favorite after redux, for state management. Akita, from the team at Datarama, takes a slightly different approach from the redux pattern for providing a state management solution. Akita is popular within the Angular community, but can also be used with both React and Svelte projections. Finally, NGXS is inspired by redux and NgRx and makes heavy use of TypeScript decorators to achieve similar goals as NgRx with a potential lower code cost.\nJoin us in part 5 of our series on state management in Angular and come along with the panelists and learn about various solutions that you might want to consider for your Angular application.",
            "enclosure": {
                "length": "83482209",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/41064323/tas_state_management_5_ngxs_akita_and_mobx_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/41064323",
            "isoDate": "2020-09-23T14:14:13.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "5218",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "akita,angular,javascript,mobx,ng-conf,ngrx,ngxs",
                "subtitle": "While NgRx is the most widely used and adopted platform for state management in Angular, there are several other solutions that are available to Angular developers. In this episode, panelists Aaron Frost, Brian Love, and Jennifer Wadella are 'buzzing'...",
                "summary": "While NgRx is the most widely used and adopted platform for state management in Angular, there are several other solutions that are available to Angular developers. In this episode, panelists Aaron Frost, Brian Love, and Jennifer Wadella are 'buzzing' with details on MobX, Akita, and NGXS. <br /><br />All three of these solutions can be used in Angular, are open-source, and are free to use. MobX is widely used with React, perhaps the second favorite after redux, for state management. Akita, from the team at Datarama, takes a slightly different approach from the redux pattern for providing a state management solution. Akita is popular within the Angular community, but can also be used with both React and Svelte projections. Finally, NGXS is inspired by redux and NgRx and makes heavy use of TypeScript decorators to achieve similar goals as NgRx with a potential lower code cost.<br /><br />Join us in part 5 of our series on state management in Angular and come along with the panelists and learn about various solutions that you might want to consider for your Angular application."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e033-state-management-pt-5-ngxs-akita-an",
            "pubDate": "Wed, 23 Sep 2020 14:14:13 +0000",
            "title": "E033 - State Management pt. 5 - NGXS, Akita, and MobX",
            "entities": {
                "PERSON": [
                    "NgRx",
                    "Aaron Frost",
                    "Brian Love",
                    "Jennifer Wadella",
                    "Akita",
                    "NgRx",
                    "NgRx"
                ],
                "ORG": [
                    "NGXS",
                    "Datarama",
                    "Angular",
                    "NGXS"
                ],
                "CARDINAL": [
                    "three",
                    "5"
                ],
                "ORDINAL": [
                    "second"
                ]
            }
        },
        {
            "content": "In part 4 of our series on State Management in Angular, panelists Aaron Frost, Brian Love, and Jennifer Wadella spend some time with Deborah Kurtata & Dan Wahlin, two well-known and loved experts on using RxJS for managing the state of your application.<br /><br />Deborah is a Pluralsight author and speaker who has taught many of us the basics of RxJS and how we can effectively use RxJS for state management.<br /><br />Dan is also a Pluralsight author and speaker, as well as the author of the observable-store library that provides a guided approach to state management with RxJS.<br /><br />In this episode, you can expect to learn strategies for using RxJS, observables, subjects, and more, as both data streams and state management solutions for Angular applications. Deborah and Dan share their approaches and what they have learned with the community.<br /> <br />Join us as we further unpack state management in Angular using RxJS!<br /><br />Dan Wahlin:@DanWahlin<br />Deborah Kurata:@deborahkurata<br /><br />Show Notes:<br /><br />\u25ba Dan\u2019s talk Mastering The Subject <a href=\"https://www.youtube.com/watch?v=_q-HL9YX_pk\" rel=\"noopener\">https://www.youtube.com/watch?v=_q-HL9YX_pk</a><br />\u25ba Deborah Kurata\u2019s talk Data Composition w/ RxJS <a href=\"https://www.youtube.com/watch?v=Z76QlSpYcck\" rel=\"noopener\">https://www.youtube.com/watch?v=Z76QlSpYcck</a><br />\u25ba Observable Store: <a href=\"https://github.com/danwahlin/observable-store\" rel=\"noopener\">https://github.com/danwahlin/observable-store</a><br />\u25ba Deborah's RxJS Pluralsight course: <a href=\"https://app.pluralsight.com/library/courses/rxjs-angular-reactive-development\" rel=\"noopener\">https://app.pluralsight.com/library/courses/rxjs-angular-reactive-development</a><br />\u25ba <a href=\"https://ngrx.io/guide/data\" rel=\"noopener\">https://ngrx.io/guide/data</a><br />\u25ba Angular Architecture and Best Practices: <a href=\"https://www.pluralsight.com/courses/angular-architecture-best-practices\" rel=\"noopener\">https://www.pluralsight.com/courses/angular-architecture-best-practices</a><br />\u25ba Stepping Up: Observable Services to Observable Store: <a href=\"https://www.ng-conf.org/2020/sessions/stepping-up-observable-services-to-observable-store/\" rel=\"noopener\">https://www.ng-conf.org/2020/sessions/stepping-up-observable-services-to-observable-store/</a><br />\u25ba <a href=\"http://shouldiusegraphql.com/\" rel=\"noopener\">http://shouldiusegraphql.com/</a><br />\u25ba Thinking Reactively Talk by Mike Pearson <a href=\"https://www.youtube.com/watch?v=-4cwkHNguXE\" rel=\"noopener\">https://www.youtube.com/watch?v=-4cwkHNguXE</a><br />\u25ba Angular Denver '19 talk by Frosty: <a href=\"https://app.pluralsight.com/library/courses/angular-denver-2019-session-27\" rel=\"noopener\">https://app.pluralsight.com/library/courses/angular-denver-2019-session-27</a><br />\u25ba <a href=\"https://medium.com/\" rel=\"noopener\">https://medium.com/</a>@thomasburlesonIA/ngrx-facades-better-state-management-82a04b9a1e39<br />\u25ba Musical Theatre Coach Reacts (Hamilton): <a href=\"https://www.youtube.com/watch?v=hLrSFd9OVh8\" rel=\"noopener\">https://www.youtube.com/watch?v=hLrSFd9OVh8</a><br />\u25ba <a href=\"https://www.learnrxjs.io/\" rel=\"noopener\">https://www.learnrxjs.io/</a><br />\u25ba <a href=\"https://www.youtube.com/watch?v=_dzqrdHVE2g\" rel=\"noopener\">https://www.youtube.com/watch?v=_dzqrdHVE2g</a>",
            "contentSnippet": "In part 4 of our series on State Management in Angular, panelists Aaron Frost, Brian Love, and Jennifer Wadella spend some time with Deborah Kurtata & Dan Wahlin, two well-known and loved experts on using RxJS for managing the state of your application.\nDeborah is a Pluralsight author and speaker who has taught many of us the basics of RxJS and how we can effectively use RxJS for state management.\nDan is also a Pluralsight author and speaker, as well as the author of the observable-store library that provides a guided approach to state management with RxJS.\nIn this episode, you can expect to learn strategies for using RxJS, observables, subjects, and more, as both data streams and state management solutions for Angular applications. Deborah and Dan share their approaches and what they have learned with the community.\n Join us as we further unpack state management in Angular using RxJS!\nDan Wahlin:@DanWahlin\nDeborah Kurata:@deborahkurata\nShow Notes:\n\u25ba Dan\u2019s talk Mastering The Subject https://www.youtube.com/watch?v=_q-HL9YX_pk\n\u25ba Deborah Kurata\u2019s talk Data Composition w/ RxJS https://www.youtube.com/watch?v=Z76QlSpYcck\n\u25ba Observable Store: https://github.com/danwahlin/observable-store\n\u25ba Deborah's RxJS Pluralsight course: https://app.pluralsight.com/library/courses/rxjs-angular-reactive-development\n\u25ba https://ngrx.io/guide/data\n\u25ba Angular Architecture and Best Practices: https://www.pluralsight.com/courses/angular-architecture-best-practices\n\u25ba Stepping Up: Observable Services to Observable Store: https://www.ng-conf.org/2020/sessions/stepping-up-observable-services-to-observable-store/\n\u25ba http://shouldiusegraphql.com/\n\u25ba Thinking Reactively Talk by Mike Pearson https://www.youtube.com/watch?v=-4cwkHNguXE\n\u25ba Angular Denver '19 talk by Frosty: https://app.pluralsight.com/library/courses/angular-denver-2019-session-27\n\u25ba https://medium.com/@thomasburlesonIA/ngrx-facades-better-state-management-82a04b9a1e39\n\u25ba Musical Theatre Coach Reacts (Hamilton): https://www.youtube.com/watch?v=hLrSFd9OVh8\n\u25ba https://www.learnrxjs.io/\n\u25ba https://www.youtube.com/watch?v=_dzqrdHVE2g",
            "enclosure": {
                "length": "75676831",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/41065836/tas_state_management_4_rxjs_and_singleton_services_edit_1_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/41065836",
            "isoDate": "2020-09-22T17:02:29.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4730",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,dan-wahlin,deborah-kurata,ng-conf,rxjs,singleton-services",
                "subtitle": "In part 4 of our series on State Management in Angular, panelists Aaron Frost, Brian Love, and Jennifer Wadella spend some time with Deborah Kurtata & Dan Wahlin, two well-known and loved experts on using RxJS for managing the state of your...",
                "summary": "In part 4 of our series on State Management in Angular, panelists Aaron Frost, Brian Love, and Jennifer Wadella spend some time with Deborah Kurtata & Dan Wahlin, two well-known and loved experts on using RxJS for managing the state of your application.<br /><br />Deborah is a Pluralsight author and speaker who has taught many of us the basics of RxJS and how we can effectively use RxJS for state management.<br /><br />Dan is also a Pluralsight author and speaker, as well as the author of the observable-store library that provides a guided approach to state management with RxJS.<br /><br />In this episode, you can expect to learn strategies for using RxJS, observables, subjects, and more, as both data streams and state management solutions for Angular applications. Deborah and Dan share their approaches and what they have learned with the community.<br /> <br />Join us as we further unpack state management in Angular using RxJS!<br /><br />Dan Wahlin:@DanWahlin<br />Deborah Kurata:@deborahkurata<br /><br />Show Notes:<br /><br />\u25ba Dan\u2019s talk Mastering The Subject <a href=\"https://www.youtube.com/watch?v=_q-HL9YX_pk\" rel=\"noopener\">https://www.youtube.com/watch?v=_q-HL9YX_pk</a><br />\u25ba Deborah Kurata\u2019s talk Data Composition w/ RxJS <a href=\"https://www.youtube.com/watch?v=Z76QlSpYcck\" rel=\"noopener\">https://www.youtube.com/watch?v=Z76QlSpYcck</a><br />\u25ba Observable Store: <a href=\"https://github.com/danwahlin/observable-store\" rel=\"noopener\">https://github.com/danwahlin/observable-store</a><br />\u25ba Deborah's RxJS Pluralsight course: <a href=\"https://app.pluralsight.com/library/courses/rxjs-angular-reactive-development\" rel=\"noopener\">https://app.pluralsight.com/library/courses/rxjs-angular-reactive-development</a><br />\u25ba <a href=\"https://ngrx.io/guide/data\" rel=\"noopener\">https://ngrx.io/guide/data</a><br />\u25ba Angular Architecture and Best Practices: <a href=\"https://www.pluralsight.com/courses/angular-architecture-best-practices\" rel=\"noopener\">https://www.pluralsight.com/courses/angular-architecture-best-practices</a><br />\u25ba Stepping Up: Observable Services to Observable Store: <a href=\"https://www.ng-conf.org/2020/sessions/stepping-up-observable-services-to-observable-store/\" rel=\"noopener\">https://www.ng-conf.org/2020/sessions/stepping-up-observable-services-to-observable-store/</a><br />\u25ba <a href=\"http://shouldiusegraphql.com/\" rel=\"noopener\">http://shouldiusegraphql.com/</a><br />\u25ba Thinking Reactively Talk by Mike Pearson <a href=\"https://www.youtube.com/watch?v=-4cwkHNguXE\" rel=\"noopener\">https://www.youtube.com/watch?v=-4cwkHNguXE</a><br />\u25ba Angular Denver '19 talk by Frosty: <a href=\"https://app.pluralsight.com/library/courses/angular-denver-2019-session-27\" rel=\"noopener\">https://app.pluralsight.com/library/courses/angular-denver-2019-session-27</a><br />\u25ba <a href=\"https://medium.com/\" rel=\"noopener\">https://medium.com/</a>@thomasburlesonIA/ngrx-facades-better-state-management-82a04b9a1e39<br />\u25ba Musical Theatre Coach Reacts (Hamilton): <a href=\"https://www.youtube.com/watch?v=hLrSFd9OVh8\" rel=\"noopener\">https://www.youtube.com/watch?v=hLrSFd9OVh8</a><br />\u25ba <a href=\"https://www.learnrxjs.io/\" rel=\"noopener\">https://www.learnrxjs.io/</a><br />\u25ba <a href=\"https://www.youtube.com/watch?v=_dzqrdHVE2g\" rel=\"noopener\">https://www.youtube.com/watch?v=_dzqrdHVE2g</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e032-state-management-pt-4-rxjs-singleto_1",
            "pubDate": "Tue, 22 Sep 2020 17:02:29 +0000",
            "title": "E032 - State Management pt. 4 - RxJS & Singleton Services",
            "entities": {
                "CARDINAL": [
                    "4",
                    "two",
                    "19"
                ],
                "ORG": [
                    "State Management in Angular",
                    "href=\"https://www.youtube.com",
                    "rel=\"noopener\">https://www.youtube.com/watch?v=_q-HL9YX_pk</a><br",
                    "href=\"https://www.youtube.com",
                    "rel=\"noopener\">https://www.youtube.com/watch?v",
                    "Z76QlSpYcck</a><br />\u25ba Observable Store",
                    "href=\"https://github.com",
                    "href=\"https://app.pluralsight.com",
                    "href=\"https://www.youtube.com",
                    "Frosty",
                    "href=\"https://app.pluralsight.com",
                    "href=\"https://www.youtube.com",
                    "rel=\"noopener\">https://www.youtube.com/watch?v",
                    "href=\"https://www.youtube.com",
                    "rel=\"noopener\">https://www.youtube.com/watch?v=_dzqrdHVE2g</a"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Brian Love",
                    "Jennifer Wadella",
                    "Deborah Kurtata &",
                    "Dan Wahlin",
                    "Deborah",
                    "Dan",
                    "Deborah Kurata",
                    "Mike Pearson",
                    "rel=\"noopener\">https://medium.com/</a>@thomasburlesonIA",
                    "Hamilton"
                ],
                "FAC": [
                    "RxJS"
                ],
                "GPE": [
                    "RxJS",
                    "RxJS",
                    "RxJS",
                    "href=\"http://shouldiusegraphql.com/"
                ],
                "DATE": [
                    "denver-2019-session-27"
                ]
            }
        },
        {
            "content": "The Angular Show's panelists (Aaron Frost, Brian Love, and Jeniffer Wadella) sit down with Brandon Roberts to learn from the master, and contributor, of the popular NgRx platform and the elegant, efficient, opinionated, and performant solution to state management in Angular.<br /><br />The NgRx platform includes several libraries. The most popular and widely used library is the store, often used alongside the effects and entities libraries. The NgRx store library (often referred to as just \"NgRx\") is inspired by Redux. Redux's core principles are: a single source of truth, state is read-only, and changes to the state of the application are only made through pure functions referred to as reducers. NgRx is an Angular library that is open-source, adheres to these core principles, and is widely adopted in applications that often have complex state that necessitates the structured approach to state management utilizing indirection.<br /><br />Join us as we dive further into state management in Angular!<br /><br />Show Notes:<br />\u25ba <a href=\"https://medium.com/\" rel=\"noopener\">https://medium.com/</a>@unicodeveloper/2018-in-review-shattering-expectations-9418f2d720cc<br />\u25ba <a href=\"https://ngrx.io/guide/component-store\" rel=\"noopener\">https://ngrx.io/guide/component-store</a>",
            "contentSnippet": "The Angular Show's panelists (Aaron Frost, Brian Love, and Jeniffer Wadella) sit down with Brandon Roberts to learn from the master, and contributor, of the popular NgRx platform and the elegant, efficient, opinionated, and performant solution to state management in Angular.\nThe NgRx platform includes several libraries. The most popular and widely used library is the store, often used alongside the effects and entities libraries. The NgRx store library (often referred to as just \"NgRx\") is inspired by Redux. Redux's core principles are: a single source of truth, state is read-only, and changes to the state of the application are only made through pure functions referred to as reducers. NgRx is an Angular library that is open-source, adheres to these core principles, and is widely adopted in applications that often have complex state that necessitates the structured approach to state management utilizing indirection.\nJoin us as we dive further into state management in Angular!\nShow Notes:\n\u25ba https://medium.com/@unicodeveloper/2018-in-review-shattering-expectations-9418f2d720cc\n\u25ba https://ngrx.io/guide/component-store",
            "enclosure": {
                "length": "68596591",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/40686636/tas_state_management_2_ngrx_brandon_roberts_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/40686636",
            "isoDate": "2020-09-09T14:10:31.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4288",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,angular-library,javascript,ng-conf,ngrx,state-management",
                "subtitle": "The Angular Show's panelists (Aaron Frost, Brian Love, and Jeniffer Wadella) sit down with Brandon Roberts to learn from the master, and contributor, of the popular NgRx platform and the elegant, efficient, opinionated, and performant solution to...",
                "summary": "The Angular Show's panelists (Aaron Frost, Brian Love, and Jeniffer Wadella) sit down with Brandon Roberts to learn from the master, and contributor, of the popular NgRx platform and the elegant, efficient, opinionated, and performant solution to state management in Angular.<br /><br />The NgRx platform includes several libraries. The most popular and widely used library is the store, often used alongside the effects and entities libraries. The NgRx store library (often referred to as just \"NgRx\") is inspired by Redux. Redux's core principles are: a single source of truth, state is read-only, and changes to the state of the application are only made through pure functions referred to as reducers. NgRx is an Angular library that is open-source, adheres to these core principles, and is widely adopted in applications that often have complex state that necessitates the structured approach to state management utilizing indirection.<br /><br />Join us as we dive further into state management in Angular!<br /><br />Show Notes:<br />\u25ba <a href=\"https://medium.com/\" rel=\"noopener\">https://medium.com/</a>@unicodeveloper/2018-in-review-shattering-expectations-9418f2d720cc<br />\u25ba <a href=\"https://ngrx.io/guide/component-store\" rel=\"noopener\">https://ngrx.io/guide/component-store</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e031-state-management-part-3-the-state-i",
            "pubDate": "Wed, 09 Sep 2020 14:10:31 +0000",
            "title": "E031 - State Management Pt 3 - NgRx",
            "entities": {
                "WORK_OF_ART": [
                    "The Angular Show's",
                    "NgRx"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Brian Love",
                    "Jeniffer Wadella",
                    "Brandon Roberts",
                    "NgRx",
                    "NgRx",
                    "NgRx",
                    "NgRx"
                ],
                "GPE": [
                    "Redux",
                    "Redux"
                ]
            }
        },
        {
            "content": "Part 2 of our series on State Management in Angular focuses on the use of RxJS in order to leverage Observables, Subjects, and BehaviorSubjects in Angular applications.<br /><br />First, Aaron Frost\u00a0and Jennifer Wadella talk through how RxJS is used by Angular developers to persist state in singleton services using Subjects. This is a common approach to implementing a single source of truth with the observable pattern in Angular. Another benefit of the approach is a path to implementing a state management library such as NgRx in an Angular application when necessary.<br /><br />Then, Ben Lesh joins Brian Love and the other panelists to share his story of how he personally got started on the RxJS project. One of the major drawbacks of using promises is a lack of a cancellation feature. While at Netflix, the team resolved this by using the Observable primitive. Ben also shares the story of how he was tasked with refactoring RxJS to follow the then-to-be approved TC39 proposal for the Observable primitive. We then learn from Ben about the current work that is being done by the RxJS core team and the future of RxJS.<br /><br />Finally, Ben drops some knowledge on a simple philosophy: if the code you write works, can be maintained, and is testable, then it's good code. The end.<br /><br />Show Notes: <a href=\"https://github.com/ReactiveX/rxjs/blob/8dacf256be307ba3b8b2e9c94badb4b398e1ec47/docs_app/content/guide/glossary-and-semantics.md\" rel=\"noopener\">https://github.com/ReactiveX/rxjs/blob/8dacf256be307ba3b8b2e9c94badb4b398e1ec47/docs_app/content/guide/glossary-and-semantics.md</a>",
            "contentSnippet": "Part 2 of our series on State Management in Angular focuses on the use of RxJS in order to leverage Observables, Subjects, and BehaviorSubjects in Angular applications.\nFirst, Aaron Frost\u00a0and Jennifer Wadella talk through how RxJS is used by Angular developers to persist state in singleton services using Subjects. This is a common approach to implementing a single source of truth with the observable pattern in Angular. Another benefit of the approach is a path to implementing a state management library such as NgRx in an Angular application when necessary.\nThen, Ben Lesh joins Brian Love and the other panelists to share his story of how he personally got started on the RxJS project. One of the major drawbacks of using promises is a lack of a cancellation feature. While at Netflix, the team resolved this by using the Observable primitive. Ben also shares the story of how he was tasked with refactoring RxJS to follow the then-to-be approved TC39 proposal for the Observable primitive. We then learn from Ben about the current work that is being done by the RxJS core team and the future of RxJS.\nFinally, Ben drops some knowledge on a simple philosophy: if the code you write works, can be maintained, and is testable, then it's good code. The end.\nShow Notes: https://github.com/ReactiveX/rxjs/blob/8dacf256be307ba3b8b2e9c94badb4b398e1ec47/docs_app/content/guide/glossary-and-semantics.md",
            "enclosure": {
                "length": "50252786",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/40686635/tas_july_15th_state_management_3_rxjs_ben_lesh_edit_2.mp3"
            },
            "guid": "https://api.spreaker.com/episode/40686635",
            "isoDate": "2020-09-04T14:44:43.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3141",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,behaviorsubjects,javascript,ng-conf,observable,rxjs,state,state-management,subjects",
                "subtitle": "Part 2 of our series on State Management in Angular focuses on the use of RxJS in order to leverage Observables, Subjects, and BehaviorSubjects in Angular applications.\n\nFirst, Aaron Frost\u00a0and Jennifer Wadella talk through how RxJS is used by Angular...",
                "summary": "Part 2 of our series on State Management in Angular focuses on the use of RxJS in order to leverage Observables, Subjects, and BehaviorSubjects in Angular applications.<br /><br />First, Aaron Frost\u00a0and Jennifer Wadella talk through how RxJS is used by Angular developers to persist state in singleton services using Subjects. This is a common approach to implementing a single source of truth with the observable pattern in Angular. Another benefit of the approach is a path to implementing a state management library such as NgRx in an Angular application when necessary.<br /><br />Then, Ben Lesh joins Brian Love and the other panelists to share his story of how he personally got started on the RxJS project. One of the major drawbacks of using promises is a lack of a cancellation feature. While at Netflix, the team resolved this by using the Observable primitive. Ben also shares the story of how he was tasked with refactoring RxJS to follow the then-to-be approved TC39 proposal for the Observable primitive. We then learn from Ben about the current work that is being done by the RxJS core team and the future of RxJS.<br /><br />Finally, Ben drops some knowledge on a simple philosophy: if the code you write works, can be maintained, and is testable, then it's good code. The end.<br /><br />Show Notes: <a href=\"https://github.com/ReactiveX/rxjs/blob/8dacf256be307ba3b8b2e9c94badb4b398e1ec47/docs_app/content/guide/glossary-and-semantics.md\" rel=\"noopener\">https://github.com/ReactiveX/rxjs/blob/8dacf256be307ba3b8b2e9c94badb4b398e1ec47/docs_app/content/guide/glossary-and-semantics.md</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e030-state-management-part-2-the-state-i",
            "pubDate": "Fri, 04 Sep 2020 14:44:43 +0000",
            "title": "E030 - State Management Pt 2 - RxJS",
            "entities": {
                "CARDINAL": [
                    "2",
                    "One"
                ],
                "ORG": [
                    "State Management in Angular",
                    "singleton services",
                    "href=\"https://github.com"
                ],
                "FAC": [
                    "RxJS",
                    "RxJS"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Jennifer Wadella",
                    "NgRx",
                    "Ben Lesh",
                    "Brian Love",
                    "Observable",
                    "Ben",
                    "Observable",
                    "Ben",
                    "Ben"
                ],
                "GPE": [
                    "RxJS",
                    "RxJS",
                    "Netflix",
                    "RxJS"
                ],
                "PRODUCT": [
                    "Notes"
                ]
            }
        },
        {
            "content": "Buckle your seatbelt folks, this is going to be one heck of a ride. Get ready for episode one of a six-part series on State Management in Angular. That's right, there was no way we could fit the topic into a single episode. <br /><br />Panelists Aaron Frost, Brian Love, and Jennifer Wadella start with defining what exactly is \"state\" in a client application and why it matters. We then jump into a time machine and travel back to the (good?) ole' days of state management in AngularJS. Remember $scope? What about those long digest cycles? But, have no fear, we'll then race forward in time to the pending release of the modern-framework that is Angular (version 2+).<br /><br />The panelists then welcome Googler Alex Rickabaugh to share how he made his way onto the Angular Team through an internal data fetching/caching project called Streamy. His experience with building Streamy led to working on a PoC Angular project, \"Tactical\", in an attempt to provide Angular with a State Management+ solution.  Tactical aimed to manage data flow, offline, validation, caching, conflicts, and more. While Tactical was never released as an official part of the Angular platform, Alex shares insight into the complexities of state management and building abstract tools to solve the oft-encountered programming problem.<br /><br />But wait, wait... there's more. The panelists then scrub forward in time to hearing about state management evolutions in other frameworks, such as Flux and then Redux. Then, zooming forward even more into the land of Promises and then the revelation (and struggle) of Observables.  With all that history and information, you definitely don't want to miss this episode! Come join us on the journey, and definitely don't forget to subscribe to stay caught up on all our future episodes as well!<br /><br />Alex Rickabaugh: @synalx",
            "contentSnippet": "Buckle your seatbelt folks, this is going to be one heck of a ride. Get ready for episode one of a six-part series on State Management in Angular. That's right, there was no way we could fit the topic into a single episode. \nPanelists Aaron Frost, Brian Love, and Jennifer Wadella start with defining what exactly is \"state\" in a client application and why it matters. We then jump into a time machine and travel back to the (good?) ole' days of state management in AngularJS. Remember $scope? What about those long digest cycles? But, have no fear, we'll then race forward in time to the pending release of the modern-framework that is Angular (version 2+).\nThe panelists then welcome Googler Alex Rickabaugh to share how he made his way onto the Angular Team through an internal data fetching/caching project called Streamy. His experience with building Streamy led to working on a PoC Angular project, \"Tactical\", in an attempt to provide Angular with a State Management+ solution.  Tactical aimed to manage data flow, offline, validation, caching, conflicts, and more. While Tactical was never released as an official part of the Angular platform, Alex shares insight into the complexities of state management and building abstract tools to solve the oft-encountered programming problem.\nBut wait, wait... there's more. The panelists then scrub forward in time to hearing about state management evolutions in other frameworks, such as Flux and then Redux. Then, zooming forward even more into the land of Promises and then the revelation (and struggle) of Observables.  With all that history and information, you definitely don't want to miss this episode! Come join us on the journey, and definitely don't forget to subscribe to stay caught up on all our future episodes as well!\nAlex Rickabaugh: @synalx",
            "enclosure": {
                "length": "86018811",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/40450204/the_state_in_angular_angular_data_alex_rickabaugh_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/40450204",
            "isoDate": "2020-08-24T14:34:17.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "5377",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,angularjs,code,coding,developer,development,flux,google,javascript,ng-conf,observables,programmer,programming,promises,redux,state-management",
                "subtitle": "Buckle your seatbelt folks, this is going to be one heck of a ride. Get ready for episode one of a six-part series on State Management in Angular. That's right, there was no way we could fit the topic into a single episode. \n\nPanelists Aaron Frost,...",
                "summary": "Buckle your seatbelt folks, this is going to be one heck of a ride. Get ready for episode one of a six-part series on State Management in Angular. That's right, there was no way we could fit the topic into a single episode. <br /><br />Panelists Aaron Frost, Brian Love, and Jennifer Wadella start with defining what exactly is \"state\" in a client application and why it matters. We then jump into a time machine and travel back to the (good?) ole' days of state management in AngularJS. Remember $scope? What about those long digest cycles? But, have no fear, we'll then race forward in time to the pending release of the modern-framework that is Angular (version 2+).<br /><br />The panelists then welcome Googler Alex Rickabaugh to share how he made his way onto the Angular Team through an internal data fetching/caching project called Streamy. His experience with building Streamy led to working on a PoC Angular project, \"Tactical\", in an attempt to provide Angular with a State Management+ solution.  Tactical aimed to manage data flow, offline, validation, caching, conflicts, and more. While Tactical was never released as an official part of the Angular platform, Alex shares insight into the complexities of state management and building abstract tools to solve the oft-encountered programming problem.<br /><br />But wait, wait... there's more. The panelists then scrub forward in time to hearing about state management evolutions in other frameworks, such as Flux and then Redux. Then, zooming forward even more into the land of Promises and then the revelation (and struggle) of Observables.  With all that history and information, you definitely don't want to miss this episode! Come join us on the journey, and definitely don't forget to subscribe to stay caught up on all our future episodes as well!<br /><br />Alex Rickabaugh: @synalx"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e029-state-management-part-1-the-state-i",
            "pubDate": "Mon, 24 Aug 2020 14:34:17 +0000",
            "title": "E029 - State Management Pt 1 - The History & Angular Data",
            "entities": {
                "CARDINAL": [
                    "one",
                    "six",
                    "2+).<br"
                ],
                "ORG": [
                    "State Management in Angular",
                    "the Angular Team",
                    "PoC Angular",
                    "State",
                    "Alex",
                    "@synalx"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Brian Love",
                    "Jennifer Wadella",
                    "Alex Rickabaugh"
                ],
                "GPE": [
                    "AngularJS",
                    "Redux",
                    "Rickabaugh"
                ]
            }
        },
        {
            "content": "In the conclusion of our four-part series on testing in Angular, we sat down with Keen Yee Liau. Keen leads the tooling team as part of the Angular Team at Google. Externally, the tooling team ships the Angular CLI, which includes the out-of-the-box end-to-end testing tool called Protractor. Join\u00a0panelists Aaron Frost, Brian Love, and\u00a0Jennifer Wadella\u00a0as we learn from Keen about the current direction of Protractor.<br /><br />The recently released version 7 of Protractor focused solely on security issues, resulting in the necessity to update dependencies, leading to a major release bump. If you've been using Protractor for some time, you might be asking, \"Wait, what happened to version 6?\"\u00a0Well, v6 was a release-to-evaluate webdriver version 4 (still in alpha) and was never released, and likely won't ever be released. It goes down as a fun bit of history along with Angular version 3.<br /><br />Keen shared with the panelists how the tooling team (and the Angular team at large)\u00a0is reflecting on the strategy and direction of Angular and the tooling infrastructure. Keen and his team are evaluating the landscape of testing, both within Google and broadly within the ecosystem. Given the current evaluation, make no mistake, Protractor is widely used within Google, and the tooling team is committed to supporting and improving Protractor for the 1,100 + Angular applications at Google as well as\u00a0the thousands of applications in the community that use Protractor for end-to-end testing. The Angular Team is committed to not leaving anyone behind in the story of Angular. Rest assured, this includes projects that use Protractor. But Keen is also looking for feedback from YOU!\u00a0His DMs are open at @liauky. We look forward to the future of testing Angular applications!",
            "contentSnippet": "In the conclusion of our four-part series on testing in Angular, we sat down with Keen Yee Liau. Keen leads the tooling team as part of the Angular Team at Google. Externally, the tooling team ships the Angular CLI, which includes the out-of-the-box end-to-end testing tool called Protractor. Join\u00a0panelists Aaron Frost, Brian Love, and\u00a0Jennifer Wadella\u00a0as we learn from Keen about the current direction of Protractor.\nThe recently released version 7 of Protractor focused solely on security issues, resulting in the necessity to update dependencies, leading to a major release bump. If you've been using Protractor for some time, you might be asking, \"Wait, what happened to version 6?\"\u00a0Well, v6 was a release-to-evaluate webdriver version 4 (still in alpha) and was never released, and likely won't ever be released. It goes down as a fun bit of history along with Angular version 3.\nKeen shared with the panelists how the tooling team (and the Angular team at large)\u00a0is reflecting on the strategy and direction of Angular and the tooling infrastructure. Keen and his team are evaluating the landscape of testing, both within Google and broadly within the ecosystem. Given the current evaluation, make no mistake, Protractor is widely used within Google, and the tooling team is committed to supporting and improving Protractor for the 1,100 + Angular applications at Google as well as\u00a0the thousands of applications in the community that use Protractor for end-to-end testing. The Angular Team is committed to not leaving anyone behind in the story of Angular. Rest assured, this includes projects that use Protractor. But Keen is also looking for feedback from YOU!\u00a0His DMs are open at @liauky. We look forward to the future of testing Angular applications!",
            "enclosure": {
                "length": "64827403",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/40181199/tas_protractor_keen_yee_liau_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/40181199",
            "isoDate": "2020-08-21T13:43:19.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4052",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,end-to-end,end-to-end-testing,javascript,ng-cong,programmer,programming,protractor,web-development",
                "subtitle": "In the conclusion of our four-part series on testing in Angular, we sat down with Keen Yee Liau. Keen leads the tooling team as part of the Angular Team at Google. Externally, the tooling team ships the Angular CLI, which includes the out-of-the-box...",
                "summary": "In the conclusion of our four-part series on testing in Angular, we sat down with Keen Yee Liau. Keen leads the tooling team as part of the Angular Team at Google. Externally, the tooling team ships the Angular CLI, which includes the out-of-the-box end-to-end testing tool called Protractor. Join\u00a0panelists Aaron Frost, Brian Love, and\u00a0Jennifer Wadella\u00a0as we learn from Keen about the current direction of Protractor.<br /><br />The recently released version 7 of Protractor focused solely on security issues, resulting in the necessity to update dependencies, leading to a major release bump. If you've been using Protractor for some time, you might be asking, \"Wait, what happened to version 6?\"\u00a0Well, v6 was a release-to-evaluate webdriver version 4 (still in alpha) and was never released, and likely won't ever be released. It goes down as a fun bit of history along with Angular version 3.<br /><br />Keen shared with the panelists how the tooling team (and the Angular team at large)\u00a0is reflecting on the strategy and direction of Angular and the tooling infrastructure. Keen and his team are evaluating the landscape of testing, both within Google and broadly within the ecosystem. Given the current evaluation, make no mistake, Protractor is widely used within Google, and the tooling team is committed to supporting and improving Protractor for the 1,100 + Angular applications at Google as well as\u00a0the thousands of applications in the community that use Protractor for end-to-end testing. The Angular Team is committed to not leaving anyone behind in the story of Angular. Rest assured, this includes projects that use Protractor. But Keen is also looking for feedback from YOU!\u00a0His DMs are open at @liauky. We look forward to the future of testing Angular applications!"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e028-testing-series-part-4-protractor",
            "pubDate": "Fri, 21 Aug 2020 13:43:19 +0000",
            "title": "E028 - Testing Series Part 4 - Protractor",
            "entities": {
                "CARDINAL": [
                    "four",
                    "7",
                    "6",
                    "4",
                    "3.<br",
                    "1,100",
                    "thousands"
                ],
                "PERSON": [
                    "Yee Liau",
                    "Aaron Frost",
                    "Brian Love",
                    "Jennifer Wadella"
                ],
                "ORG": [
                    "the Angular Team at Google",
                    "Angular",
                    "Google",
                    "Google",
                    "Google",
                    "The Angular Team",
                    "@liauky"
                ],
                "GPE": [
                    "v6"
                ]
            }
        },
        {
            "content": "The third part of our four-part series on testing in Angular focuses on end-to-end testing with Cypress. Cypress provides fast, easy, and reliable testing for Angular applications. Panelists Aaron Frost, Brian Love, and Jennifer Wadella have the privilege to learn about end-to-end testing with Cypress from Martina Kraus (Google Developer Expert in Angular), Dave Muellerchen (Google Developer Expert in Angular), and Cecilia Martinez (Success Engineer at Cypress).<br /><br />Show Notes:<br />\u25ba<a href=\"https://webdave.de/blog/cypress\" rel=\"noopener\">https://webdave.de/blog/cypress</a><br />\u25ba<a href=\"https://www.youtube.com/watchv\" rel=\"noopener\">https://www.youtube.com/watchv</a>=MiHcYL6huoY&list=PLdLZVBn48n_Du1Q80B1VMqnvH4xgXMDm0&index=3&t=33s<br />\u25ba<a href=\"https://www.slideshare.net/ladyleet/inclusive-architecture-introducing-the-pamstack-refactrtech\" rel=\"noopener\">https://www.slideshare.net/ladyleet/inclusive-architecture-introducing-the-pamstack-refactrtech</a>",
            "contentSnippet": "The third part of our four-part series on testing in Angular focuses on end-to-end testing with Cypress. Cypress provides fast, easy, and reliable testing for Angular applications. Panelists Aaron Frost, Brian Love, and Jennifer Wadella have the privilege to learn about end-to-end testing with Cypress from Martina Kraus (Google Developer Expert in Angular), Dave Muellerchen (Google Developer Expert in Angular), and Cecilia Martinez (Success Engineer at Cypress).\nShow Notes:\n\u25bahttps://webdave.de/blog/cypress\n\u25bahttps://www.youtube.com/watchv=MiHcYL6huoY&list=PLdLZVBn48n_Du1Q80B1VMqnvH4xgXMDm0&index=3&t=33s\n\u25bahttps://www.slideshare.net/ladyleet/inclusive-architecture-introducing-the-pamstack-refactrtech",
            "enclosure": {
                "length": "54747025",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/40181197/tas_cypress_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/40181197",
            "isoDate": "2020-08-17T14:14:08.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3422",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,cypress,cypress-testing,developer,development,end-to-end-testing,javascript,ng-conf,programmer,programming",
                "subtitle": "The third part of our four-part series on testing in Angular focuses on end-to-end testing with Cypress. Cypress provides fast, easy, and reliable testing for Angular applications. Panelists Aaron Frost, Brian Love, and Jennifer Wadella have the...",
                "summary": "The third part of our four-part series on testing in Angular focuses on end-to-end testing with Cypress. Cypress provides fast, easy, and reliable testing for Angular applications. Panelists Aaron Frost, Brian Love, and Jennifer Wadella have the privilege to learn about end-to-end testing with Cypress from Martina Kraus (Google Developer Expert in Angular), Dave Muellerchen (Google Developer Expert in Angular), and Cecilia Martinez (Success Engineer at Cypress).<br /><br />Show Notes:<br />\u25ba<a href=\"https://webdave.de/blog/cypress\" rel=\"noopener\">https://webdave.de/blog/cypress</a><br />\u25ba<a href=\"https://www.youtube.com/watchv\" rel=\"noopener\">https://www.youtube.com/watchv</a>=MiHcYL6huoY&list=PLdLZVBn48n_Du1Q80B1VMqnvH4xgXMDm0&index=3&t=33s<br />\u25ba<a href=\"https://www.slideshare.net/ladyleet/inclusive-architecture-introducing-the-pamstack-refactrtech\" rel=\"noopener\">https://www.slideshare.net/ladyleet/inclusive-architecture-introducing-the-pamstack-refactrtech</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e027-testing-series-part-3-cypress",
            "pubDate": "Mon, 17 Aug 2020 14:14:08 +0000",
            "title": "E027 - Testing Series Part 3 - Cypress",
            "entities": {
                "ORDINAL": [
                    "third"
                ],
                "CARDINAL": [
                    "four"
                ],
                "FAC": [
                    "Cypress",
                    "Cypress"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Brian Love",
                    "Jennifer Wadella",
                    "Dave Muellerchen",
                    "Cecilia Martinez"
                ],
                "ORG": [
                    "Success Engineer",
                    "href=\"https://www.youtube.com",
                    "rel=\"noopener\">https://www.youtube.com/watchv</a>=MiHcYL6huoY&list"
                ]
            }
        },
        {
            "content": "The second part of our four-part series on testing in Angular focuses on Jest. Younes Jaaidi joins\u00a0panelists Aaron Frost, Brian Love, Shai Reznik, and Jennifer Wadella to talk about why you might want to consider Jest for unit testing in your Angular project.<br /><br />While the Angular CLI ships with the ability to scaffold unit tests using Jasmine as well as the Karma test runner, Younes teaches us some of the benefits of Jest, including performance, the ability to run Jest in multiple environments, presets, re-running failed tests first, easier-to-read test failure output, a virtual file system, parallelization, snapshot testing, and many more optimizations for the developer experience. Further, the ability to run Jest in multiple environments means that you can run Jest outside of the browser, either with Node or with jsdom.<br /><br />Younes and the panelists also discuss the pros and cons of snapshot testing. Snapshot testing with Jest enables you to compare template snapshots to prevent unexpected changes to the UI of your application. While snapshot testing can be incredibly powerful, it can be overused and result in false positives, so we should consider other testing solutions such as visual regression testing and end-to-end testing.<br /><br />Show Notes:<br />\u25ba <a href=\"https://code.google.com/archive/p/js-test-driver/\" rel=\"noopener\">https://code.google.com/archive/p/js-test-driver/</a><br />\u25ba <a href=\"https://jestjs.io/docs/en/architecture\" rel=\"noopener\">https://jestjs.io/docs/en/architecture</a><br />\u25ba marmicode.io<br />\u25ba <a href=\"https://www.pdxmonthly.com/news-and-city-life/2020/06/kali-ladd-s-powerful-words-on-the-protests-in-portland\" rel=\"noopener\">https://www.pdxmonthly.com/news-and-city-life/2020/06/kali-ladd-s-powerful-words-on-the-protests-in-portland</a>",
            "contentSnippet": "The second part of our four-part series on testing in Angular focuses on Jest. Younes Jaaidi joins\u00a0panelists Aaron Frost, Brian Love, Shai Reznik, and Jennifer Wadella to talk about why you might want to consider Jest for unit testing in your Angular project.\nWhile the Angular CLI ships with the ability to scaffold unit tests using Jasmine as well as the Karma test runner, Younes teaches us some of the benefits of Jest, including performance, the ability to run Jest in multiple environments, presets, re-running failed tests first, easier-to-read test failure output, a virtual file system, parallelization, snapshot testing, and many more optimizations for the developer experience. Further, the ability to run Jest in multiple environments means that you can run Jest outside of the browser, either with Node or with jsdom.\nYounes and the panelists also discuss the pros and cons of snapshot testing. Snapshot testing with Jest enables you to compare template snapshots to prevent unexpected changes to the UI of your application. While snapshot testing can be incredibly powerful, it can be overused and result in false positives, so we should consider other testing solutions such as visual regression testing and end-to-end testing.\nShow Notes:\n\u25ba https://code.google.com/archive/p/js-test-driver/\n\u25ba https://jestjs.io/docs/en/architecture\n\u25ba marmicode.io\n\u25ba https://www.pdxmonthly.com/news-and-city-life/2020/06/kali-ladd-s-powerful-words-on-the-protests-in-portland",
            "enclosure": {
                "length": "72654498",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/40181198/tas_jest_younes_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/40181198",
            "isoDate": "2020-08-14T13:41:23.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4541",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,angular-testing,code,coding,developer,development,end-to-end-testing,jest,programmer,programming,snapshot,testing",
                "subtitle": "The second part of our four-part series on testing in Angular focuses on Jest. Younes Jaaidi joins\u00a0panelists Aaron Frost, Brian Love, Shai Reznik, and Jennifer Wadella to talk about why you might want to consider Jest for unit testing in your Angular...",
                "summary": "The second part of our four-part series on testing in Angular focuses on Jest. Younes Jaaidi joins\u00a0panelists Aaron Frost, Brian Love, Shai Reznik, and Jennifer Wadella to talk about why you might want to consider Jest for unit testing in your Angular project.<br /><br />While the Angular CLI ships with the ability to scaffold unit tests using Jasmine as well as the Karma test runner, Younes teaches us some of the benefits of Jest, including performance, the ability to run Jest in multiple environments, presets, re-running failed tests first, easier-to-read test failure output, a virtual file system, parallelization, snapshot testing, and many more optimizations for the developer experience. Further, the ability to run Jest in multiple environments means that you can run Jest outside of the browser, either with Node or with jsdom.<br /><br />Younes and the panelists also discuss the pros and cons of snapshot testing. Snapshot testing with Jest enables you to compare template snapshots to prevent unexpected changes to the UI of your application. While snapshot testing can be incredibly powerful, it can be overused and result in false positives, so we should consider other testing solutions such as visual regression testing and end-to-end testing.<br /><br />Show Notes:<br />\u25ba <a href=\"https://code.google.com/archive/p/js-test-driver/\" rel=\"noopener\">https://code.google.com/archive/p/js-test-driver/</a><br />\u25ba <a href=\"https://jestjs.io/docs/en/architecture\" rel=\"noopener\">https://jestjs.io/docs/en/architecture</a><br />\u25ba marmicode.io<br />\u25ba <a href=\"https://www.pdxmonthly.com/news-and-city-life/2020/06/kali-ladd-s-powerful-words-on-the-protests-in-portland\" rel=\"noopener\">https://www.pdxmonthly.com/news-and-city-life/2020/06/kali-ladd-s-powerful-words-on-the-protests-in-portland</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e026-testing-series-part-2-jest",
            "pubDate": "Fri, 14 Aug 2020 13:41:23 +0000",
            "title": "E026 - Testing Series Part 2 - Jest",
            "entities": {
                "ORDINAL": [
                    "second",
                    "first"
                ],
                "CARDINAL": [
                    "four"
                ],
                "PERSON": [
                    "Jest",
                    "Aaron Frost",
                    "Brian Love",
                    "Shai Reznik",
                    "Jennifer Wadella",
                    "Jest",
                    "Jasmine",
                    "Karma",
                    "Jest",
                    "Jest",
                    "Jest",
                    "Jest",
                    "Node",
                    "Jest"
                ],
                "ORG": [
                    "Angular",
                    "rel=\"noopener\">https://code.google.com/archive/p"
                ]
            }
        },
        {
            "content": "In this four-part series, the Angular Show breaks down testing in Angular. Do you test? Should you have automated tests? And if you do test, what types of tests should you implement? Should you unit test? Should you have end-to-end tests? What about integration tests? This series tackles all of these questions and more.<br /><br />In part one, panelists Aaron Frost and Jennifer Wadella invite Joe Eames, CEO of Thinkster.io and Pluralsight author, along with Shai Reznik, founder and author of testangular.com, to share their knowledge and love of unit testing in Angular.<br /><br />While you are most likely performing manual testing, you may not be leveraging automated testing. Automated testing enables us to prevent regressions, increasing the quality of our applications. While many of us may not be leveraging automated testing, it can be extremely valuable when moving fast, when we have multiple developers on a team or in the code base, and perhaps even multiple teams in an organization that is sharing the same code and repository. The end result is confidence. Having a high level of confidence in shipping quality software provides significant value. Of course, implementing an automated testing strategy comes at a cost. Weighing the benefits with the cost is critical and should not be missed in your organization or team.<br /><br />Don't forget to subscribe so you can be notified when Testing Series Part 2 on using Jest for unit testing in Angular is available for download!",
            "contentSnippet": "In this four-part series, the Angular Show breaks down testing in Angular. Do you test? Should you have automated tests? And if you do test, what types of tests should you implement? Should you unit test? Should you have end-to-end tests? What about integration tests? This series tackles all of these questions and more.\nIn part one, panelists Aaron Frost and Jennifer Wadella invite Joe Eames, CEO of Thinkster.io and Pluralsight author, along with Shai Reznik, founder and author of testangular.com, to share their knowledge and love of unit testing in Angular.\nWhile you are most likely performing manual testing, you may not be leveraging automated testing. Automated testing enables us to prevent regressions, increasing the quality of our applications. While many of us may not be leveraging automated testing, it can be extremely valuable when moving fast, when we have multiple developers on a team or in the code base, and perhaps even multiple teams in an organization that is sharing the same code and repository. The end result is confidence. Having a high level of confidence in shipping quality software provides significant value. Of course, implementing an automated testing strategy comes at a cost. Weighing the benefits with the cost is critical and should not be missed in your organization or team.\nDon't forget to subscribe so you can be notified when Testing Series Part 2 on using Jest for unit testing in Angular is available for download!",
            "enclosure": {
                "length": "99928423",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/40158408/tas_unit_testing_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/40158408",
            "isoDate": "2020-08-11T12:41:40.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "6246",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,automated,code,coder,coding,developer,development,end-to-end,integrated-testing,programmer,programming,testing",
                "subtitle": "In this four-part series, the Angular Show breaks down testing in Angular. Do you test? Should you have automated tests? And if you do test, what types of tests should you implement? Should you unit test? Should you have end-to-end tests? What about...",
                "summary": "In this four-part series, the Angular Show breaks down testing in Angular. Do you test? Should you have automated tests? And if you do test, what types of tests should you implement? Should you unit test? Should you have end-to-end tests? What about integration tests? This series tackles all of these questions and more.<br /><br />In part one, panelists Aaron Frost and Jennifer Wadella invite Joe Eames, CEO of Thinkster.io and Pluralsight author, along with Shai Reznik, founder and author of testangular.com, to share their knowledge and love of unit testing in Angular.<br /><br />While you are most likely performing manual testing, you may not be leveraging automated testing. Automated testing enables us to prevent regressions, increasing the quality of our applications. While many of us may not be leveraging automated testing, it can be extremely valuable when moving fast, when we have multiple developers on a team or in the code base, and perhaps even multiple teams in an organization that is sharing the same code and repository. The end result is confidence. Having a high level of confidence in shipping quality software provides significant value. Of course, implementing an automated testing strategy comes at a cost. Weighing the benefits with the cost is critical and should not be missed in your organization or team.<br /><br />Don't forget to subscribe so you can be notified when Testing Series Part 2 on using Jest for unit testing in Angular is available for download!"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e025-testing-series-part-1-unit-testing",
            "pubDate": "Tue, 11 Aug 2020 12:41:40 +0000",
            "title": "E025 - Testing Series Part 1 - Unit Testing",
            "entities": {
                "CARDINAL": [
                    "four",
                    "2"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Jennifer Wadella",
                    "Joe Eames",
                    "Shai Reznik",
                    "Jest"
                ],
                "ORG": [
                    "Thinkster.io"
                ],
                "NORP": [
                    "Pluralsight"
                ]
            }
        },
        {
            "content": "Hot off the press is the newly released roadmap for Angular. You may not be aware, but Angular has been missing an official roadmap since version 2 was shipped in September of 2016. A roadmap serves many purposes for both the Angular Team & Google and for the community that contributes to and has invested in the platform. A roadmap:<br /><br />\ud83c\udfaf\u00a0Provides some insight into the future direction of Angular and allows stakeholders to offer feedback.<br />\ud83e\udd1d Shows the commitment to the platform from Google and the Angular Team.<br />\u2705 Provides decision-makers an opportunity to evaluate not only the current status of the platform but to also consider the potential future status of the platform.<br /><br />Join Angular Show panelists Aaron Frost and Brian Love as they go through the roadmap, breaking down each item and discussing what it means from both a technical and community perspective. Aaron and Brian are highly committed to both the Angular product and the community at large and were thrilled to see the roadmap released.<br /><br />Join us as we explore the rich and vast ecosystem of component libraries for Angular!",
            "contentSnippet": "Hot off the press is the newly released roadmap for Angular. You may not be aware, but Angular has been missing an official roadmap since version 2 was shipped in September of 2016. A roadmap serves many purposes for both the Angular Team & Google and for the community that contributes to and has invested in the platform. A roadmap:\n\ud83c\udfaf\u00a0Provides some insight into the future direction of Angular and allows stakeholders to offer feedback.\n\ud83e\udd1d Shows the commitment to the platform from Google and the Angular Team.\n\u2705 Provides decision-makers an opportunity to evaluate not only the current status of the platform but to also consider the potential future status of the platform.\nJoin Angular Show panelists Aaron Frost and Brian Love as they go through the roadmap, breaking down each item and discussing what it means from both a technical and community perspective. Aaron and Brian are highly committed to both the Angular product and the community at large and were thrilled to see the roadmap released.\nJoin us as we explore the rich and vast ecosystem of component libraries for Angular!",
            "enclosure": {
                "length": "51542132",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/40181116/tas_angular_road_map_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/40181116",
            "isoDate": "2020-08-07T14:19:20.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3222",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,angular-roadmap,code,coder,coding,developer,development,javascript,programmer,programming,roadmap",
                "subtitle": "Hot off the press is the newly released roadmap for Angular. You may not be aware, but Angular has been missing an official roadmap since version 2 was shipped in September of 2016. A roadmap serves many purposes for both the Angular Team & Google and...",
                "summary": "Hot off the press is the newly released roadmap for Angular. You may not be aware, but Angular has been missing an official roadmap since version 2 was shipped in September of 2016. A roadmap serves many purposes for both the Angular Team & Google and for the community that contributes to and has invested in the platform. A roadmap:<br /><br />\ud83c\udfaf\u00a0Provides some insight into the future direction of Angular and allows stakeholders to offer feedback.<br />\ud83e\udd1d Shows the commitment to the platform from Google and the Angular Team.<br />\u2705 Provides decision-makers an opportunity to evaluate not only the current status of the platform but to also consider the potential future status of the platform.<br /><br />Join Angular Show panelists Aaron Frost and Brian Love as they go through the roadmap, breaking down each item and discussing what it means from both a technical and community perspective. Aaron and Brian are highly committed to both the Angular product and the community at large and were thrilled to see the roadmap released.<br /><br />Join us as we explore the rich and vast ecosystem of component libraries for Angular!"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e024-angular-roadmap",
            "pubDate": "Fri, 07 Aug 2020 14:19:20 +0000",
            "title": "E024 - Angular Roadmap",
            "entities": {
                "CARDINAL": [
                    "2"
                ],
                "DATE": [
                    "September of 2016"
                ],
                "ORG": [
                    "the Angular Team & Google",
                    "Google"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Brian Love",
                    "Aaron",
                    "Brian"
                ]
            }
        },
        {
            "content": "As software engineers and programmers, we work and live in an environment that is ever-expanding. Staying current in technology is\u00a0not only a\u00a0necessity in our career but\u00a0often a challenge as well. As a result, entire industries have sprung up to assist us in meeting these\u00a0challenges, the education sector being at the forefront of those industries. But then the question arises:\u00a0Of all the options, which modality of learning is best? The answer is often a combination of your personal preference, how much time you have, and the required effectiveness.<br /><br />In episode 23 of The Angular Show, panelists Aaron Frost, Brian Love, Shai Reznik, and Jennifer Wadella\u00a0invite Joe Eames, author at Pluralsight\u00a0& CEO of Thinkster.io, to share his knowledge and love for teaching and learning. Joe has taught many of us on topics ranging from the Fundamentals of Angular to unit and end-to-end testing. Listen in as Joe teaches us about the modalities of learning and the advantages and disadvantages of each, and how we can effectively choose tools that will put us on effective learning\u00a0pathways for achieving optimum success.<br /><br />@josepheames",
            "contentSnippet": "As software engineers and programmers, we work and live in an environment that is ever-expanding. Staying current in technology is\u00a0not only a\u00a0necessity in our career but\u00a0often a challenge as well. As a result, entire industries have sprung up to assist us in meeting these\u00a0challenges, the education sector being at the forefront of those industries. But then the question arises:\u00a0Of all the options, which modality of learning is best? The answer is often a combination of your personal preference, how much time you have, and the required effectiveness.\nIn episode 23 of The Angular Show, panelists Aaron Frost, Brian Love, Shai Reznik, and Jennifer Wadella\u00a0invite Joe Eames, author at Pluralsight\u00a0& CEO of Thinkster.io, to share his knowledge and love for teaching and learning. Joe has taught many of us on topics ranging from the Fundamentals of Angular to unit and end-to-end testing. Listen in as Joe teaches us about the modalities of learning and the advantages and disadvantages of each, and how we can effectively choose tools that will put us on effective learning\u00a0pathways for achieving optimum success.\n@josepheames",
            "enclosure": {
                "length": "65033437",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/39865556/tas_learning_angular_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/39865556",
            "isoDate": "2020-08-04T15:16:10.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4065",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,coder,coding,developer,developing,education,learning,programmer,programming",
                "subtitle": "As software engineers and programmers, we work and live in an environment that is ever-expanding. Staying current in technology is\u00a0not only a\u00a0necessity in our career but\u00a0often a challenge as well. As a result, entire industries have sprung up to...",
                "summary": "As software engineers and programmers, we work and live in an environment that is ever-expanding. Staying current in technology is\u00a0not only a\u00a0necessity in our career but\u00a0often a challenge as well. As a result, entire industries have sprung up to assist us in meeting these\u00a0challenges, the education sector being at the forefront of those industries. But then the question arises:\u00a0Of all the options, which modality of learning is best? The answer is often a combination of your personal preference, how much time you have, and the required effectiveness.<br /><br />In episode 23 of The Angular Show, panelists Aaron Frost, Brian Love, Shai Reznik, and Jennifer Wadella\u00a0invite Joe Eames, author at Pluralsight\u00a0& CEO of Thinkster.io, to share his knowledge and love for teaching and learning. Joe has taught many of us on topics ranging from the Fundamentals of Angular to unit and end-to-end testing. Listen in as Joe teaches us about the modalities of learning and the advantages and disadvantages of each, and how we can effectively choose tools that will put us on effective learning\u00a0pathways for achieving optimum success.<br /><br />@josepheames"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e023-learning-angular",
            "pubDate": "Tue, 04 Aug 2020 15:16:10 +0000",
            "title": "E023 - Learning Angular",
            "entities": {
                "CARDINAL": [
                    "23"
                ],
                "WORK_OF_ART": [
                    "The Angular Show"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Brian Love",
                    "Shai Reznik",
                    "Jennifer Wadella\u00a0",
                    "Joe Eames",
                    "Joe",
                    "Joe"
                ],
                "ORG": [
                    "Pluralsight\u00a0&",
                    "Thinkster.io"
                ],
                "EVENT": [
                    "the Fundamentals of Angular"
                ]
            }
        },
        {
            "content": "One of Angular's core tenants is building reusable, testable, and maintainable pieces of code known as components. While most applications have varied features and components, there are some common threads among web and mobile applications. While you can build out these common elements, or components, for your application, it's often easier and faster to rely on a component library that provides these elements or widgets. For example, imagine building a cross-browser compatible and accessible tooltip component, or perhaps a date picker. What do you think? Do you want to ship your app or do you want to build out a date picker? I'm guessing the app.<br /><br />In this episode of the Angular Show we invited our friends from Progress (Alyssa Nicoll and Carl Bergenhem), VMWare (Jeremy Wilkin), GrapeCity (Joel Parks), and UI Bakery (Nikita Poltoratsky) to share their insights into component libraries and tooling that's available to Angular developers. Progress provides the popular Kendo UI component library for Angular, VMWare's Project Clarity is an open-source component library, GrapeCity provides the Wijmo component library for Angular, and UI Bakery is an open-source tool for building Angular application visually.<br /><br />Join us as we explore the rich and vast ecosystem of component libraries for Angular!",
            "contentSnippet": "One of Angular's core tenants is building reusable, testable, and maintainable pieces of code known as components. While most applications have varied features and components, there are some common threads among web and mobile applications. While you can build out these common elements, or components, for your application, it's often easier and faster to rely on a component library that provides these elements or widgets. For example, imagine building a cross-browser compatible and accessible tooltip component, or perhaps a date picker. What do you think? Do you want to ship your app or do you want to build out a date picker? I'm guessing the app.\nIn this episode of the Angular Show we invited our friends from Progress (Alyssa Nicoll and Carl Bergenhem), VMWare (Jeremy Wilkin), GrapeCity (Joel Parks), and UI Bakery (Nikita Poltoratsky) to share their insights into component libraries and tooling that's available to Angular developers. Progress provides the popular Kendo UI component library for Angular, VMWare's Project Clarity is an open-source component library, GrapeCity provides the Wijmo component library for Angular, and UI Bakery is an open-source tool for building Angular application visually.\nJoin us as we explore the rich and vast ecosystem of component libraries for Angular!",
            "enclosure": {
                "length": "64666892",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/39865494/tas_compenent_libraries_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/39865494",
            "isoDate": "2020-07-31T15:31:19.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4042",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,developing,grapecity,javascript,kendo,ng-conf,programmer,programming,progress,uibakery,vmware",
                "subtitle": "One of Angular's core tenants is building reusable, testable, and maintainable pieces of code known as components. While most applications have varied features and components, there are some common threads among web and mobile applications. While you...",
                "summary": "One of Angular's core tenants is building reusable, testable, and maintainable pieces of code known as components. While most applications have varied features and components, there are some common threads among web and mobile applications. While you can build out these common elements, or components, for your application, it's often easier and faster to rely on a component library that provides these elements or widgets. For example, imagine building a cross-browser compatible and accessible tooltip component, or perhaps a date picker. What do you think? Do you want to ship your app or do you want to build out a date picker? I'm guessing the app.<br /><br />In this episode of the Angular Show we invited our friends from Progress (Alyssa Nicoll and Carl Bergenhem), VMWare (Jeremy Wilkin), GrapeCity (Joel Parks), and UI Bakery (Nikita Poltoratsky) to share their insights into component libraries and tooling that's available to Angular developers. Progress provides the popular Kendo UI component library for Angular, VMWare's Project Clarity is an open-source component library, GrapeCity provides the Wijmo component library for Angular, and UI Bakery is an open-source tool for building Angular application visually.<br /><br />Join us as we explore the rich and vast ecosystem of component libraries for Angular!"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e022-component-libraries",
            "pubDate": "Fri, 31 Jul 2020 15:31:19 +0000",
            "title": "E022 - Component Libraries",
            "entities": {
                "CARDINAL": [
                    "One"
                ],
                "WORK_OF_ART": [
                    "the Angular Show"
                ],
                "PERSON": [
                    "Alyssa Nicoll",
                    "Carl Bergenhem",
                    "Jeremy Wilkin",
                    "Joel Parks"
                ],
                "ORG": [
                    "VMWare",
                    "GrapeCity",
                    "UI Bakery (Nikita Poltoratsky",
                    "Kendo UI",
                    "Angular",
                    "VMWare",
                    "GrapeCity",
                    "Wijmo",
                    "UI Bakery"
                ],
                "FAC": [
                    "Project Clarity"
                ]
            }
        },
        {
            "content": "The Angular Show panelists (Aaron Frost, Brian Love, Alisa Nicoll, and Shai Reznik) chat with the co-founders of Narwhal Jeff Cross and Victor Savkin about Nx and Nx Cloud. But first, we check in with Jeff, who you may not know, has and cuddles with pigs, and Victor, who is a new father.<br /><br />Nx Cloud is a way for you to enable distributed computation cache such that you, your team, and your Continuous Integration (CI) can share build artifacts. Practically speaking, this results in saving you and your organization time when building and testing your application.<br />You might be wondering, what exactly is computation cache? Victor breaks this down for us and shares how Nx tackles this, and further, how we can use Nx cloud to distribute the computation cache across a team, including CI.<br /><br />To get started, you'll need to be using Nx, which not only tackles computation cache, but is a tool for implementing a monorepo strategy. Then, set up Nx Cloud with an access token in your config for distributing the cache.",
            "contentSnippet": "The Angular Show panelists (Aaron Frost, Brian Love, Alisa Nicoll, and Shai Reznik) chat with the co-founders of Narwhal Jeff Cross and Victor Savkin about Nx and Nx Cloud. But first, we check in with Jeff, who you may not know, has and cuddles with pigs, and Victor, who is a new father.\nNx Cloud is a way for you to enable distributed computation cache such that you, your team, and your Continuous Integration (CI) can share build artifacts. Practically speaking, this results in saving you and your organization time when building and testing your application.\nYou might be wondering, what exactly is computation cache? Victor breaks this down for us and shares how Nx tackles this, and further, how we can use Nx cloud to distribute the computation cache across a team, including CI.\nTo get started, you'll need to be using Nx, which not only tackles computation cache, but is a tool for implementing a monorepo strategy. Then, set up Nx Cloud with an access token in your config for distributing the cache.",
            "enclosure": {
                "length": "60348574",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/39865557/nx_nx_xloud_victor_savkin_jeff_cross_edit_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/39865557",
            "isoDate": "2020-07-28T14:56:33.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3772",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developer,development,monorepo,monorepos,narwhal.io,nrwl,nx,nxcloud,programmer,programming",
                "subtitle": "The Angular Show panelists (Aaron Frost, Brian Love, Alisa Nicoll, and Shai Reznik) chat with the co-founders of Narwhal Jeff Cross and Victor Savkin about Nx and Nx Cloud. But first, we check in with Jeff, who you may not know, has and cuddles with...",
                "summary": "The Angular Show panelists (Aaron Frost, Brian Love, Alisa Nicoll, and Shai Reznik) chat with the co-founders of Narwhal Jeff Cross and Victor Savkin about Nx and Nx Cloud. But first, we check in with Jeff, who you may not know, has and cuddles with pigs, and Victor, who is a new father.<br /><br />Nx Cloud is a way for you to enable distributed computation cache such that you, your team, and your Continuous Integration (CI) can share build artifacts. Practically speaking, this results in saving you and your organization time when building and testing your application.<br />You might be wondering, what exactly is computation cache? Victor breaks this down for us and shares how Nx tackles this, and further, how we can use Nx cloud to distribute the computation cache across a team, including CI.<br /><br />To get started, you'll need to be using Nx, which not only tackles computation cache, but is a tool for implementing a monorepo strategy. Then, set up Nx Cloud with an access token in your config for distributing the cache."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e021-nx-nx-cloud",
            "pubDate": "Tue, 28 Jul 2020 14:56:33 +0000",
            "title": "E021 - NX + NX Cloud",
            "entities": {
                "WORK_OF_ART": [
                    "The Angular Show"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Brian Love",
                    "Alisa Nicoll",
                    "Shai Reznik",
                    "Victor Savkin",
                    "Nx Cloud",
                    "Jeff",
                    "Victor",
                    "Cloud",
                    "Continuous Integration"
                ],
                "ORG": [
                    "Narwhal Jeff Cross",
                    "CI"
                ],
                "ORDINAL": [
                    "first"
                ]
            }
        },
        {
            "content": "Angular is not just a product, it's also a community. We firmly believe that a community is one in which everyone is welcome, and, further, one in which everyone has the right to feel comfortable and accepted. This is what makes a community.<br /><br />There's been a lot of unrest in the community as former Angular team members have shared perspectives and as community members question the future of Angular. In this episode of the Angular Show, panelists Aaron Frost, Brian Love, & Jennifer Wadella talk with Stephen Fluin, head of developer relations on the Angular Team at Google, and ask the hard questions that we've heard are on your minds. <br /><br />If you've been reading Twitter or blogs recently you may have been wanting to ask what team member departures mean for the future of Angular, the future of your Angular-dependent projects and clients, what is being done to address team attrition, where the Angular roadmap is, or what is the status of the backlog of Angular issues. In an effort of transparency, growth, and healing, we voiced your concerns and asked your questions. While we love the Angular product, we love the Angular community equally as much and know that healthy conversation, and sometimes criticism, is the path towards a thriving ecosystem. So now, it's your turn to listen. We covered a lot, but if we didn't ask a question that you think we should have, let us know.",
            "contentSnippet": "Angular is not just a product, it's also a community. We firmly believe that a community is one in which everyone is welcome, and, further, one in which everyone has the right to feel comfortable and accepted. This is what makes a community.\nThere's been a lot of unrest in the community as former Angular team members have shared perspectives and as community members question the future of Angular. In this episode of the Angular Show, panelists Aaron Frost, Brian Love, & Jennifer Wadella talk with Stephen Fluin, head of developer relations on the Angular Team at Google, and ask the hard questions that we've heard are on your minds. \nIf you've been reading Twitter or blogs recently you may have been wanting to ask what team member departures mean for the future of Angular, the future of your Angular-dependent projects and clients, what is being done to address team attrition, where the Angular roadmap is, or what is the status of the backlog of Angular issues. In an effort of transparency, growth, and healing, we voiced your concerns and asked your questions. While we love the Angular product, we love the Angular community equally as much and know that healthy conversation, and sometimes criticism, is the path towards a thriving ecosystem. So now, it's your turn to listen. We covered a lot, but if we didn't ask a question that you think we should have, let us know.",
            "enclosure": {
                "length": "75319408",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/39909679/tas_angular_team_talk_edit_1_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/39909679",
            "isoDate": "2020-07-23T16:32:44.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4708",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,code,coding,developers,development,javascript,programming",
                "subtitle": "Angular is not just a product, it's also a community. We firmly believe that a community is one in which everyone is welcome, and, further, one in which everyone has the right to feel comfortable and accepted. This is what makes a community.\n\nThere's...",
                "summary": "Angular is not just a product, it's also a community. We firmly believe that a community is one in which everyone is welcome, and, further, one in which everyone has the right to feel comfortable and accepted. This is what makes a community.<br /><br />There's been a lot of unrest in the community as former Angular team members have shared perspectives and as community members question the future of Angular. In this episode of the Angular Show, panelists Aaron Frost, Brian Love, & Jennifer Wadella talk with Stephen Fluin, head of developer relations on the Angular Team at Google, and ask the hard questions that we've heard are on your minds. <br /><br />If you've been reading Twitter or blogs recently you may have been wanting to ask what team member departures mean for the future of Angular, the future of your Angular-dependent projects and clients, what is being done to address team attrition, where the Angular roadmap is, or what is the status of the backlog of Angular issues. In an effort of transparency, growth, and healing, we voiced your concerns and asked your questions. While we love the Angular product, we love the Angular community equally as much and know that healthy conversation, and sometimes criticism, is the path towards a thriving ecosystem. So now, it's your turn to listen. We covered a lot, but if we didn't ask a question that you think we should have, let us know."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e020-bridging-communication-between-the-",
            "pubDate": "Thu, 23 Jul 2020 16:32:44 +0000",
            "title": "E020 - Bridging Communication Between the Angular Team and the Community",
            "entities": {
                "CARDINAL": [
                    "one"
                ],
                "WORK_OF_ART": [
                    "the Angular Show"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Brian Love",
                    "Jennifer Wadella",
                    "Stephen Fluin"
                ],
                "ORG": [
                    "the Angular Team at Google"
                ],
                "PRODUCT": [
                    "Twitter"
                ]
            }
        },
        {
            "content": "This episode features Sani Yusuf, a Google Developer Expert and comedian (but not a dancer) who is currently located in London, England, but is originally from Nigeria. Sani teaches us about component inheritance in Angular. Join panelists Aaron Frost, Brian Love, Alyssa Nicoll, and Jennifer Wadella as we tackle the complexities, advantages, and disadvantages, of using class inheritance in Angular.<br /><br />While you may be familiar with class-based inheritance in TypeScript, or potentially other object-oriented programming languages, it is often rare for Angular developers to leverage inheritance in their projects. Sani and the panel surface how Angular developers can leverage inheritance, abstractions, and composition for efficient strategies for solving challenges in our projects.<br /><br />A key takeaway that Sani teaches us is that we should not be chasing after the use of inheritance in our Angular projects, rather, inheritance opportunities will announce themselves in your projects. When you find yourself duplicating code, or needing to manipulate data or behaviors in components, this could be a potential use case for abstraction or inheritance.<br /><br />Finally, the panelists share some of their favorite streaming shows that they are loving when staying at home. Plus, as as an added bonus, Jennifer shares with us a recipe for gooey butter cake.",
            "contentSnippet": "This episode features Sani Yusuf, a Google Developer Expert and comedian (but not a dancer) who is currently located in London, England, but is originally from Nigeria. Sani teaches us about component inheritance in Angular. Join panelists Aaron Frost, Brian Love, Alyssa Nicoll, and Jennifer Wadella as we tackle the complexities, advantages, and disadvantages, of using class inheritance in Angular.\nWhile you may be familiar with class-based inheritance in TypeScript, or potentially other object-oriented programming languages, it is often rare for Angular developers to leverage inheritance in their projects. Sani and the panel surface how Angular developers can leverage inheritance, abstractions, and composition for efficient strategies for solving challenges in our projects.\nA key takeaway that Sani teaches us is that we should not be chasing after the use of inheritance in our Angular projects, rather, inheritance opportunities will announce themselves in your projects. When you find yourself duplicating code, or needing to manipulate data or behaviors in components, this could be a potential use case for abstraction or inheritance.\nFinally, the panelists share some of their favorite streaming shows that they are loving when staying at home. Plus, as as an added bonus, Jennifer shares with us a recipe for gooey butter cake.",
            "enclosure": {
                "length": "53976344",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/39865555/component_inheritance_sani_yusef_raw_1.mp3"
            },
            "guid": "https://api.spreaker.com/episode/39865555",
            "isoDate": "2020-07-21T14:02:06.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3374",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,coding,components,development,javascript,ngconf,programming,technology",
                "subtitle": "This episode features Sani Yusuf, a Google Developer Expert and comedian (but not a dancer) who is currently located in London, England, but is originally from Nigeria. Sani teaches us about component inheritance in Angular. Join panelists Aaron...",
                "summary": "This episode features Sani Yusuf, a Google Developer Expert and comedian (but not a dancer) who is currently located in London, England, but is originally from Nigeria. Sani teaches us about component inheritance in Angular. Join panelists Aaron Frost, Brian Love, Alyssa Nicoll, and Jennifer Wadella as we tackle the complexities, advantages, and disadvantages, of using class inheritance in Angular.<br /><br />While you may be familiar with class-based inheritance in TypeScript, or potentially other object-oriented programming languages, it is often rare for Angular developers to leverage inheritance in their projects. Sani and the panel surface how Angular developers can leverage inheritance, abstractions, and composition for efficient strategies for solving challenges in our projects.<br /><br />A key takeaway that Sani teaches us is that we should not be chasing after the use of inheritance in our Angular projects, rather, inheritance opportunities will announce themselves in your projects. When you find yourself duplicating code, or needing to manipulate data or behaviors in components, this could be a potential use case for abstraction or inheritance.<br /><br />Finally, the panelists share some of their favorite streaming shows that they are loving when staying at home. Plus, as as an added bonus, Jennifer shares with us a recipe for gooey butter cake."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e019-component-inheritance",
            "pubDate": "Tue, 21 Jul 2020 14:02:06 +0000",
            "title": "E019 - Component Inheritance",
            "entities": {
                "PERSON": [
                    "Sani Yusuf",
                    "Aaron Frost",
                    "Brian Love",
                    "Alyssa Nicoll",
                    "Jennifer Wadella",
                    "Jennifer"
                ],
                "GPE": [
                    "London",
                    "England",
                    "Nigeria"
                ],
                "ORG": [
                    "TypeScript"
                ],
                "NORP": [
                    "Sani"
                ]
            }
        },
        {
            "content": "In this episode, Kseniya Lifanova from Upstate Interactive joins panelists Aaron Frost, Alyssa Nicoll, Brian Love, and Shai Reznik to share her insights on Women in Technology. Kseniya's background is in business and finance, and after about 7 years in accountancy and finance, she found her passion for technology.<br /><br />She attended an introduction to web development night-school and fell in love with building things. But, one of the first things she noticed in tech, was that it was mostly men. She decided to co-found a women-in-tech coding group in Syracuse, NY to teach other women about technology, coding, and the web. You might be wondering, why are there women-specific groups? Kseniya shares with us the intimidation that some women feel when attending events that are predominantly attended by men. She also shares how she wanted to learn with and be around other women.<br /><br />If you're an organizer for a meetup, event, conference, or other event, this episode is critical to listen to. Join us as we learn from Kseniya how we can lower barriers to entry, make women feel comfortable and invited, and lift up women in technology.<br /><br />Show Notes:<br />\u25ba <a href=\"https://www.nytimes.com/2019/02/13/magazine/women-coding-computer-programming.html\" rel=\"noopener\">https://www.nytimes.com/2019/02/13/magazine/women-coding-computer-programming.html</a><br />\u25ba <a href=\"https://www.amazon.com/Accidental-Superpower-Generation-American-Preeminence/dp/1455583685\" rel=\"noopener\">https://www.amazon.com/Accidental-Superpower-Generation-American-Preeminence/dp/1455583685</a>",
            "contentSnippet": "In this episode, Kseniya Lifanova from Upstate Interactive joins panelists Aaron Frost, Alyssa Nicoll, Brian Love, and Shai Reznik to share her insights on Women in Technology. Kseniya's background is in business and finance, and after about 7 years in accountancy and finance, she found her passion for technology.\nShe attended an introduction to web development night-school and fell in love with building things. But, one of the first things she noticed in tech, was that it was mostly men. She decided to co-found a women-in-tech coding group in Syracuse, NY to teach other women about technology, coding, and the web. You might be wondering, why are there women-specific groups? Kseniya shares with us the intimidation that some women feel when attending events that are predominantly attended by men. She also shares how she wanted to learn with and be around other women.\nIf you're an organizer for a meetup, event, conference, or other event, this episode is critical to listen to. Join us as we learn from Kseniya how we can lower barriers to entry, make women feel comfortable and invited, and lift up women in technology.\nShow Notes:\n\u25ba https://www.nytimes.com/2019/02/13/magazine/women-coding-computer-programming.html\n\u25ba https://www.amazon.com/Accidental-Superpower-Generation-American-Preeminence/dp/1455583685",
            "enclosure": {
                "length": "58838466",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/39864082/women_in_tech_ksenyia_lifanova_edit_2.mp3"
            },
            "guid": "https://api.spreaker.com/episode/39864082",
            "isoDate": "2020-07-20T14:17:09.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3678",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,coding,development,equality,equity,javascript,programming,technology,women",
                "subtitle": "In this episode, Kseniya Lifanova from Upstate Interactive joins panelists Aaron Frost, Alyssa Nicoll, Brian Love, and Shai Reznik to share her insights on Women in Technology. Kseniya's background is in business and finance, and after about 7 years...",
                "summary": "In this episode, Kseniya Lifanova from Upstate Interactive joins panelists Aaron Frost, Alyssa Nicoll, Brian Love, and Shai Reznik to share her insights on Women in Technology. Kseniya's background is in business and finance, and after about 7 years in accountancy and finance, she found her passion for technology.<br /><br />She attended an introduction to web development night-school and fell in love with building things. But, one of the first things she noticed in tech, was that it was mostly men. She decided to co-found a women-in-tech coding group in Syracuse, NY to teach other women about technology, coding, and the web. You might be wondering, why are there women-specific groups? Kseniya shares with us the intimidation that some women feel when attending events that are predominantly attended by men. She also shares how she wanted to learn with and be around other women.<br /><br />If you're an organizer for a meetup, event, conference, or other event, this episode is critical to listen to. Join us as we learn from Kseniya how we can lower barriers to entry, make women feel comfortable and invited, and lift up women in technology.<br /><br />Show Notes:<br />\u25ba <a href=\"https://www.nytimes.com/2019/02/13/magazine/women-coding-computer-programming.html\" rel=\"noopener\">https://www.nytimes.com/2019/02/13/magazine/women-coding-computer-programming.html</a><br />\u25ba <a href=\"https://www.amazon.com/Accidental-Superpower-Generation-American-Preeminence/dp/1455583685\" rel=\"noopener\">https://www.amazon.com/Accidental-Superpower-Generation-American-Preeminence/dp/1455583685</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e018-women-in-tech_1",
            "pubDate": "Mon, 20 Jul 2020 14:17:09 +0000",
            "title": "E018 - Women in Tech",
            "entities": {
                "PERSON": [
                    "Kseniya Lifanova",
                    "Aaron Frost",
                    "Alyssa Nicoll",
                    "Brian Love",
                    "Shai Reznik",
                    "Kseniya",
                    "Kseniya",
                    "Kseniya"
                ],
                "ORG": [
                    "Upstate Interactive",
                    "NY"
                ],
                "DATE": [
                    "about 7 years"
                ],
                "CARDINAL": [
                    "one"
                ],
                "ORDINAL": [
                    "first"
                ],
                "GPE": [
                    "Syracuse"
                ]
            }
        },
        {
            "content": "In this episode, Jeff Whelpley, Google Developer Expert in Angular, shares his expansive knowledge of Search Engine Optimization (SEO) with panelists Aaron Frost, Alyssa Nicol, Brian Love, and Jennifer Wadella. We talk about some of the basics of on-page optimizations such as Time to Interactive, First Meaningful Paint, etc. and the implications for Angular applications.<br /><br />Angular applications, in the context of the browser, are client-based and are built in the browser at runtime. While this provides many benefits to the user experience, it also comes with several challenges for SEO. Aaron and Jeff share some insight into these challenges, as well as the current solutions, including Scully for static prerendering and Angular Universal for server-side rendering.<br /><br />Finally, Jeff shares with us what Angular developers can do to optimize their applications for improved search engine result page rankings, including duplicated content, meta information, interlinking pages, crawl budgets, indexing, inbound links to leaf pages, and more.",
            "contentSnippet": "In this episode, Jeff Whelpley, Google Developer Expert in Angular, shares his expansive knowledge of Search Engine Optimization (SEO) with panelists Aaron Frost, Alyssa Nicol, Brian Love, and Jennifer Wadella. We talk about some of the basics of on-page optimizations such as Time to Interactive, First Meaningful Paint, etc. and the implications for Angular applications.\nAngular applications, in the context of the browser, are client-based and are built in the browser at runtime. While this provides many benefits to the user experience, it also comes with several challenges for SEO. Aaron and Jeff share some insight into these challenges, as well as the current solutions, including Scully for static prerendering and Angular Universal for server-side rendering.\nFinally, Jeff shares with us what Angular developers can do to optimize their applications for improved search engine result page rankings, including duplicated content, meta information, interlinking pages, crawl budgets, indexing, inbound links to leaf pages, and more.",
            "enclosure": {
                "length": "109326778",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/28570737/e015_angular_and_seo.mp3"
            },
            "guid": "https://api.spreaker.com/episode/28570737",
            "isoDate": "2020-07-13T15:25:49.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4561",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,javascript,seo,typescript",
                "subtitle": "In this episode, Jeff Whelpley, Google Developer Expert in Angular, shares his expansive knowledge of Search Engine Optimization (SEO) with panelists Aaron Frost, Alyssa Nicol, Brian Love, and Jennifer Wadella. We talk about some of the basics of...",
                "summary": "In this episode, Jeff Whelpley, Google Developer Expert in Angular, shares his expansive knowledge of Search Engine Optimization (SEO) with panelists Aaron Frost, Alyssa Nicol, Brian Love, and Jennifer Wadella. We talk about some of the basics of on-page optimizations such as Time to Interactive, First Meaningful Paint, etc. and the implications for Angular applications.<br /><br />Angular applications, in the context of the browser, are client-based and are built in the browser at runtime. While this provides many benefits to the user experience, it also comes with several challenges for SEO. Aaron and Jeff share some insight into these challenges, as well as the current solutions, including Scully for static prerendering and Angular Universal for server-side rendering.<br /><br />Finally, Jeff shares with us what Angular developers can do to optimize their applications for improved search engine result page rankings, including duplicated content, meta information, interlinking pages, crawl budgets, indexing, inbound links to leaf pages, and more."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e017-angular-and-seo",
            "pubDate": "Mon, 13 Jul 2020 15:25:49 +0000",
            "title": "E017 - Angular and SEO",
            "entities": {
                "PERSON": [
                    "Jeff Whelpley",
                    "Aaron Frost",
                    "Alyssa Nicol",
                    "Brian Love",
                    "Jennifer Wadella",
                    "Aaron",
                    "Jeff",
                    "Angular Universal",
                    "Jeff"
                ],
                "ORG": [
                    "Google Developer Expert",
                    "Search Engine Optimization",
                    "Time",
                    "First Meaningful Paint",
                    "SEO",
                    "meta"
                ]
            }
        },
        {
            "content": "In this episode, Sam Julien, Google Developer Expert in Angular, Auth0 developer advocate, and expert (blue belt \ud83e\udd4b) in authentication, shares\u00a0best practices for authentication and security in Angular.<br /><br />Authentication is necessary for most applications, but often, is either an afterthought or a once-and-done feature. This leads to potential issues as the security landscape shifts. While you _can_ roll your own solution for authentication, generating, validating, and refreshing token, an identity solution from a third-party provider may be something you want to consider. An identity service allows teams to focus on building apps and features, outsourcing the complexities of authentication using a JavaScript SDK. Sam walks us through implementing authentication in Angular using HTTP interceptors, route guards, storing authentication tokens, and state.<br /><br />Panelists Aaron Frost,\u00a0Jennifer Wadella, &\u00a0Brian Love\u00a0then segue into recapping ng-conf: Hardwired 2020, which you can enjoy in its full talk-by-talk entirety\u00a0at <a href=\"https://videos.ng-conf.org/\" rel=\"noopener\">https://videos.ng-conf.org/</a>.",
            "contentSnippet": "In this episode, Sam Julien, Google Developer Expert in Angular, Auth0 developer advocate, and expert (blue belt \ud83e\udd4b) in authentication, shares\u00a0best practices for authentication and security in Angular.\nAuthentication is necessary for most applications, but often, is either an afterthought or a once-and-done feature. This leads to potential issues as the security landscape shifts. While you _can_ roll your own solution for authentication, generating, validating, and refreshing token, an identity solution from a third-party provider may be something you want to consider. An identity service allows teams to focus on building apps and features, outsourcing the complexities of authentication using a JavaScript SDK. Sam walks us through implementing authentication in Angular using HTTP interceptors, route guards, storing authentication tokens, and state.\nPanelists Aaron Frost,\u00a0Jennifer Wadella, &\u00a0Brian Love\u00a0then segue into recapping ng-conf: Hardwired 2020, which you can enjoy in its full talk-by-talk entirety\u00a0at https://videos.ng-conf.org/.",
            "enclosure": {
                "length": "73621208",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/28571065/e016_authentication_and_authorization_in_angular_and_ngrx.mp3"
            },
            "guid": "https://api.spreaker.com/episode/28571065",
            "isoDate": "2020-07-09T15:59:26.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3071",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,authentication,authorization,javascript,ng-conf,ngrx,oidc,pkce,typescript",
                "subtitle": "In this episode, Sam Julien, Google Developer Expert in Angular, Auth0 developer advocate, and expert (blue belt \ud83e\udd4b) in authentication, shares\u00a0best practices for authentication and security in Angular.\n\nAuthentication is necessary for most...",
                "summary": "In this episode, Sam Julien, Google Developer Expert in Angular, Auth0 developer advocate, and expert (blue belt \ud83e\udd4b) in authentication, shares\u00a0best practices for authentication and security in Angular.<br /><br />Authentication is necessary for most applications, but often, is either an afterthought or a once-and-done feature. This leads to potential issues as the security landscape shifts. While you _can_ roll your own solution for authentication, generating, validating, and refreshing token, an identity solution from a third-party provider may be something you want to consider. An identity service allows teams to focus on building apps and features, outsourcing the complexities of authentication using a JavaScript SDK. Sam walks us through implementing authentication in Angular using HTTP interceptors, route guards, storing authentication tokens, and state.<br /><br />Panelists Aaron Frost,\u00a0Jennifer Wadella, &\u00a0Brian Love\u00a0then segue into recapping ng-conf: Hardwired 2020, which you can enjoy in its full talk-by-talk entirety\u00a0at <a href=\"https://videos.ng-conf.org/\" rel=\"noopener\">https://videos.ng-conf.org/</a>."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e016-authentication-and-authorization-in",
            "pubDate": "Thu, 09 Jul 2020 15:59:26 +0000",
            "title": "E016 - Authentication and Authorization in Angular",
            "entities": {
                "PERSON": [
                    "Sam Julien",
                    "Aaron Frost",
                    "Jennifer Wadella"
                ],
                "ORDINAL": [
                    "third"
                ],
                "PRODUCT": [
                    "a JavaScript SDK"
                ],
                "DATE": [
                    "2020"
                ]
            }
        },
        {
            "content": "In this episode, panelists Aaron Frost, Brian Love, and Jennifer Wadella cover the details on the recently released version 10 of Angular, plus, why you should always wear an aluminum foil hat. At this point, you might be asking yourself, wait, what? Yeah, we did the math and summed the even character ASCII codes from the changelog, and it all pointed us to this revelation. You're welcome.<br /><br />On a more serious note, this episode is jam-packed with fun and knowledge. While Angular 10 contained a few features, some deprecations, and a future-looking focus on resolving issues and maintaining dependencies, the panelists walk through the details that we should know as Angular developers.<br /><br />Finally, the panelists review some feedback on previous episodes and talk through becoming a Google Developer Expert (GDE) in Angular as well as imposter syndrome. Thank you for listening, and don't forget to subscribe!",
            "contentSnippet": "In this episode, panelists Aaron Frost, Brian Love, and Jennifer Wadella cover the details on the recently released version 10 of Angular, plus, why you should always wear an aluminum foil hat. At this point, you might be asking yourself, wait, what? Yeah, we did the math and summed the even character ASCII codes from the changelog, and it all pointed us to this revelation. You're welcome.\nOn a more serious note, this episode is jam-packed with fun and knowledge. While Angular 10 contained a few features, some deprecations, and a future-looking focus on resolving issues and maintaining dependencies, the panelists walk through the details that we should know as Angular developers.\nFinally, the panelists review some feedback on previous episodes and talk through becoming a Google Developer Expert (GDE) in Angular as well as imposter syndrome. Thank you for listening, and don't forget to subscribe!",
            "enclosure": {
                "length": "63443978",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/37306713/the_angular_show_episode_15_angular_10_edit_3.mp3"
            },
            "guid": "https://api.spreaker.com/episode/37306713",
            "isoDate": "2020-07-07T19:18:15.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3966",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,coding,development,google,programming",
                "subtitle": "In this episode, panelists Aaron Frost, Brian Love, and Jennifer Wadella cover the details on the recently released version 10 of Angular, plus, why you should always wear an aluminum foil hat. At this point, you might be asking yourself, wait, what?...",
                "summary": "In this episode, panelists Aaron Frost, Brian Love, and Jennifer Wadella cover the details on the recently released version 10 of Angular, plus, why you should always wear an aluminum foil hat. At this point, you might be asking yourself, wait, what? Yeah, we did the math and summed the even character ASCII codes from the changelog, and it all pointed us to this revelation. You're welcome.<br /><br />On a more serious note, this episode is jam-packed with fun and knowledge. While Angular 10 contained a few features, some deprecations, and a future-looking focus on resolving issues and maintaining dependencies, the panelists walk through the details that we should know as Angular developers.<br /><br />Finally, the panelists review some feedback on previous episodes and talk through becoming a Google Developer Expert (GDE) in Angular as well as imposter syndrome. Thank you for listening, and don't forget to subscribe!"
            },
            "link": "https://www.spreaker.com/user/ng-conf/the-angular-show-episode-15-angular-10-e_1",
            "pubDate": "Tue, 07 Jul 2020 19:18:15 +0000",
            "title": "E015 - Angular 10",
            "entities": {
                "PERSON": [
                    "Aaron Frost",
                    "Brian Love",
                    "Jennifer Wadella"
                ],
                "CARDINAL": [
                    "10"
                ],
                "ORG": [
                    "ASCII"
                ]
            }
        },
        {
            "content": "Aaron Frost and the panel discuss ngx-element and web components in Angular.<br /><br />Show Notes:<br />\u25ba <a href=\"https://github.com/brunob15/ngx-element\" rel=\"noopener\">https://github.com/brunob15/ngx-element</a><br />\u25ba <a href=\"https://github.com/juristr/ngx-lazy-el\" rel=\"noopener\">https://github.com/juristr/ngx-lazy-el</a><br />\u25ba <a href=\"https://github.com/brunob15/ngx-element/blob/master/projects/ngx-element/src/lib/ngx-element.module.ts\" rel=\"noopener\">https://github.com/brunob15/ngx-element/blob/master/projects/ngx-element/src/lib/ngx-element.module.ts</a><br />\u25ba <a href=\"https://blog.nrwl.io/5-reasons-to-use-angular-elements-390c9a629f89\" rel=\"noopener\">https://blog.nrwl.io/5-reasons-to-use-angular-elements-390c9a629f89</a><br />\u25ba <a href=\"https://youtu.be/kKW0aAOVHAo?t=1472\" rel=\"noopener\">https://youtu.be/kKW0aAOVHAo?t=1472</a>",
            "contentSnippet": "Aaron Frost and the panel discuss ngx-element and web components in Angular.\nShow Notes:\n\u25ba https://github.com/brunob15/ngx-element\n\u25ba https://github.com/juristr/ngx-lazy-el\n\u25ba https://github.com/brunob15/ngx-element/blob/master/projects/ngx-element/src/lib/ngx-element.module.ts\n\u25ba https://blog.nrwl.io/5-reasons-to-use-angular-elements-390c9a629f89\n\u25ba https://youtu.be/kKW0aAOVHAo?t=1472",
            "enclosure": {
                "length": "58177235",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/28563785/e014_angular_elements_with_ngx_element.mp3"
            },
            "guid": "https://api.spreaker.com/episode/28563785",
            "isoDate": "2020-07-02T14:27:49.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "2427",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,javascript,typescript,webcomponent",
                "subtitle": "Aaron Frost and the panel discuss ngx-element and web components in Angular.\n\nShow Notes:\n\u25ba https://github.com/brunob15/ngx-element\n\u25ba https://github.com/juristr/ngx-lazy-el\n\u25ba...",
                "summary": "Aaron Frost and the panel discuss ngx-element and web components in Angular.<br /><br />Show Notes:<br />\u25ba <a href=\"https://github.com/brunob15/ngx-element\" rel=\"noopener\">https://github.com/brunob15/ngx-element</a><br />\u25ba <a href=\"https://github.com/juristr/ngx-lazy-el\" rel=\"noopener\">https://github.com/juristr/ngx-lazy-el</a><br />\u25ba <a href=\"https://github.com/brunob15/ngx-element/blob/master/projects/ngx-element/src/lib/ngx-element.module.ts\" rel=\"noopener\">https://github.com/brunob15/ngx-element/blob/master/projects/ngx-element/src/lib/ngx-element.module.ts</a><br />\u25ba <a href=\"https://blog.nrwl.io/5-reasons-to-use-angular-elements-390c9a629f89\" rel=\"noopener\">https://blog.nrwl.io/5-reasons-to-use-angular-elements-390c9a629f89</a><br />\u25ba <a href=\"https://youtu.be/kKW0aAOVHAo?t=1472\" rel=\"noopener\">https://youtu.be/kKW0aAOVHAo?t=1472</a>"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e014-angular-elements-with-ngx-element",
            "pubDate": "Thu, 02 Jul 2020 14:27:49 +0000",
            "title": "E014 - Angular Elements with ngx-element",
            "entities": {
                "PERSON": [
                    "Aaron Frost"
                ],
                "ORG": [
                    "href=\"https://github.com",
                    "href=\"https://github.com",
                    "href=\"https://github.com",
                    "rel=\"noopener\">https://youtu.be/kKW0aAOVHAo?t=1472</a"
                ]
            }
        },
        {
            "content": "Show panelists and Google Developer Experts (GDE)\u00a0Aaron Frost,\u00a0Alyssa Nicoll, Jennifer Wadella, &\u00a0Brian Love\u00a0share their stories about getting into the GDE program, why they joined, and how it's benefitted their careers.\u00a0<br /><br />Listen in on the show to learn how the GDE program can help boost your career and opportunities as well!",
            "contentSnippet": "Show panelists and Google Developer Experts (GDE)\u00a0Aaron Frost,\u00a0Alyssa Nicoll, Jennifer Wadella, &\u00a0Brian Love\u00a0share their stories about getting into the GDE program, why they joined, and how it's benefitted their careers.\u00a0\nListen in on the show to learn how the GDE program can help boost your career and opportunities as well!",
            "enclosure": {
                "length": "86863448",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/28562990/e013_the_gde_program.mp3"
            },
            "guid": "https://api.spreaker.com/episode/28562990",
            "isoDate": "2020-06-30T15:17:14.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3624",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,coding,gde,google,programming",
                "subtitle": "Show panelists and Google Developer Experts (GDE)\u00a0Aaron Frost,\u00a0Alyssa Nicoll, Jennifer Wadella, &\u00a0Brian Love\u00a0share their stories about getting into the GDE program, why they joined, and how it's benefitted their careers.\u00a0\n\nListen in on the show to...",
                "summary": "Show panelists and Google Developer Experts (GDE)\u00a0Aaron Frost,\u00a0Alyssa Nicoll, Jennifer Wadella, &\u00a0Brian Love\u00a0share their stories about getting into the GDE program, why they joined, and how it's benefitted their careers.\u00a0<br /><br />Listen in on the show to learn how the GDE program can help boost your career and opportunities as well!"
            },
            "link": "https://www.spreaker.com/user/ng-conf/e013-the-gde-program",
            "pubDate": "Tue, 30 Jun 2020 15:17:14 +0000",
            "title": "E013 - The GDE Program",
            "entities": {
                "ORG": [
                    "Google Developer Experts",
                    "GDE",
                    "GDE",
                    "GDE"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Alyssa Nicoll",
                    "Jennifer Wadella"
                ]
            }
        },
        {
            "content": "Guest Loiane Groner talks about how NestJS and Angular make an excellent Full Stack developer experience.",
            "contentSnippet": "Guest Loiane Groner talks about how NestJS and Angular make an excellent Full Stack developer experience.",
            "enclosure": {
                "length": "93752714",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/28557894/e012_angular_plus_nestjs_equals_fullstackdev.mp3"
            },
            "guid": "https://api.spreaker.com/episode/28557894",
            "isoDate": "2020-06-22T16:00:13.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3912",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,fullstack,javascript,nestjs,typescript",
                "subtitle": "Guest Loiane Groner talks about how NestJS and Angular make an excellent Full Stack developer experience.",
                "summary": "Guest Loiane Groner talks about how NestJS and Angular make an excellent Full Stack developer experience."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e012-angular-plus-nestjs-equals-fullstac",
            "pubDate": "Mon, 22 Jun 2020 16:00:13 +0000",
            "title": "E012 - Angular plus NestJS equals FullStackDev",
            "entities": {
                "PERSON": [
                    "Guest Loiane Groner",
                    "Full Stack"
                ]
            }
        },
        {
            "content": "Aaron, Brian, and Jennifer talk about TypeScript and how to stay current with Angular technologies.",
            "contentSnippet": "Aaron, Brian, and Jennifer talk about TypeScript and how to stay current with Angular technologies.",
            "enclosure": {
                "length": "96776566",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/28553870/e011_typescript_and_staying_current_with_angular.mp3"
            },
            "guid": "https://api.spreaker.com/episode/28553870",
            "isoDate": "2020-06-19T21:13:47.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4038",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,javascript,typescript",
                "subtitle": "Aaron, Brian, and Jennifer talk about TypeScript and how to stay current with Angular technologies.",
                "summary": "Aaron, Brian, and Jennifer talk about TypeScript and how to stay current with Angular technologies."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e011-typescript-and-staying-current-with",
            "pubDate": "Fri, 19 Jun 2020 21:13:47 +0000",
            "title": "E011 - TypeScript and Staying Current with Angular",
            "entities": {
                "PERSON": [
                    "Aaron",
                    "Brian",
                    "Jennifer"
                ],
                "ORG": [
                    "TypeScript"
                ]
            }
        },
        {
            "content": "Guess Michi Dewitt and the team discuss state management in applications and how it can be implemented with observables.",
            "contentSnippet": "Guess Michi Dewitt and the team discuss state management in applications and how it can be implemented with observables.",
            "enclosure": {
                "length": "100564746",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/28553563/e010_state_management_with_observables.mp3"
            },
            "guid": "https://api.spreaker.com/episode/28553563",
            "isoDate": "2020-06-19T19:50:04.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4196",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,javascript,ngrx,observables,rxjs,typescript",
                "subtitle": "Guess Michi Dewitt and the team discuss state management in applications and how it can be implemented with observables.",
                "summary": "Guess Michi Dewitt and the team discuss state management in applications and how it can be implemented with observables."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e010-state-management-with-observables",
            "pubDate": "Fri, 19 Jun 2020 19:50:04 +0000",
            "title": "E010 - State Management With Observables",
            "entities": {
                "ORG": [
                    "Guess Michi Dewitt"
                ]
            }
        },
        {
            "content": "Guest Tracy Lee and the panel discuss several open source initiatives that are accessible and open to all developers.",
            "contentSnippet": "Guest Tracy Lee and the panel discuss several open source initiatives that are accessible and open to all developers.",
            "enclosure": {
                "length": "98202021",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/27920234/angularshowepisode9_mixdown.mp3"
            },
            "guid": "https://api.spreaker.com/episode/27920234",
            "isoDate": "2020-05-21T00:17:42.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4097",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,javascript,stackblitz,typescript",
                "subtitle": "Guest Tracy Lee and the panel discuss several open source initiatives that are accessible and open to all developers.",
                "summary": "Guest Tracy Lee and the panel discuss several open source initiatives that are accessible and open to all developers."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e009-open-source-for-all_1",
            "pubDate": "Thu, 21 May 2020 00:17:42 +0000",
            "title": "E009 - Open Source for All",
            "entities": {
                "PERSON": [
                    "Guest Tracy Lee"
                ]
            }
        },
        {
            "content": "Ward Bell and the podcast team discuss some of the common impediments related to Angular and how they can be overcome.",
            "contentSnippet": "Ward Bell and the podcast team discuss some of the common impediments related to Angular and how they can be overcome.",
            "enclosure": {
                "length": "105018317",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/27429411/angularshowepisode8_mixdown.mp3"
            },
            "guid": "https://api.spreaker.com/episode/27429411",
            "isoDate": "2020-05-18T12:00:02.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4382",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,javascript,typescript",
                "subtitle": "Ward Bell and the podcast team discuss some of the common impediments related to Angular and how they can be overcome.",
                "summary": "Ward Bell and the podcast team discuss some of the common impediments related to Angular and how they can be overcome."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e008-impediments-to-angular",
            "pubDate": "Mon, 18 May 2020 12:00:02 +0000",
            "title": "E008 - Impediments to Angular",
            "entities": {
                "PERSON": [
                    "Ward Bell"
                ]
            }
        },
        {
            "content": "A discussion on different approaches and pitfalls with security in Angular applications. Capabilities of Angular that assist in security implementation are discussed as well as using third party providers.",
            "contentSnippet": "A discussion on different approaches and pitfalls with security in Angular applications. Capabilities of Angular that assist in security implementation are discussed as well as using third party providers.",
            "enclosure": {
                "length": "102283105",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/27422406/angularshowepisode7_mixdown.mp3"
            },
            "guid": "https://api.spreaker.com/episode/27422406",
            "isoDate": "2020-05-15T16:05:45.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4268",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,javascript,security,typescript",
                "subtitle": "A discussion on different approaches and pitfalls with security in Angular applications. Capabilities of Angular that assist in security implementation are discussed as well as using third party providers.",
                "summary": "A discussion on different approaches and pitfalls with security in Angular applications. Capabilities of Angular that assist in security implementation are discussed as well as using third party providers."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e007-security-in-angular-applications",
            "pubDate": "Fri, 15 May 2020 16:05:45 +0000",
            "title": "E007 - Security in Angular Applications",
            "entities": {
                "ORDINAL": [
                    "third"
                ]
            }
        },
        {
            "content": "What is the JAMStack and why should you use it? Scully.io is presented as a great tool for creating static sites for the JAMStack in Angular.",
            "contentSnippet": "What is the JAMStack and why should you use it? Scully.io is presented as a great tool for creating static sites for the JAMStack in Angular.",
            "enclosure": {
                "length": "109544215",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/27413146/angularshowepisode6_mixdown.mp3"
            },
            "guid": "https://api.spreaker.com/episode/27413146",
            "isoDate": "2020-05-15T13:44:09.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4571",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,gatsby.js,jamstack,scully,typescript",
                "subtitle": "What is the JAMStack and why should you use it? Scully.io is presented as a great tool for creating static sites for the JAMStack in Angular.",
                "summary": "What is the JAMStack and why should you use it? Scully.io is presented as a great tool for creating static sites for the JAMStack in Angular."
            },
            "link": "https://www.spreaker.com/user/ng-conf/e006-the-jamstack-and-angular",
            "pubDate": "Fri, 15 May 2020 13:44:09 +0000",
            "title": "E006 - The JAMStack and Angular",
            "entities": {
                "PRODUCT": [
                    "JAMStack"
                ]
            }
        },
        {
            "content": "Alex Okrushko talks about maintaining NgRx in a large monorepo, just like he does at Google. Other discussions include push based services, some RxJS, and advanced typing in TypeScript.",
            "contentSnippet": "Alex Okrushko talks about maintaining NgRx in a large monorepo, just like he does at Google. Other discussions include push based services, some RxJS, and advanced typing in TypeScript.",
            "enclosure": {
                "length": "114268909",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/27067794/angularshowepisode5_mixdown.mp3"
            },
            "guid": "https://api.spreaker.com/episode/27067794",
            "isoDate": "2020-05-11T05:25:00.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "4768",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,javascript,ngrx,rxjs,typescript",
                "subtitle": "Alex Okrushko talks about maintaining NgRx in a large monorepo, just like he does at Google. Other discussions include push based services, some RxJS, and advanced typing in TypeScript.",
                "summary": "Alex Okrushko talks about maintaining NgRx in a large monorepo, just like he does at Google. Other discussions include push based services, some RxJS, and advanced typing in TypeScript."
            },
            "link": "https://www.spreaker.com/user/ng-conf/angularshowepisode5-mixdown",
            "pubDate": "Mon, 11 May 2020 05:25:00 +0000",
            "title": "E005 - Using NgRx in a large monorepo at Google",
            "entities": {
                "PERSON": [
                    "Alex Okrushko",
                    "NgRx"
                ],
                "GPE": [
                    "RxJS"
                ],
                "ORG": [
                    "TypeScript"
                ]
            }
        },
        {
            "content": "Angular Version 9 musical parody of \"Bad Guy\" by Billie Eilish. Lyrics by ng-conf organizer Owen Mecham @owenmecham and performed by his daughter Emma Mecham.",
            "contentSnippet": "Angular Version 9 musical parody of \"Bad Guy\" by Billie Eilish. Lyrics by ng-conf organizer Owen Mecham @owenmecham and performed by his daughter Emma Mecham.",
            "enclosure": {
                "length": "4708000",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/24755050/angular_v9_duh.mp3"
            },
            "guid": "https://api.spreaker.com/episode/24755050",
            "isoDate": "2020-04-02T20:17:45.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "196",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,typescript",
                "subtitle": "Angular Version 9 musical parody of \"Bad Guy\" by Billie Eilish. Lyrics by ng-conf organizer Owen Mecham @owenmecham and performed by his daughter Emma Mecham.",
                "summary": "Angular Version 9 musical parody of \"Bad Guy\" by Billie Eilish. Lyrics by ng-conf organizer Owen Mecham @owenmecham and performed by his daughter Emma Mecham."
            },
            "link": "https://www.spreaker.com/user/ng-conf/angular-v9-duh",
            "pubDate": "Thu, 02 Apr 2020 20:17:45 +0000",
            "title": "Angular V9 Duh (Musical Parody)",
            "entities": {
                "ORG": [
                    "Angular Version",
                    "ng-conf"
                ],
                "WORK_OF_ART": [
                    "Bad Guy"
                ],
                "PERSON": [
                    "Billie Eilish",
                    "Owen Mecham @owenmecham",
                    "Emma Mecham"
                ]
            }
        },
        {
            "content": "Mark Whitfeld talks about NGXS for state management, the hosts talk about mistakes, and a discussion about favorite holiday foods.",
            "contentSnippet": "Mark Whitfeld talks about NGXS for state management, the hosts talk about mistakes, and a discussion about favorite holiday foods.",
            "enclosure": {
                "length": "123702532",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/23770073/angular_show_episode_4.mp3"
            },
            "guid": "https://api.spreaker.com/episode/23770073",
            "isoDate": "2020-03-12T00:14:09.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "5162",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,javascript,ng-conf,ngxs,typescript",
                "subtitle": "Mark Whitfeld talks about NGXS for state management, the hosts talk about mistakes, and a discussion about favorite holiday foods.",
                "summary": "Mark Whitfeld talks about NGXS for state management, the hosts talk about mistakes, and a discussion about favorite holiday foods."
            },
            "link": "https://www.spreaker.com/user/ng-conf/angular-show-episode-4",
            "pubDate": "Thu, 12 Mar 2020 00:14:09 +0000",
            "title": "E004 - NGXS State Management in Angular",
            "entities": {
                "PERSON": [
                    "Mark Whitfeld"
                ]
            }
        },
        {
            "content": "Gleb Bahmutov talks about e2e testing Angular applications with Cypress.",
            "contentSnippet": "Gleb Bahmutov talks about e2e testing Angular applications with Cypress.",
            "enclosure": {
                "length": "94066712",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/23769881/angular_show_episode_3.mp3"
            },
            "guid": "https://api.spreaker.com/episode/23769881",
            "isoDate": "2020-03-11T23:57:43.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3925",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,cypress,e2e,javascript,ng-conf,testing,typescript",
                "subtitle": "Gleb Bahmutov talks about e2e testing Angular applications with Cypress.",
                "summary": "Gleb Bahmutov talks about e2e testing Angular applications with Cypress."
            },
            "link": "https://www.spreaker.com/user/ng-conf/angular-show-episode-3",
            "pubDate": "Wed, 11 Mar 2020 23:57:43 +0000",
            "title": "E003 - e2e Testing in Angular with Cypress",
            "entities": {
                "PERSON": [
                    "Gleb Bahmutov"
                ],
                "FAC": [
                    "Cypress"
                ]
            }
        },
        {
            "content": "Minko Gechev talks about how Angular 9 changes the future of Angular.",
            "contentSnippet": "Minko Gechev talks about how Angular 9 changes the future of Angular.",
            "enclosure": {
                "length": "91107256",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/23769770/angularshowepisode2_2_mixdown.mp3"
            },
            "guid": "https://api.spreaker.com/episode/23769770",
            "isoDate": "2020-03-11T23:45:25.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3802",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,ivy,javascript,ng-conf,typescript",
                "subtitle": "Minko Gechev talks about how Angular 9 changes the future of Angular.",
                "summary": "Minko Gechev talks about how Angular 9 changes the future of Angular."
            },
            "link": "https://www.spreaker.com/user/ng-conf/angularshowepisode2",
            "pubDate": "Wed, 11 Mar 2020 23:45:25 +0000",
            "title": "E002 - How Angular 9 Changes the Future of Angular",
            "entities": {
                "PERSON": [
                    "Minko Gechev"
                ]
            }
        },
        {
            "content": "The Angular Show hosts its premier podcast. The panelists (Aaron Frost, Joe Eames, Jennifer Wadella, Brian Love, Alyssa Nicoll, Shai Reznik) kick things off in true Angular-Community fashion. <br /><br />Guests Jeff Cross and Mike Hartington join the Angular Show hosts to discuss Angular 9, their favorite Angular bug, and the strangest conversation they've ever had with a stranger on a plane.<br /><br />* Don't forget to share this episode with your friends on social media.",
            "contentSnippet": "The Angular Show hosts its premier podcast. The panelists (Aaron Frost, Joe Eames, Jennifer Wadella, Brian Love, Alyssa Nicoll, Shai Reznik) kick things off in true Angular-Community fashion. \nGuests Jeff Cross and Mike Hartington join the Angular Show hosts to discuss Angular 9, their favorite Angular bug, and the strangest conversation they've ever had with a stranger on a plane.\n* Don't forget to share this episode with your friends on social media.",
            "enclosure": {
                "length": "75954706",
                "type": "audio/mpeg",
                "url": "https://api.spreaker.com/download/episode/23535197/angularshowepisode1_mixdown.mp3"
            },
            "guid": "https://api.spreaker.com/episode/23535197",
            "isoDate": "2020-03-08T01:05:31.000Z",
            "itunes": {
                "author": "ng-conf",
                "duration": "3170",
                "explicit": "clean",
                "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
                "keywords": "angular,angularshow,development,javascript,ng-conf,programming,rxjs,typescript",
                "subtitle": "The Angular Show hosts its premier podcast. The panelists (Aaron Frost, Joe Eames, Jennifer Wadella, Brian Love, Alyssa Nicoll, Shai Reznik) kick things off in true Angular-Community fashion. \n\nGuests Jeff Cross and Mike Hartington join the Angular...",
                "summary": "The Angular Show hosts its premier podcast. The panelists (Aaron Frost, Joe Eames, Jennifer Wadella, Brian Love, Alyssa Nicoll, Shai Reznik) kick things off in true Angular-Community fashion. <br /><br />Guests Jeff Cross and Mike Hartington join the Angular Show hosts to discuss Angular 9, their favorite Angular bug, and the strangest conversation they've ever had with a stranger on a plane.<br /><br />* Don't forget to share this episode with your friends on social media."
            },
            "link": "https://www.spreaker.com/user/ng-conf/ngshow-e001",
            "pubDate": "Sun, 08 Mar 2020 01:05:31 +0000",
            "title": "E001 - Angular Show Premier",
            "entities": {
                "WORK_OF_ART": [
                    "The Angular Show"
                ],
                "PERSON": [
                    "Aaron Frost",
                    "Joe Eames",
                    "Jennifer Wadella",
                    "Brian Love",
                    "Alyssa Nicoll",
                    "Shai Reznik",
                    "Jeff Cross",
                    "Mike Hartington"
                ],
                "PRODUCT": [
                    "Angular 9"
                ]
            }
        }
    ],
    "itunes": {
        "author": "ng-conf",
        "categories": [
            "Technology"
        ],
        "categoriesWithSubs": [
            {
                "name": "Technology",
                "subs": null
            }
        ],
        "explicit": "clean",
        "image": "https://d3wo5wojvuv7l.cloudfront.net/t_rss_itunes_square_1400/images.spreaker.com/original/0271956aa05833cb43519105dd2a9266.jpg",
        "owner": {
            "email": "info@ng-conf.org",
            "name": "ng-conf"
        },
        "subtitle": "The Angular Plus Show is the home of ng-conf's official all-Angular podcast. Come here to stay up to date on the latest changes in the Angular community. Expect to laugh and cry with us as we talk about our experiences as Angular developers.",
        "summary": "The Angular Plus Show is the home of ng-conf's official all-Angular podcast. Come here to stay up to date on the latest changes in the Angular community. Expect to laugh and cry with us as we talk about our experiences as Angular developers."
    },
    "language": "en",
    "lastBuildDate": "Tue, 19 Apr 2022 16:45:13 +0000",
    "link": "https://www.spreaker.com/show/angular-show",
    "paginationLinks": {
        "self": "https://www.spreaker.com/show/4175221/episodes/feed"
    },
    "palette": [
        "1D2035",
        "FAD460",
        "F1F1F2",
        "705C30",
        "6F707D",
        "888C93"
    ],
    "title": "The Angular Plus Show",
    "entities": {
        "WORK_OF_ART": [
            "The Angular Plus Show"
        ],
        "ORG": [
            "ng-conf's"
        ]
    }
}